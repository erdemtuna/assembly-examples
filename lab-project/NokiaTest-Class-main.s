;****************************************
; NokiaTest-Class-main.s
; Used to test Nokia5110-Class.s
; inlcude startup.s

  
;***************************************************************
; Program section					      
;***************************************************************
;LABEL		DIRECTIVE	VALUE			COMMENT
			AREA    |.text|, READONLY, CODE
			THUMB

imgCSU		
			; 2_1xxx.xxxx (data content)
			DCB		0xFF, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff ; 0:[0,13]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ; 0:[0,13]
 			DCB		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 0:[0,13]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 0:[0,13]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 0:[0,13]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff ; 0:[0,13]
			DCB		0x00, 0xE0, 0xF8, 0xF8, 0xFC, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x1E ; 1:[0,13]
			DCB		0xC0, 0xE0, 0x30, 0x10, 0x08, 0x08, 0x08, 0x10, 0x70, 0xE0, 0xC0, 0x02, 0xFE, 0xFE
			DCB		0xFE, 0x00, 0xC0, 0xE0, 0xF0, 0x30, 0x08, 0x08, 0x08, 0x08, 0x30, 0xE0, 0xE0, 0x80
			DCB		0x10, 0xF0, 0xF0, 0x40, 0x20, 0x30, 0x30, 0x70, 0x00, 0x20, 0x10, 0x10, 0x90, 0xB0
			DCB		0xF0, 0xE0, 0xE0, 0x00, 0xC0, 0xE0, 0x70, 0x10, 0x10, 0x10, 0x12, 0xFE, 0xFE, 0xFE
			DCB		0x00, 0xC0, 0xE0, 0xF0, 0x30, 0x08, 0x08, 0x08, 0x08, 0x10, 0xE0, 0xE0, 0xC0, 0x00
			DCB		0x00, 0x01, 0x07, 0x0F, 0x0F, 0x1C, 0x18, 0x10, 0x10, 0x10, 0x10, 0x08, 0x08, 0x04
			DCB		0x07, 0x0F, 0x0C, 0x10, 0x10, 0x10, 0x10, 0x98, 0xCE, 0xE7, 0x23, 0x10, 0x1F, 0x1F
			DCB		0x1F, 0x30, 0xE3, 0x07, 0x0F, 0x98, 0xF0, 0x10, 0x10, 0x10, 0x18, 0x0F, 0x07, 0x03
			DCB		0x10, 0x1F, 0x1F, 0x10, 0x10, 0x00, 0x00, 0x80, 0xEE, 0x1F, 0x1B, 0x11, 0x10, 0x08
			DCB		0x07, 0x1F, 0x1F, 0x10, 0x07, 0x0F, 0x1E, 0x18, 0x10, 0x10, 0x10, 0x1F, 0x1F, 0x1F
			DCB		0x10, 0x03, 0x07, 0x0F, 0x0C, 0x10, 0x10, 0x10, 0x10, 0x18, 0x0F, 0x07, 0x03, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x07, 0x0E, 0x1E, 0x3C, 0x78
			DCB		0xF8, 0xF0, 0xE1, 0x01, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x80, 0xE0, 0xF2, 0xB1, 0x11
			DCB		0x0B, 0x8B, 0xFF, 0xFE, 0xFC, 0x01, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0xB1, 0x7C, 0xFE
			DCB		0xFF, 0x89, 0x09, 0x09, 0x0F, 0x0E, 0x8C, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x04, 0x0C, 0x0C, 0x0C, 0x0C, 0x0E
			DCB		0x07, 0x03, 0x03, 0x00, 0x00, 0x01, 0x03, 0x03, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01
			DCB		0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00
			DCB		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

gameplayBorder		
			; 2_xxxx.xxxx (data content)
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 ; 0:[0,13]
 			DCB		0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 ; 0:[14,27]
 			DCB		0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 ; 0:[28,41]
			DCB		0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 ; 0:[42,55]
			DCB		0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 ; 0:[56,69]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 0:[70,83]

			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 1:[0,13]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 1:[14,27]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 1:[28,41]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 1:[42,55]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff ; 1:[56,69]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 1:[70,83]

			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 2:[0,13]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 2:[14,27]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 2:[28,41]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 2:[42,55]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff ; 2:[56,69]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 2:[70,83]

			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[0,13]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[14,27]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[28,41]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[42,55]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff ; 3:[56,69]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[70,83]

			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[0,13]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[14,27]
 			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[28,41]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[42,55]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff ; 3:[56,69]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 3:[70,83]

			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 ; 0:[0,13]
 			DCB		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 ; 0:[14,27]
 			DCB		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 ; 0:[28,41]
			DCB		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 ; 0:[42,55]
			DCB		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 ; 0:[56,69]
			DCB		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ; 0:[70,83]


tstmsg		DCB		"+++",0x04
			;SPACE	0		; added for padding
		
			EXTERN	Nokia_Init			
			EXTERN	OutImgNokia
			EXTERN	SetXYNokia
			EXTERN	Out1BNokia
			EXTERN	OutStrNokia
			EXTERN	ClearNokia
			
			EXPORT  Start
				

Start		BL		Nokia_Init			; initialize LCD
loadRam		
			MOV		R0, #6
			ADD		R0, R0, #3
			MOV		R1, #0x41
			BL		SetXYNokia			; DC is left high ready to send data
			LDR		R5,=tstmsg
			BL		OutStrNokia
			BL		delay
			LDR		R5,=gameplayBorder			; load img address of Ram
			BL		OutImgNokia			; use img routine
donethis			B		donethis
			
;			BL		delay				; leave image for a few s
			
;			MOV							; reset XY position to 0,0
;			MOV							; using setXY routine
			BL		SetXYNokia			; DC is left high ready to send data
; transition to CSU											
			MOV		R0,#504				; 504 bytes in full image
			LDR		R1,=imgCSU			; put img address in R1
sendNxtCSUByte		
;			LDRB					; load R5 with byte, post inc addr
			BL		Out1BNokia			; use byte routine
			BL		delayTrans			; slow down loading of next byte
			SUBS	R0,#1
			BNE		sendNxtCSUByte

			BL		delay				; leave image for a few s

;clear screen using ClearNokia routine
			BL		ClearNokia
			

;			MOV							; X pos (0-83)
;			MOV							; Y pos (0-5)
			BL		SetXYNokia			; set XY position
			LDR		R5,=tstmsg
			BL		OutStrNokia
			
			BL		delay				; leave text up
		
done		B		loadRam				; loop 		
	
	
delay		PUSH	{R0}
			MOV		R0,#0x8555
			MOVT	R0,#0x0140
del			SUBS	R0,#1
			BNE		del
			POP		{R0}
			BX		LR

delayTrans	PUSH	{R0}
			MOV		R0,#0x5855			;~250ms
			MOVT	R0,#0x0014
dt			SUBS	R0,#1
			BNE		dt
			POP		{R0}
			BX		LR
			
			
			ALIGN
			END
