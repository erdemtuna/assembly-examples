


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********
    2 00000000         ; Program section           
    3 00000000         ;*******************************************************
                       ********
    4 00000000 20000700 
                       Memory_Battleship
                               EQU              0x20000700
    5 00000000 20000800 
                       Memory_Civilianship
                               EQU              0x20000800
    6 00000000         ;LABEL  DIRECTIVE VALUE   COMMENT
    7 00000000                 AREA             |.text|, READONLY, CODE
    8 00000000                 THUMB
    9 00000000         
   10 00000000         gameplayBorder
   11 00000000         ; 2_xxxx.xxxx (data content)
   12 00000000 00 00 00 
              00 00 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[0,13]
   13 0000000E 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[14,27]
   14 0000001C 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[28,41]
   15 0000002A 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[42,55]
   16 00000038 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[56,69]
   17 00000046 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]



ARM Macro Assembler    Page 2 


   18 00000054         
   19 00000054 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[0,13]
   20 00000062 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[14,27]
   21 00000070 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[28,41]
   22 0000007E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[42,55]
   23 0000008C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 1:[56,69]
   24 0000009A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[70,83]
   25 000000A8         
   26 000000A8 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[0,13]
   27 000000B6 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[14,27]
   28 000000C4 00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[28,41]
   29 000000D2 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[42,55]
   30 000000E0 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 2:[56,69]
   31 000000EE 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[70,83]
   32 000000FC         
   33 000000FC 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   34 0000010A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   35 00000118 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   36 00000126 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   37 00000134 00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   38 00000142 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   39 00000150         
   40 00000150 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   41 0000015E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   42 0000016C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   43 0000017A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   44 00000188 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   45 00000196 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   46 000001A4         
   47 000001A4 00 00 00 
              00 00 01 
              01 01 01 
              01 01 01 



ARM Macro Assembler    Page 5 


              01 01            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[0,13]
   48 000001B2 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[14,27]
   49 000001C0 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[28,41]
   50 000001CE 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[42,55]
   51 000001DC 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[56,69]
   52 000001EA 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]
   53 000001F8         
   54 000001F8 2B 04   MSG_Cursor
                               DCB              "+",0x04
   55 000001FA 5B 04   MSG_Battleship
                               DCB              "[",0x04
   56 000001FC 7B 04   MSG_Civilianship
                               DCB              "{",0x04
   57 000001FE 20 04   MSG_Clear_Cursor
                               DCB              " ",0x04
   58 00000200 45 45 34 
              34 37 20 
              20 20 20 
              20 20 20 
              20 20 4C 
              61 62 20 
              50 72 6F 
              6A 65 63 
              74 20 20 
              20 42 75 
              72 6B 61 
              79 20 55 



ARM Macro Assembler    Page 6 


              6E 73 61 
              6C 20 20 
              45 72 64 
              65 6D 20 
              54 75 6E 
              61 20 04 MSG_InitialRun
                               DCB              "EE447         Lab Project   Bu
rkay Unsal  Erdem Tuna ",0x04
   59 00000236 50 6C 61 
              63 65 20 
              74 68 65 
              20 73 68 
              69 70 61 
              66 74 65 
              72 20 62 
              6F 72 64 
              65 72 20 
              20 69 73 
              20 76 69 
              73 69 62 
              6C 65 2E 
              04       MSG_Welcome
                               DCB              "Place the shipafter border  is
 visible.",0x04
   60 0000025E         
   61 0000025E         ;----------------------------------
   62 0000025E         ; Screen functions
   63 0000025E         ;----------------------------------
   64 0000025E                 EXTERN           Nokia_Init
   65 0000025E                 EXTERN           OutImgNokia
   66 0000025E                 EXTERN           SetCoordinate
   67 0000025E                 EXTERN           TxByte
   68 0000025E                 EXTERN           OutStrNokia
   69 0000025E                 EXTERN           ClearNokia
   70 0000025E         ;----------------------------------
   71 0000025E         ; ADC functions
   72 0000025E         ;----------------------------------
   73 0000025E                 EXTERN           ADC_1_Read_Y
   74 0000025E                 EXTERN           ADC_0_Read_X
   75 0000025E                 EXTERN           Find_Pixel_Coordinate
   76 0000025E                 EXTERN           ADC_Init
   77 0000025E         ;----------------------------------
   78 0000025E         ; PORT-F Button functions
   79 0000025E         ;----------------------------------
   80 0000025E                 EXTERN           PortF_Button_Init
   81 0000025E                 EXTERN           Check_Interrupt_Status
   82 0000025E                 EXTERN           Clear_Interrupt_Status
   83 0000025E         
   84 0000025E                 EXPORT           Start
   85 0000025E         
   86 0000025E         Start
   87 0000025E F7FF FFFE       BL               Nokia_Init  ; initialize LCD
   88 00000262 F7FF FFFE       BL               ADC_Init    ; initialize ADC
   89 00000266 F7FF FFFE       BL               PortF_Button_Init ; initialize 
                                                            buttons
   90 0000026A E7FF            B                Clear_Ship_Memories ; clear shi
                                                            p memories
   91 0000026C         
   92 0000026C         Clear_Ship_Memories



ARM Macro Assembler    Page 7 


   93 0000026C F04F 0204       MOV              R2, #4      ; counter to clear 
                                                            16 bytes
   94 00000270 4B73            LDR              R3, = Memory_Battleship ; battl
                                                            eship memory addres
                                                            s
   95 00000272         Clear_Battleship_Memory
   96 00000272 F04F 0400       MOV              R4, #0x00000000
   97 00000276 F843 4B04       STR              R4, [R3], #4
   98 0000027A 3A01            SUBS             R2, #1
   99 0000027C D1F9            BNE              Clear_Battleship_Memory
  100 0000027E         
  101 0000027E F04F 0204       MOV              R2, #4      ; counter to clear 
                                                            16 bytes
  102 00000282 4B70            LDR              R3, = Memory_Civilianship ; bat
                                                            tleship memory addr
                                                            ess
  103 00000284         Clear_Civilianship_Memory
  104 00000284 F04F 0400       MOV              R4, #0x00000000
  105 00000288 F843 4B04       STR              R4, [R3], #4
  106 0000028C 3A01            SUBS             R2, #1
  107 0000028E D1F9            BNE              Clear_Civilianship_Memory
  108 00000290         
  109 00000290         
  110 00000290         loadRam
  111 00000290         
  112 00000290         ; output initial first run messages
  113 00000290         Initial_Messages
  114 00000290 F04F 0000       MOV              R0, #0
  115 00000294 F04F 0101       MOV              R1, #1
  116 00000298 F7FF FFFE       BL               SetCoordinate
  117 0000029C 4D6A            LDR              R5,=MSG_InitialRun
  118 0000029E F7FF FFFE       BL               OutStrNokia
  119 000002A2         ;BL delay
  120 000002A2 F7FF FFFE       BL               ClearNokia
  121 000002A6 F04F 0000       MOV              R0, #0
  122 000002AA F04F 0101       MOV              R1, #1
  123 000002AE F7FF FFFE       BL               SetCoordinate
  124 000002B2 4D66            LDR              R5,=MSG_Welcome
  125 000002B4 F7FF FFFE       BL               OutStrNokia
  126 000002B8         ;BL delay
  127 000002B8         
  128 000002B8         ; load game border
  129 000002B8         Load_GameBorder
  130 000002B8 4D65            LDR              R5,=gameplayBorder
  131 000002BA F7FF FFFE       BL               OutImgNokia
  132 000002BE F04F 0A63       MOV              R10, #99    ; old x coordinate
  133 000002C2 F04F 0B63       MOV              R11, #99    ; old y coordinate 
                                                            
  134 000002C6 F04F 0200       MOV              R2, #0      ; difference counte
                                                            r
  135 000002CA         
  136 000002CA         Set_Coordinates
  137 000002CA F000 F86A       BL               Placement_Battleship_Output
  138 000002CE F000 F87D       BL               Placement_Civilianship_Output
  139 000002D2 F7FF FFFE       BL               Clear_Interrupt_Status
  140 000002D6 F04F 0000       MOV              R0, #0      ; clear x-coordinat
                                                            e
  141 000002DA F04F 0100       MOV              R1, #0      ; clear y-coordinat
                                                            e



ARM Macro Assembler    Page 8 


  142 000002DE F04F 0200       MOV              R2, #0      ; reset counter
  143 000002E2 F7FF FFFE       BL               ADC_0_Read_X
  144 000002E6 F04F 0338       MOV              R3, #56
  145 000002EA F7FF FFFE       BL               Find_Pixel_Coordinate 
                                                            ; x-coordinae
  146 000002EE F7FF FFFE       BL               ADC_1_Read_Y
  147 000002F2 F240 3339       MOV              R3, #825
  148 000002F6 F7FF FFFE       BL               Find_Pixel_Coordinate
  149 000002FA F100 0006       ADD              R0, R0, #6  ; add x axis offset
                                                            
  150 000002FE F101 0101       ADD              R1, R1, #1  ; add y axis offset
                                                            
  151 00000302 4550            CMP              R0, R10     ; check if x coordi
                                                            nate has changed
  152 00000304 BF18 3201       ADDNE            R2, #1
  153 00000308 4559            CMP              R1, R11     ; check if y coordi
                                                            nate has changed
  154 0000030A BF18 3201       ADDNE            R2, #1
  155 0000030E 2A00            CMP              R2, #0      ; if R2 == 0, then 
                                                            coordinates remaine
                                                            d same, check again
                                                            
  156 00000310         ; if R2 != 0, then at least one of the coordinates
  157 00000310         ; have changed
  158 00000310 D000            BEQ              Go_Check_Ship_Placement ; !!!!!
                                                            !!!!!!!!!!!!!!!!!!!
                                                            !!!!!!!
  159 00000312 E002            B                Clear_Old_Cursor
  160 00000314         Go_Check_Ship_Placement
  161 00000314 F000 F814       BL               Check_Ship_Placement
  162 00000318 E7D7            B                Set_Coordinates
  163 0000031A         ;-------------------------------------------
  164 0000031A         ; Clears the position of old cursor by writing
  165 0000031A         ; 0 pixels on top of it.
  166 0000031A         ; Saves the new cursor coordinates
  167 0000031A         ;-------------------------------------------
  168 0000031A         Clear_Old_Cursor
  169 0000031A B407            PUSH{R0-R2}                  ; save new coordina
                                                            tes
  170 0000031C 4650            MOV              R0, R10     ; old x coordinate
  171 0000031E 4659            MOV              R1, R11     ; old y coordinate
  172 00000320 F7FF FFFE       BL               SetCoordinate
  173 00000324 4D4B            LDR              R5,=MSG_Clear_Cursor
  174 00000326 F7FF FFFE       BL               OutStrNokia
  175 0000032A BC07            POP{R0-R2}                   ; pop new coordinat
                                                            es
  176 0000032C 4682            MOV              R10, R0     ; save change
  177 0000032E 468B            MOV              R11, R1     ; save change
  178 00000330 F7FF FFFE       BL               SetCoordinate
  179 00000334 E7FF            B                Move_Cursor
  180 00000336         Move_Cursor
  181 00000336 4D48            LDR              R5,=MSG_Cursor
  182 00000338 F7FF FFFE       BL               OutStrNokia
  183 0000033C         ; BL delayTrans
  184 0000033C E7C5            B                Set_Coordinates
  185 0000033E E7FE    donethis
                               B                donethis
  186 00000340         
  187 00000340         ;-------------------------------------------



ARM Macro Assembler    Page 9 


  188 00000340         ; Checks if a ship is to be placed
  189 00000340         ; if yes, then saves the ship to memory
  190 00000340         ; if not, returns back
  191 00000340         ;-------------------------------------------
  192 00000340         Check_Ship_Placement
  193 00000340 B500            PUSH{LR}
  194 00000342 F7FF FFFE       BL               Check_Interrupt_Status ; R9 has
                                                             interrupt status
  195 00000346 F1B9 0F00       CMP              R9, #0x00   ; if R9 == 0x00, th
                                                            ere is no ship plac
                                                            ement
  196 0000034A D102            BNE              Determine_Ship_Type
  197 0000034C F85D EB04       POP{LR}
  198 00000350 4770            BX               LR
  199 00000352         Determine_Ship_Type
  200 00000352 F1B9 0F10       CMP              R9, #0x10   ; if R9 == 0x10, pl
                                                            ace a batlleship
  201 00000356         ; if R9 < 0x10, place a civilianship
  202 00000356         ; if R9 > 0x10, ship placement is done
  203 00000356 D000            BEQ              Placement_Battleship_Save
  204 00000358 D311            BLO              Placement_Civilianship_Save
  205 0000035A         ; B Placement_Done
  206 0000035A         
  207 0000035A         Placement_Battleship_Save
  208 0000035A E92D 1FFF       PUSH{R0-R12}
  209 0000035E 4B38            LDR              R3, = Memory_Battleship
  210 00000360         Find_Battleship_Zero_Memory
  211 00000360 F813 4B02       LDRB             R4, [R3], #2
  212 00000364 2C00            CMP              R4, #0
  213 00000366 D1FB            BNE              Find_Battleship_Zero_Memory
  214 00000368 F1A3 0302       SUB              R3, R3, #2
  215 0000036C F803 0B01       STRB             R0, [R3], #1 ; store x coordina
                                                            te of the ship
  216 00000370 F803 1B01       STRB             R1, [R3], #1 ; store y coordina
                                                            te of the ship
  217 00000374 E8BD 1FFF       POP{R0-R12}
  218 00000378 F85D EB04       POP{LR}
  219 0000037C 4770            BX               LR          ; return to last ca
                                                            ll of Check_Ship_Pl
                                                            acement
  220 0000037E         
  221 0000037E         Placement_Civilianship_Save
  222 0000037E E92D 1FFF       PUSH{R0-R12}
  223 00000382 4B30            LDR              R3, = Memory_Civilianship
  224 00000384         Find_Civilianship_Zero_Memory
  225 00000384 F813 4B02       LDRB             R4, [R3], #2
  226 00000388 2C00            CMP              R4, #0
  227 0000038A D1FB            BNE              Find_Civilianship_Zero_Memory
  228 0000038C F1A3 0302       SUB              R3, R3, #2
  229 00000390 F803 0B01       STRB             R0, [R3], #1 ; store x coordina
                                                            te of the ship
  230 00000394 F803 1B01       STRB             R1, [R3], #1 ; store y coordina
                                                            te of the ship
  231 00000398 E8BD 1FFF       POP{R0-R12}
  232 0000039C F85D EB04       POP{LR}
  233 000003A0 4770            BX               LR          ; return to last ca
                                                            ll of Check_Ship_Pl
                                                            acement
  234 000003A2         



ARM Macro Assembler    Page 10 


  235 000003A2         ;-------------------------------------------
  236 000003A2         ; Outputs all battleships
  237 000003A2         ; Returns nothing
  238 000003A2         ; If there is no ships, doesn't output at all.
  239 000003A2         ;-------------------------------------------
  240 000003A2         Placement_Battleship_Output
  241 000003A2 E92D 1FFF       PUSH{R0-R12}
  242 000003A6 B500            PUSH{LR}
  243 000003A8 4B25            LDR              R3, = Memory_Battleship ; battl
                                                            eship memory addres
                                                            s
  244 000003AA         Output_Battleship
  245 000003AA F813 0B01       LDRB             R0, [R3], #1 ; load x coordinat
                                                            e of the ship
  246 000003AE 2800            CMP              R0, #0
  247 000003B0 D007            BEQ              Placement_Battleship_Output_Ret
urn 
                                                            ; if R0 == 0, then 
                                                            it is end of battle
                                                            ships
  248 000003B2         ; return 
  249 000003B2 F813 1B01       LDRB             R1, [R3], #1 ; load y coordinat
                                                            e of the ship
  250 000003B6 F7FF FFFE       BL               SetCoordinate
  251 000003BA 4D28            LDR              R5, = MSG_Battleship
  252 000003BC F7FF FFFE       BL               OutStrNokia
  253 000003C0         ;BL delayTrans
  254 000003C0 E7F3            B                Output_Battleship ; loop throug
                                                            h all battleships
  255 000003C2         
  256 000003C2         Placement_Battleship_Output_Return
  257 000003C2 F85D EB04       POP{LR}
  258 000003C6 E8BD 1FFF       POP{R0-R12}
  259 000003CA 4770            BX               LR
  260 000003CC         
  261 000003CC         ;-------------------------------------------
  262 000003CC         ; Outputs all battleships
  263 000003CC         ; Returns nothing
  264 000003CC         ; If there is no ships, doesn't output at all.
  265 000003CC         ;-------------------------------------------
  266 000003CC         Placement_Civilianship_Output
  267 000003CC E92D 1FFF       PUSH{R0-R12}
  268 000003D0 B500            PUSH{LR}
  269 000003D2 4B1C            LDR              R3, = Memory_Civilianship ; bat
                                                            tleship memory addr
                                                            ess
  270 000003D4         Output_Civilianship
  271 000003D4 F813 0B01       LDRB             R0, [R3], #1 ; load x coordinat
                                                            e of the ship
  272 000003D8 2800            CMP              R0, #0
  273 000003DA D007            BEQ              Placement_Civilianship_Output_R
eturn 
                                                            ; if R0 == 0, then 
                                                            it is end of battle
                                                            ships
  274 000003DC         ; return 
  275 000003DC F813 1B01       LDRB             R1, [R3], #1 ; load y coordinat
                                                            e of the ship
  276 000003E0 F7FF FFFE       BL               SetCoordinate



ARM Macro Assembler    Page 11 


  277 000003E4 4D1E            LDR              R5, = MSG_Civilianship
  278 000003E6 F7FF FFFE       BL               OutStrNokia
  279 000003EA         ;BL delayTrans
  280 000003EA E7F3            B                Output_Civilianship ; loop thro
                                                            ugh all battleships
                                                            
  281 000003EC         
  282 000003EC         Placement_Civilianship_Output_Return
  283 000003EC F85D EB04       POP{LR}
  284 000003F0 E8BD 1FFF       POP{R0-R12}
  285 000003F4 4770            BX               LR
  286 000003F6         
  287 000003F6         
  288 000003F6         ;   BL  delay    ; leave image for a few s
  289 000003F6         
  290 000003F6         ;   MOV       ; reset XY position to 0,0
  291 000003F6         ;   MOV       ; using setXY routine
  292 000003F6         ; BL  SetCoordinate   ; DC is left high ready to send da
                       ta
  293 000003F6         ; transition to CSU           
  294 000003F6         ; MOV  R0,#504    ; 504 bytes in full image
  295 000003F6         ; LDR  R1,=imgCSU   ; put img address in R1
  296 000003F6         sendNxtCSUByte
  297 000003F6         ;   LDRB     ; load R5 with byte, post inc addr
  298 000003F6 F7FF FFFE       BL               TxByte      ; use byte routine
  299 000003FA F000 F817       BL               delayTrans  ; slow down loading
                                                             of next byte
  300 000003FE 3801            SUBS             R0,#1
  301 00000400 D1F9            BNE              sendNxtCSUByte
  302 00000402         
  303 00000402 F000 F80A       BL               delay       ; leave image for a
                                                             few s
  304 00000406         
  305 00000406         ;clear screen using ClearNokia routine
  306 00000406 F7FF FFFE       BL               ClearNokia
  307 0000040A         
  308 0000040A         
  309 0000040A         ;   MOV       ; X pos (0-83)
  310 0000040A         ;   MOV       ; Y pos (0-5)
  311 0000040A F7FF FFFE       BL               SetCoordinate ; set XY position
                                                            
  312 0000040E 4D12            LDR              R5,=MSG_Cursor
  313 00000410 F7FF FFFE       BL               OutStrNokia
  314 00000414         
  315 00000414 F000 F801       BL               delay       ; leave text up
  316 00000418         
  317 00000418 E73A    done    B                loadRam     ; loop   
  318 0000041A         
  319 0000041A         
  320 0000041A         delay
  321 0000041A B401            PUSH             {R0}
  322 0000041C F248 5055       MOV              R0,#0x8555
  323 00000420 F2C0 1040       MOVT             R0,#0x0140
  324 00000424         del
  325 00000424 3801            SUBS             R0,#1
  326 00000426 D1FD            BNE              del
  327 00000428 BC01            POP              {R0}
  328 0000042A 4770            BX               LR
  329 0000042C         



ARM Macro Assembler    Page 12 


  330 0000042C B401    delayTrans
                               PUSH             {R0}
  331 0000042E F640 0055       MOV              R0,#0x855   ;~250ms, 0x5855
  332 00000432 F2C0 0014       MOVT             R0,#0x0014
  333 00000436         dt
  334 00000436 3801            SUBS             R0,#1
  335 00000438 D1FD            BNE              dt
  336 0000043A BC01            POP              {R0}
  337 0000043C 4770            BX               LR
  338 0000043E         
  339 0000043E         
  340 0000043E 00 00           ALIGN
  341 00000440                 END
              20000700 
              20000800 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_EE447-Project -ID:
\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Keil_v5\ARM\C
MSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 52
6" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file main.s
   Uses
      None
Comment: .text unused
Check_Ship_Placement 00000340

Symbol: Check_Ship_Placement
   Definitions
      At line 192 in file main.s
   Uses
      At line 161 in file main.s
Comment: Check_Ship_Placement used once
Clear_Battleship_Memory 00000272

Symbol: Clear_Battleship_Memory
   Definitions
      At line 95 in file main.s
   Uses
      At line 99 in file main.s
Comment: Clear_Battleship_Memory used once
Clear_Civilianship_Memory 00000284

Symbol: Clear_Civilianship_Memory
   Definitions
      At line 103 in file main.s
   Uses
      At line 107 in file main.s
Comment: Clear_Civilianship_Memory used once
Clear_Old_Cursor 0000031A

Symbol: Clear_Old_Cursor
   Definitions
      At line 168 in file main.s
   Uses
      At line 159 in file main.s
Comment: Clear_Old_Cursor used once
Clear_Ship_Memories 0000026C

Symbol: Clear_Ship_Memories
   Definitions
      At line 92 in file main.s
   Uses
      At line 90 in file main.s
Comment: Clear_Ship_Memories used once
Determine_Ship_Type 00000352

Symbol: Determine_Ship_Type
   Definitions
      At line 199 in file main.s
   Uses
      At line 196 in file main.s
Comment: Determine_Ship_Type used once
Find_Battleship_Zero_Memory 00000360

Symbol: Find_Battleship_Zero_Memory



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 210 in file main.s
   Uses
      At line 213 in file main.s
Comment: Find_Battleship_Zero_Memory used once
Find_Civilianship_Zero_Memory 00000384

Symbol: Find_Civilianship_Zero_Memory
   Definitions
      At line 224 in file main.s
   Uses
      At line 227 in file main.s
Comment: Find_Civilianship_Zero_Memory used once
Go_Check_Ship_Placement 00000314

Symbol: Go_Check_Ship_Placement
   Definitions
      At line 160 in file main.s
   Uses
      At line 158 in file main.s
Comment: Go_Check_Ship_Placement used once
Initial_Messages 00000290

Symbol: Initial_Messages
   Definitions
      At line 113 in file main.s
   Uses
      None
Comment: Initial_Messages unused
Load_GameBorder 000002B8

Symbol: Load_GameBorder
   Definitions
      At line 129 in file main.s
   Uses
      None
Comment: Load_GameBorder unused
MSG_Battleship 000001FA

Symbol: MSG_Battleship
   Definitions
      At line 55 in file main.s
   Uses
      At line 251 in file main.s
Comment: MSG_Battleship used once
MSG_Civilianship 000001FC

Symbol: MSG_Civilianship
   Definitions
      At line 56 in file main.s
   Uses
      At line 277 in file main.s
Comment: MSG_Civilianship used once
MSG_Clear_Cursor 000001FE

Symbol: MSG_Clear_Cursor
   Definitions
      At line 57 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 173 in file main.s
Comment: MSG_Clear_Cursor used once
MSG_Cursor 000001F8

Symbol: MSG_Cursor
   Definitions
      At line 54 in file main.s
   Uses
      At line 181 in file main.s
      At line 312 in file main.s

MSG_InitialRun 00000200

Symbol: MSG_InitialRun
   Definitions
      At line 58 in file main.s
   Uses
      At line 117 in file main.s
Comment: MSG_InitialRun used once
MSG_Welcome 00000236

Symbol: MSG_Welcome
   Definitions
      At line 59 in file main.s
   Uses
      At line 124 in file main.s
Comment: MSG_Welcome used once
Move_Cursor 00000336

Symbol: Move_Cursor
   Definitions
      At line 180 in file main.s
   Uses
      At line 179 in file main.s
Comment: Move_Cursor used once
Output_Battleship 000003AA

Symbol: Output_Battleship
   Definitions
      At line 244 in file main.s
   Uses
      At line 254 in file main.s
Comment: Output_Battleship used once
Output_Civilianship 000003D4

Symbol: Output_Civilianship
   Definitions
      At line 270 in file main.s
   Uses
      At line 280 in file main.s
Comment: Output_Civilianship used once
Placement_Battleship_Output 000003A2

Symbol: Placement_Battleship_Output
   Definitions
      At line 240 in file main.s
   Uses
      At line 137 in file main.s
Comment: Placement_Battleship_Output used once



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Placement_Battleship_Output_Return 000003C2

Symbol: Placement_Battleship_Output_Return
   Definitions
      At line 256 in file main.s
   Uses
      At line 247 in file main.s
Comment: Placement_Battleship_Output_Return used once
Placement_Battleship_Save 0000035A

Symbol: Placement_Battleship_Save
   Definitions
      At line 207 in file main.s
   Uses
      At line 203 in file main.s
Comment: Placement_Battleship_Save used once
Placement_Civilianship_Output 000003CC

Symbol: Placement_Civilianship_Output
   Definitions
      At line 266 in file main.s
   Uses
      At line 138 in file main.s
Comment: Placement_Civilianship_Output used once
Placement_Civilianship_Output_Return 000003EC

Symbol: Placement_Civilianship_Output_Return
   Definitions
      At line 282 in file main.s
   Uses
      At line 273 in file main.s
Comment: Placement_Civilianship_Output_Return used once
Placement_Civilianship_Save 0000037E

Symbol: Placement_Civilianship_Save
   Definitions
      At line 221 in file main.s
   Uses
      At line 204 in file main.s
Comment: Placement_Civilianship_Save used once
Set_Coordinates 000002CA

Symbol: Set_Coordinates
   Definitions
      At line 136 in file main.s
   Uses
      At line 162 in file main.s
      At line 184 in file main.s

Start 0000025E

Symbol: Start
   Definitions
      At line 86 in file main.s
   Uses
      At line 84 in file main.s
Comment: Start used once
del 00000424




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Symbol: del
   Definitions
      At line 324 in file main.s
   Uses
      At line 326 in file main.s
Comment: del used once
delay 0000041A

Symbol: delay
   Definitions
      At line 320 in file main.s
   Uses
      At line 303 in file main.s
      At line 315 in file main.s

delayTrans 0000042C

Symbol: delayTrans
   Definitions
      At line 330 in file main.s
   Uses
      At line 299 in file main.s
Comment: delayTrans used once
done 00000418

Symbol: done
   Definitions
      At line 317 in file main.s
   Uses
      None
Comment: done unused
donethis 0000033E

Symbol: donethis
   Definitions
      At line 185 in file main.s
   Uses
      At line 185 in file main.s
Comment: donethis used once
dt 00000436

Symbol: dt
   Definitions
      At line 333 in file main.s
   Uses
      At line 335 in file main.s
Comment: dt used once
gameplayBorder 00000000

Symbol: gameplayBorder
   Definitions
      At line 10 in file main.s
   Uses
      At line 130 in file main.s
Comment: gameplayBorder used once
loadRam 00000290

Symbol: loadRam
   Definitions



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 110 in file main.s
   Uses
      At line 317 in file main.s
Comment: loadRam used once
sendNxtCSUByte 000003F6

Symbol: sendNxtCSUByte
   Definitions
      At line 296 in file main.s
   Uses
      At line 301 in file main.s
Comment: sendNxtCSUByte used once
38 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Memory_Battleship 20000700

Symbol: Memory_Battleship
   Definitions
      At line 4 in file main.s
   Uses
      At line 94 in file main.s
      At line 209 in file main.s
      At line 243 in file main.s

Memory_Civilianship 20000800

Symbol: Memory_Civilianship
   Definitions
      At line 5 in file main.s
   Uses
      At line 102 in file main.s
      At line 223 in file main.s
      At line 269 in file main.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC_0_Read_X 00000000

Symbol: ADC_0_Read_X
   Definitions
      At line 74 in file main.s
   Uses
      At line 143 in file main.s
Comment: ADC_0_Read_X used once
ADC_1_Read_Y 00000000

Symbol: ADC_1_Read_Y
   Definitions
      At line 73 in file main.s
   Uses
      At line 146 in file main.s
Comment: ADC_1_Read_Y used once
ADC_Init 00000000

Symbol: ADC_Init
   Definitions
      At line 76 in file main.s
   Uses
      At line 88 in file main.s
Comment: ADC_Init used once
Check_Interrupt_Status 00000000

Symbol: Check_Interrupt_Status
   Definitions
      At line 81 in file main.s
   Uses
      At line 194 in file main.s
Comment: Check_Interrupt_Status used once
ClearNokia 00000000

Symbol: ClearNokia
   Definitions
      At line 69 in file main.s
   Uses
      At line 120 in file main.s
      At line 306 in file main.s

Clear_Interrupt_Status 00000000

Symbol: Clear_Interrupt_Status
   Definitions
      At line 82 in file main.s
   Uses
      At line 139 in file main.s
Comment: Clear_Interrupt_Status used once
Find_Pixel_Coordinate 00000000

Symbol: Find_Pixel_Coordinate
   Definitions
      At line 75 in file main.s
   Uses
      At line 145 in file main.s
      At line 148 in file main.s

Nokia_Init 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: Nokia_Init
   Definitions
      At line 64 in file main.s
   Uses
      At line 87 in file main.s
Comment: Nokia_Init used once
OutImgNokia 00000000

Symbol: OutImgNokia
   Definitions
      At line 65 in file main.s
   Uses
      At line 131 in file main.s
Comment: OutImgNokia used once
OutStrNokia 00000000

Symbol: OutStrNokia
   Definitions
      At line 68 in file main.s
   Uses
      At line 118 in file main.s
      At line 125 in file main.s
      At line 174 in file main.s
      At line 182 in file main.s
      At line 252 in file main.s
      At line 278 in file main.s
      At line 313 in file main.s

PortF_Button_Init 00000000

Symbol: PortF_Button_Init
   Definitions
      At line 80 in file main.s
   Uses
      At line 89 in file main.s
Comment: PortF_Button_Init used once
SetCoordinate 00000000

Symbol: SetCoordinate
   Definitions
      At line 66 in file main.s
   Uses
      At line 116 in file main.s
      At line 123 in file main.s
      At line 172 in file main.s
      At line 178 in file main.s
      At line 250 in file main.s
      At line 276 in file main.s
      At line 311 in file main.s

TxByte 00000000

Symbol: TxByte
   Definitions
      At line 67 in file main.s
   Uses
      At line 298 in file main.s
Comment: TxByte used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

13 symbols
389 symbols in table
