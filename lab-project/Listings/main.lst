


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********
    2 00000000         ; Program section           
    3 00000000         ;*******************************************************
                       ********
    4 00000000         ;LABEL  DIRECTIVE VALUE   COMMENT
    5 00000000                 AREA             |.text|, READONLY, CODE
    6 00000000                 THUMB
    7 00000000         
    8 00000000         gameplayBorder
    9 00000000         ; 2_xxxx.xxxx (data content)
   10 00000000 00 00 00 
              00 00 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[0,13]
   11 0000000E 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[14,27]
   12 0000001C 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[28,41]
   13 0000002A 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[42,55]
   14 00000038 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[56,69]
   15 00000046 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]
   16 00000054         
   17 00000054 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0



ARM Macro Assembler    Page 2 


xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[0,13]
   18 00000062 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[14,27]
   19 00000070 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[28,41]
   20 0000007E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[42,55]
   21 0000008C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 1:[56,69]
   22 0000009A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[70,83]
   23 000000A8         
   24 000000A8 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[0,13]
   25 000000B6 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[14,27]
   26 000000C4 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[28,41]



ARM Macro Assembler    Page 3 


   27 000000D2 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[42,55]
   28 000000E0 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 2:[56,69]
   29 000000EE 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[70,83]
   30 000000FC         
   31 000000FC 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   32 0000010A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   33 00000118 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   34 00000126 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   35 00000134 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   36 00000142 00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   37 00000150         
   38 00000150 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   39 0000015E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   40 0000016C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   41 0000017A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   42 00000188 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   43 00000196 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   44 000001A4         
   45 000001A4 00 00 00 
              00 00 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[0,13]
   46 000001B2 01 01 01 
              01 01 01 
              01 01 01 



ARM Macro Assembler    Page 5 


              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[14,27]
   47 000001C0 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[28,41]
   48 000001CE 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[42,55]
   49 000001DC 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[56,69]
   50 000001EA 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]
   51 000001F8         
   52 000001F8 2B 04   MSG_Cursor
                               DCB              "+",0x04
   53 000001FA 5B 04   MSG_Battle
                               DCB              "[",0x04
   54 000001FC 7B 04   MSG_Civilian
                               DCB              "{",0x04
   55 000001FE 20 04   MSG_Clear_Cursor
                               DCB              " ",0x04
   56 00000200 45 45 34 
              34 37 20 
              20 20 20 
              20 20 20 
              20 20 4C 
              61 62 20 
              50 72 6F 
              6A 65 63 
              74 20 20 
              20 42 75 
              72 6B 61 
              79 20 55 
              6E 73 61 
              6C 20 20 
              45 72 64 
              65 6D 20 
              54 75 6E 
              61 20 04 MSG_InitialRun



ARM Macro Assembler    Page 6 


                               DCB              "EE447         Lab Project   Bu
rkay Unsal  Erdem Tuna ",0x04
   57 00000236 50 6C 61 
              63 65 20 
              74 68 65 
              20 73 68 
              69 70 61 
              66 74 65 
              72 20 62 
              6F 72 64 
              65 72 20 
              20 69 73 
              20 76 69 
              73 69 62 
              6C 65 2E 
              04       MSG_Welcome
                               DCB              "Place the shipafter border  is
 visible.",0x04
   58 0000025E         
   59 0000025E         ;----------------------------------
   60 0000025E         ; Screen functions
   61 0000025E         ;----------------------------------
   62 0000025E                 EXTERN           Nokia_Init
   63 0000025E                 EXTERN           OutImgNokia
   64 0000025E                 EXTERN           SetCoordinate
   65 0000025E                 EXTERN           TxByte
   66 0000025E                 EXTERN           OutStrNokia
   67 0000025E                 EXTERN           ClearNokia
   68 0000025E         ;----------------------------------
   69 0000025E         ; ADC functions
   70 0000025E         ;----------------------------------
   71 0000025E                 EXTERN           ADC_1_Read_Y
   72 0000025E                 EXTERN           ADC_0_Read_X
   73 0000025E                 EXTERN           Find_Pixel_Coordinate
   74 0000025E                 EXTERN           ADC_Init
   75 0000025E         ;----------------------------------
   76 0000025E         ; PORT-F Button functions
   77 0000025E         ;----------------------------------
   78 0000025E                 EXTERN           PortF_Button_Init
   79 0000025E         
   80 0000025E                 EXPORT           Start
   81 0000025E         
   82 0000025E         Start
   83 0000025E F7FF FFFE       BL               Nokia_Init  ; initialize LCD
   84 00000262 F7FF FFFE       BL               ADC_Init    ; initialize ADC
   85 00000266 F7FF FFFE       BL               PortF_Button_Init ; initialize 
                                                            buttons
   86 0000026A         loadRam
   87 0000026A         
   88 0000026A         ; output initial first run messages
   89 0000026A         Initial_Messages
   90 0000026A F04F 0000       MOV              R0, #0
   91 0000026E F04F 0101       MOV              R1, #1
   92 00000272 F7FF FFFE       BL               SetCoordinate
   93 00000276 4D37            LDR              R5,=MSG_InitialRun
   94 00000278 F7FF FFFE       BL               OutStrNokia
   95 0000027C         ;BL delay
   96 0000027C F7FF FFFE       BL               ClearNokia
   97 00000280 F04F 0000       MOV              R0, #0



ARM Macro Assembler    Page 7 


   98 00000284 F04F 0101       MOV              R1, #1
   99 00000288 F7FF FFFE       BL               SetCoordinate
  100 0000028C 4D32            LDR              R5,=MSG_Welcome
  101 0000028E F7FF FFFE       BL               OutStrNokia
  102 00000292         ;BL delay
  103 00000292         
  104 00000292         ; load game border
  105 00000292         Load_GameBorder
  106 00000292 4D32            LDR              R5,=gameplayBorder
  107 00000294 F7FF FFFE       BL               OutImgNokia
  108 00000298 F04F 0A63       MOV              R10, #99    ; old x coordinate
  109 0000029C F04F 0B63       MOV              R11, #99    ; old y coordinate 
                                                            
  110 000002A0 F04F 0200       MOV              R2, #0      ; difference counte
                                                            r
  111 000002A4         
  112 000002A4         Set_Coordinates
  113 000002A4 F04F 0000       MOV              R0, #0      ; clear x-coordinat
                                                            e
  114 000002A8 F04F 0100       MOV              R1, #0      ; clear y-coordinat
                                                            e
  115 000002AC F7FF FFFE       BL               ADC_0_Read_X
  116 000002B0 F04F 0338       MOV              R3, #56
  117 000002B4 F7FF FFFE       BL               Find_Pixel_Coordinate 
                                                            ; x-coordinae
  118 000002B8 F7FF FFFE       BL               ADC_1_Read_Y
  119 000002BC F240 3339       MOV              R3, #825
  120 000002C0 F7FF FFFE       BL               Find_Pixel_Coordinate
  121 000002C4 F100 0006       ADD              R0, R0, #6  ; add x axis offset
                                                            
  122 000002C8 F101 0101       ADD              R1, R1, #1  ; add y axis offset
                                                            
  123 000002CC 4550            CMP              R0, R10     ; check if x coordi
                                                            nate has changed
  124 000002CE BF18 3201       ADDNE            R2, #1
  125 000002D2 4559            CMP              R1, R11     ; check if y coordi
                                                            nate has changed
  126 000002D4 BF18 3201       ADDNE            R2, #1
  127 000002D8 2A00            CMP              R2, #0      ; if R2 == 0, then 
                                                            coordinates remaine
                                                            d same, check again
                                                            
  128 000002DA         ; if R2 != 0, then at least one of the coordinates
  129 000002DA         ; have changed
  130 000002DA D0E3            BEQ              Set_Coordinates
  131 000002DC F04F 0200       MOV              R2, #0      ; reset counter
  132 000002E0         
  133 000002E0         Clear_Old_Cursor
  134 000002E0 B407            PUSH{R0-R2}                  ; save new coordina
                                                            tes
  135 000002E2 4650            MOV              R0, R10     ; old x coordinate
  136 000002E4 4659            MOV              R1, R11     ; old y coordinate
  137 000002E6 F7FF FFFE       BL               SetCoordinate
  138 000002EA 4D1D            LDR              R5,=MSG_Clear_Cursor
  139 000002EC F7FF FFFE       BL               OutStrNokia
  140 000002F0 BC07            POP{R0-R2}                   ; pop new coordinat
                                                            es
  141 000002F2 4682            MOV              R10, R0     ; save change
  142 000002F4 468B            MOV              R11, R1     ; save change



ARM Macro Assembler    Page 8 


  143 000002F6 F7FF FFFE       BL               SetCoordinate
  144 000002FA E7FF            B                Move_Cursor
  145 000002FC         Move_Cursor
  146 000002FC 4D19            LDR              R5,=MSG_Cursor
  147 000002FE F7FF FFFE       BL               OutStrNokia
  148 00000302 F000 F81D       BL               delayTrans
  149 00000306 E7CD            B                Set_Coordinates
  150 00000308 E7FE    donethis
                               B                donethis
  151 0000030A         
  152 0000030A         ;   BL  delay    ; leave image for a few s
  153 0000030A         
  154 0000030A         ;   MOV       ; reset XY position to 0,0
  155 0000030A         ;   MOV       ; using setXY routine
  156 0000030A         ; BL  SetCoordinate   ; DC is left high ready to send da
                       ta
  157 0000030A         ; transition to CSU           
  158 0000030A         ; MOV  R0,#504    ; 504 bytes in full image
  159 0000030A         ; LDR  R1,=imgCSU   ; put img address in R1
  160 0000030A         sendNxtCSUByte
  161 0000030A         ;   LDRB     ; load R5 with byte, post inc addr
  162 0000030A F7FF FFFE       BL               TxByte      ; use byte routine
  163 0000030E F000 F817       BL               delayTrans  ; slow down loading
                                                             of next byte
  164 00000312 3801            SUBS             R0,#1
  165 00000314 D1F9            BNE              sendNxtCSUByte
  166 00000316         
  167 00000316 F000 F80A       BL               delay       ; leave image for a
                                                             few s
  168 0000031A         
  169 0000031A         ;clear screen using ClearNokia routine
  170 0000031A F7FF FFFE       BL               ClearNokia
  171 0000031E         
  172 0000031E         
  173 0000031E         ;   MOV       ; X pos (0-83)
  174 0000031E         ;   MOV       ; Y pos (0-5)
  175 0000031E F7FF FFFE       BL               SetCoordinate ; set XY position
                                                            
  176 00000322 4D10            LDR              R5,=MSG_Cursor
  177 00000324 F7FF FFFE       BL               OutStrNokia
  178 00000328         
  179 00000328 F000 F801       BL               delay       ; leave text up
  180 0000032C         
  181 0000032C E79D    done    B                loadRam     ; loop   
  182 0000032E         
  183 0000032E         
  184 0000032E         delay
  185 0000032E B401            PUSH             {R0}
  186 00000330 F248 5055       MOV              R0,#0x8555
  187 00000334 F2C0 1040       MOVT             R0,#0x0140
  188 00000338         del
  189 00000338 3801            SUBS             R0,#1
  190 0000033A D1FD            BNE              del
  191 0000033C BC01            POP              {R0}
  192 0000033E 4770            BX               LR
  193 00000340         
  194 00000340 B401    delayTrans
                               PUSH             {R0}
  195 00000342 F643 0055       MOV              R0,#0x3855  ;~250ms, 0x5855



ARM Macro Assembler    Page 9 


  196 00000346 F2C0 0014       MOVT             R0,#0x0014
  197 0000034A         dt
  198 0000034A 3801            SUBS             R0,#1
  199 0000034C D1FD            BNE              dt
  200 0000034E BC01            POP              {R0}
  201 00000350 4770            BX               LR
  202 00000352         
  203 00000352         
  204 00000352 00 00           ALIGN
  205 00000354                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_EE447-Project -ID:
\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Keil_v5\ARM\C
MSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 52
6" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 5 in file main.s
   Uses
      None
Comment: .text unused
Clear_Old_Cursor 000002E0

Symbol: Clear_Old_Cursor
   Definitions
      At line 133 in file main.s
   Uses
      None
Comment: Clear_Old_Cursor unused
Initial_Messages 0000026A

Symbol: Initial_Messages
   Definitions
      At line 89 in file main.s
   Uses
      None
Comment: Initial_Messages unused
Load_GameBorder 00000292

Symbol: Load_GameBorder
   Definitions
      At line 105 in file main.s
   Uses
      None
Comment: Load_GameBorder unused
MSG_Battle 000001FA

Symbol: MSG_Battle
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: MSG_Battle unused
MSG_Civilian 000001FC

Symbol: MSG_Civilian
   Definitions
      At line 54 in file main.s
   Uses
      None
Comment: MSG_Civilian unused
MSG_Clear_Cursor 000001FE

Symbol: MSG_Clear_Cursor
   Definitions
      At line 55 in file main.s
   Uses
      At line 138 in file main.s
Comment: MSG_Clear_Cursor used once
MSG_Cursor 000001F8

Symbol: MSG_Cursor



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 52 in file main.s
   Uses
      At line 146 in file main.s
      At line 176 in file main.s

MSG_InitialRun 00000200

Symbol: MSG_InitialRun
   Definitions
      At line 56 in file main.s
   Uses
      At line 93 in file main.s
Comment: MSG_InitialRun used once
MSG_Welcome 00000236

Symbol: MSG_Welcome
   Definitions
      At line 57 in file main.s
   Uses
      At line 100 in file main.s
Comment: MSG_Welcome used once
Move_Cursor 000002FC

Symbol: Move_Cursor
   Definitions
      At line 145 in file main.s
   Uses
      At line 144 in file main.s
Comment: Move_Cursor used once
Set_Coordinates 000002A4

Symbol: Set_Coordinates
   Definitions
      At line 112 in file main.s
   Uses
      At line 130 in file main.s
      At line 149 in file main.s

Start 0000025E

Symbol: Start
   Definitions
      At line 82 in file main.s
   Uses
      At line 80 in file main.s
Comment: Start used once
del 00000338

Symbol: del
   Definitions
      At line 188 in file main.s
   Uses
      At line 190 in file main.s
Comment: del used once
delay 0000032E

Symbol: delay
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 184 in file main.s
   Uses
      At line 167 in file main.s
      At line 179 in file main.s

delayTrans 00000340

Symbol: delayTrans
   Definitions
      At line 194 in file main.s
   Uses
      At line 148 in file main.s
      At line 163 in file main.s

done 0000032C

Symbol: done
   Definitions
      At line 181 in file main.s
   Uses
      None
Comment: done unused
donethis 00000308

Symbol: donethis
   Definitions
      At line 150 in file main.s
   Uses
      At line 150 in file main.s
Comment: donethis used once
dt 0000034A

Symbol: dt
   Definitions
      At line 197 in file main.s
   Uses
      At line 199 in file main.s
Comment: dt used once
gameplayBorder 00000000

Symbol: gameplayBorder
   Definitions
      At line 8 in file main.s
   Uses
      At line 106 in file main.s
Comment: gameplayBorder used once
loadRam 0000026A

Symbol: loadRam
   Definitions
      At line 86 in file main.s
   Uses
      At line 181 in file main.s
Comment: loadRam used once
sendNxtCSUByte 0000030A

Symbol: sendNxtCSUByte
   Definitions
      At line 160 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 165 in file main.s
Comment: sendNxtCSUByte used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC_0_Read_X 00000000

Symbol: ADC_0_Read_X
   Definitions
      At line 72 in file main.s
   Uses
      At line 115 in file main.s
Comment: ADC_0_Read_X used once
ADC_1_Read_Y 00000000

Symbol: ADC_1_Read_Y
   Definitions
      At line 71 in file main.s
   Uses
      At line 118 in file main.s
Comment: ADC_1_Read_Y used once
ADC_Init 00000000

Symbol: ADC_Init
   Definitions
      At line 74 in file main.s
   Uses
      At line 84 in file main.s
Comment: ADC_Init used once
ClearNokia 00000000

Symbol: ClearNokia
   Definitions
      At line 67 in file main.s
   Uses
      At line 96 in file main.s
      At line 170 in file main.s

Find_Pixel_Coordinate 00000000

Symbol: Find_Pixel_Coordinate
   Definitions
      At line 73 in file main.s
   Uses
      At line 117 in file main.s
      At line 120 in file main.s

Nokia_Init 00000000

Symbol: Nokia_Init
   Definitions
      At line 62 in file main.s
   Uses
      At line 83 in file main.s
Comment: Nokia_Init used once
OutImgNokia 00000000

Symbol: OutImgNokia
   Definitions
      At line 63 in file main.s
   Uses
      At line 107 in file main.s
Comment: OutImgNokia used once
OutStrNokia 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: OutStrNokia
   Definitions
      At line 66 in file main.s
   Uses
      At line 94 in file main.s
      At line 101 in file main.s
      At line 139 in file main.s
      At line 147 in file main.s
      At line 177 in file main.s

PortF_Button_Init 00000000

Symbol: PortF_Button_Init
   Definitions
      At line 78 in file main.s
   Uses
      At line 85 in file main.s
Comment: PortF_Button_Init used once
SetCoordinate 00000000

Symbol: SetCoordinate
   Definitions
      At line 64 in file main.s
   Uses
      At line 92 in file main.s
      At line 99 in file main.s
      At line 137 in file main.s
      At line 143 in file main.s
      At line 175 in file main.s

TxByte 00000000

Symbol: TxByte
   Definitions
      At line 65 in file main.s
   Uses
      At line 162 in file main.s
Comment: TxByte used once
11 symbols
369 symbols in table
