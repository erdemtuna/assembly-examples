


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL  DIRECTIVE VALUE   COMMENT
    6 00000000         ; ADC Registers
    7 00000000 400FE638 
                       RCGCADC EQU              0x400FE638  ; ADC clock registe
                                                            r
    8 00000000 40038000 
                       ADC_0_ACTSS
                               EQU              0x40038000  ; Sample sequencer 
                                                            (ADC_0 base address
                                                            )
    9 00000000 40038004 
                       ADC_0_RIS
                               EQU              0x40038004  ; Interrupt status
   10 00000000 40038008 
                       ADC_0_IM
                               EQU              0x40038008  ; Interrupt select
   11 00000000 40038014 
                       ADC_0_EMUX
                               EQU              0x40038014  ; Trigger select
   12 00000000 40038028 
                       ADC_0_PSSI
                               EQU              0x40038028  ; Initiate sample
   13 00000000 40038044 
                       ADC_0_SSCTL0
                               EQU              0x40038044  ; Sample sequence c
                                                            ontrol
   14 00000000 400380A8 
                       ADC_0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                            
   15 00000000 40038FC4 
                       ADC_0_PC
                               EQU              0x40038FC4  ; Sample rate
   16 00000000         
   17 00000000 40039000 
                       ADC_1_ACTSS
                               EQU              0x40039000  ; Sample sequencer 
                                                            (ADC_1 base address
                                                            )
   18 00000000 40039004 
                       ADC_1_RIS
                               EQU              0x40039004  ; Interrupt status
   19 00000000 40039008 
                       ADC_1_IM
                               EQU              0x40039008  ; Interrupt select
   20 00000000 40039014 
                       ADC_1_EMUX
                               EQU              0x40039014  ; Trigger select
   21 00000000 400390A0 
                       ADC_1_SSMUX3
                               EQU              0x400390A0  ; Sample sequencer
   22 00000000 40039028 
                       ADC_1_PSSI



ARM Macro Assembler    Page 2 


                               EQU              0x40039028  ; Initiate sample
   23 00000000 40039044 
                       ADC_1_SSCTL0
                               EQU              0x40039044  ; Sample sequence c
                                                            ontrol
   24 00000000 400390A8 
                       ADC_1_SSFIFO3
                               EQU              0x400390A8  ; Channel 3 results
                                                            
   25 00000000 40039FC4 
                       ADC_1_PC
                               EQU              0x40039FC4  ; Sample rate
   26 00000000         
   27 00000000         ; GPIO Registers 
   28 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   29 00000000         ; PORT E base address = 0x40024000
   30 00000000 4002451C 
                       GPIO_PORTE_DEN
                               EQU              0x4002451C  ; Digital Enable
   31 00000000 4002452C 
                       GPIO_PORTE_PCTL
                               EQU              0x4002452C  ; Alternate functio
                                                            n select
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL
                               EQU              0x40024420  ; Enable Alt functi
                                                            ons
   33 00000000 40024528 
                       GPIO_PORTE_AMSEL
                               EQU              0x40024528  ; Enable analog
   34 00000000         
   35 00000000 20001000 
                       TARGET  EQU              0x20001000
   36 00000000         ;LABEL DIRECTIVE VALUE COMMENT
   37 00000000                 AREA             sdata , DATA, READONLY
   38 00000000                 THUMB
   39 00000000 56 6F 6C 
              74 61 67 
              65 28 6D 
              56 29 3A 
              20       Volt_Text
                               DCB              "Voltage(mV): "
   40 0000000D 0D              DCB              0x0D
   41 0000000E 04              DCB              0x04
   42 0000000F 2E      DOT     DCB              0x2E
   43 00000010 0D              DCB              0x0D
   44 00000011 04              DCB              0x04
   45 00000012         
   46 00000012         ;MSG  DCB     "delaying..."
   47 00000012         
   48 00000012         ;*******************************************************
                       ********
   49 00000012         ; Program section
   50 00000012         ;*******************************************************
                       ********
   51 00000012         ;LABEL  DIRECTIVE VALUE   COMMENT



ARM Macro Assembler    Page 3 


   52 00000012                 AREA             main, READONLY, CODE
   53 00000000                 THUMB
   54 00000000                 EXPORT           ADC_1_Read_Y
   55 00000000                 EXPORT           ADC_0_Read_X
   56 00000000                 EXPORT           Find_Pixel_Coordinate
   57 00000000                 EXPORT           ADC_Init
   58 00000000                 ENTRY
   59 00000000         
   60 00000000         
   61 00000000         loop
   62 00000000 F7FF FFFE       BL               ADC_0_Read_X
   63 00000004 F04F 033A       MOV              R3, #58
   64 00000008 F7FF FFFE       BL               Find_Pixel_Coordinate
   65 0000000C F7FF FFFE       BL               ADC_1_Read_Y
   66 00000010 F240 3339       MOV              R3, #825
   67 00000014 F7FF FFFE       BL               Find_Pixel_Coordinate
   68 00000018 E7F2            B                loop
   69 0000001A         ;-------------------------------------------
   70 0000001A         ; Read ADC_1 value and map to 0-3.3 V range
   71 0000001A         ; Return in R1
   72 0000001A         ;-------------------------------------------
   73 0000001A         ADC_1_Read_Y
   74 0000001A E92D 1FFD       PUSH{R0,         R2-R12}     ; push general purp
                                                            ose registers
   75 0000001E B500            PUSH{LR}                     ; push link registe
                                                            r
   76 00000020         ; initialize addess registers
   77 00000020 4A61            LDR              R2, =ADC_1_PSSI
   78 00000022 4B62            LDR              R3, =ADC_1_RIS
   79 00000024 4C62            LDR              R4, =ADC_1_SSFIFO3
   80 00000026 6810            LDR              R0, [R2]
   81 00000028 F040 000F       ORR              R0, R0, #0x0F ; set bit 3 to en
                                                            able seq 3
   82 0000002C 6010            STR              R0, [R2]
   83 0000002E BF00            NOP
   84 00000030 BF00            NOP
   85 00000032 BF00            NOP
   86 00000034         
   87 00000034 6818            LDR              R0, [R3]    ; check if sample i
                                                            s complete
   88 00000036 F010 0008       ANDS             R0, R0, #0x08
   89 0000003A D1FE            BNE              ADC_1_Read_Y
   90 0000003C         
   91 0000003C 6821            LDR              R1, [R4]    ; load reading in R
                                                            1
   92 0000003E F640 47E4       MOV              R7, #3300   ; max voltage
   93 00000042 F44F 5880       MOV              R8, #4096   ; max HEX value
   94 00000046 FB01 F107       MUL              R1, R1, R7  ; R1 = R1 * 3300
   95 0000004A FBB1 F1F8       UDIV             R1, R1, R8  ; R1 = R1 / 4096
   96 0000004E F85D EB04       POP{LR}                      ; pop link register
                                                            
   97 00000052 E8BD 1FFD       POP{R0,          R2-R12}     ; push general purp
                                                            ose registers
   98 00000056 4770            BX               LR
   99 00000058         ;-------------------------------------------
  100 00000058         
  101 00000058         ;-------------------------------------------
  102 00000058         ; Read ADC_0 value and map to 0-3.3 V range
  103 00000058         ; Return in R0



ARM Macro Assembler    Page 4 


  104 00000058         ;-------------------------------------------
  105 00000058         ADC_0_Read_X
  106 00000058 E92D 1FFE       PUSH{R1,         R2-R12}     ; push general purp
                                                            ose registers
  107 0000005C B500            PUSH{LR}                     ; push link registe
                                                            r
  108 0000005E         ; initialize addess registers
  109 0000005E 4A55            LDR              R2, =ADC_0_PSSI
  110 00000060 4B55            LDR              R3, =ADC_0_RIS
  111 00000062 4C56            LDR              R4, =ADC_0_SSFIFO3
  112 00000064 6810            LDR              R0, [R2]
  113 00000066 F040 000F       ORR              R0, R0, #0x0F ; set bit 3 to en
                                                            able seq 3
  114 0000006A 6010            STR              R0, [R2]
  115 0000006C BF00            NOP
  116 0000006E BF00            NOP
  117 00000070 BF00            NOP
  118 00000072         
  119 00000072 6818            LDR              R0, [R3]    ; check if sample i
                                                            s complete
  120 00000074 F010 0008       ANDS             R0, R0, #0x08
  121 00000078 D1FE            BNE              ADC_0_Read_X
  122 0000007A         
  123 0000007A 6820            LDR              R0, [R4]    ; load reading in R
                                                            0
  124 0000007C F640 47E4       MOV              R7, #3300   ; max voltage
  125 00000080 F44F 5880       MOV              R8, #4096   ; max HEX value
  126 00000084 FB00 F007       MUL              R0, R0, R7  ; R0 = R0 * 3300
  127 00000088 FBB0 F0F8       UDIV             R0, R0, R8  ; R0 = R0 / 4096
  128 0000008C F85D EB04       POP{LR}                      ; pop link register
                                                            
  129 00000090 E8BD 1FFE       POP{R1,          R2-R12}     ; push general purp
                                                            ose registers
  130 00000094 4770            BX               LR
  131 00000096         ;-------------------------------------------
  132 00000096         
  133 00000096         ;-------------------------------------------
  134 00000096         ; Find the pixel coordinate corresponding to ADC reading
                       
  135 00000096         ; Pass divisor in R3 and readings in R0 or R1
  136 00000096         ; Return R0 or R1
  137 00000096         ;-------------------------------------------
  138 00000096         Find_Pixel_Coordinate
  139 00000096 E92D 1FFC       PUSH{R2-R12}                 ; push general purp
                                                            ose registers
  140 0000009A B500            PUSH             {LR}
  141 0000009C F04F 0B01       MOV              R11, #1     ; R11 = Local coord
                                                            inate variable
  142 000000A0 469A            MOV              R10, R3     ; R10 = Local divis
                                                            or variable
  143 000000A2 2B38            CMP              R3, #56
  144 000000A4 D001            BEQ              Coordinate_X
  145 000000A6         Coordinate_Y
  146 000000A6 460B            MOV              R3, R1
  147 000000A8 E001            B                Process
  148 000000AA         Coordinate_X
  149 000000AA 4603            MOV              R3, R0
  150 000000AC E7FF            B                Process
  151 000000AE         Process



ARM Macro Assembler    Page 5 


  152 000000AE FB0A F90B       MUL              R9, R10, R11
  153 000000B2 454B            CMP              R3, R9
  154 000000B4 BFC8 F10B 
              0B01             ADDGT            R11, #1
  155 000000BA DCF8            BGT              Process
  156 000000BC F1AB 0B01       SUB              R11, R11, #1
  157 000000C0 F1BA 0F38       CMP              R10, #56
  158 000000C4 D001            BEQ              Coordinate_X_Return
  159 000000C6         Coordinate_Y_Return
  160 000000C6 4659            MOV              R1, R11
  161 000000C8 E001            B                Return_Coordinate
  162 000000CA         Coordinate_X_Return
  163 000000CA 4658            MOV              R0, R11
  164 000000CC E7FF            B                Return_Coordinate
  165 000000CE         Return_Coordinate
  166 000000CE F85D EB04       POP              {LR}
  167 000000D2 E8BD 1FFC       POP{R2-R12}                  ; push general purp
                                                            ose registers
  168 000000D6 4770            BX               LR
  169 000000D8         
  170 000000D8         
  171 000000D8         ;Print
  172 000000D8         ; LDR R5,=Volt_Text
  173 000000D8         ; BL  OutStr
  174 000000D8         ; 
  175 000000D8         ; MOV R6, R11
  176 000000D8         ; MOV R3, R11
  177 000000D8         ; LDR R5, = TARGET 
  178 000000D8         ; BL CONVRT
  179 000000D8         ; BL OutStr
  180 000000D8         ; ;MOV R11, #1
  181 000000D8         ; ;MOV R10, #52
  182 000000D8         ; ;B Reset_Constants
  183 000000D8         ; ;B ADC_1_Read ; Return from caller_Y
  184 000000D8         
  185 000000D8         ADC_Init
  186 000000D8 E92D 1FFF       PUSH{R0-R12}
  187 000000DC B500            PUSH{LR}
  188 000000DE         GPIO_Init
  189 000000DE         ; Start clocks for features to be used
  190 000000DE         
  191 000000DE 4938            LDR              R1, =RCGCADC ; start on ADC clo
                                                            ck
  192 000000E0 6808            LDR              R0, [R1]
  193 000000E2 F040 0003       ORR              R0, R0, #0x03 ; set bit 0:! to 
                                                            enable ADC_0 ADC_1 
                                                            clock
  194 000000E6 6008            STR              R0, [R1]
  195 000000E8 BF00            NOP                          ; Let clock stabili
                                                            ze
  196 000000EA BF00            NOP
  197 000000EC BF00            NOP
  198 000000EE         
  199 000000EE 4935            LDR              R1, =RCGCGPIO ; start on GPIO c
                                                            lock
  200 000000F0 6808            LDR              R0, [R1]
  201 000000F2 F040 0012       ORR              R0, R0, #0x12 ;!!!! set bit 4 t
                                                            o enable port E clo
                                                            ck and bit 1 to ena



ARM Macro Assembler    Page 6 


                                                            ble port B
  202 000000F6 6008            STR              R0, [R1]
  203 000000F8 BF00            NOP                          ; Let clock stabili
                                                            ze
  204 000000FA BF00            NOP
  205 000000FC BF00            NOP
  206 000000FE         
  207 000000FE         ; Enable alternate functions
  208 000000FE 4932            LDR              R1, =GPIO_PORTE_AFSEL
  209 00000100 6808            LDR              R0, [R1]
  210 00000102 F040 000C       ORR              R0, R0, #0x0C ; set bit 3:2 to 
                                                            enable alt function
                                                            s on PE3, PE2
  211 00000106 6008            STR              R0, [R1]
  212 00000108         ; PCTL does not have to be configured since ADC_0 is aut
                       omatically selected
  213 00000108         ; when port pin is set to analog.
  214 00000108         
  215 00000108         ; Disable digital on  PE3, PE2
  216 00000108 4930            LDR              R1, =GPIO_PORTE_DEN
  217 0000010A 6808            LDR              R0, [R1]
  218 0000010C F020 000C       BIC              R0, R0, #0x0C ; clear bit 3:2 t
                                                            o disable digital o
                                                            n PE2
  219 00000110 6008            STR              R0, [R1]
  220 00000112         
  221 00000112         ; Eanable analog on PE3
  222 00000112 492F            LDR              R1, =GPIO_PORTE_AMSEL
  223 00000114 6808            LDR              R0, [R1]
  224 00000116 F040 000C       ORR              R0, R0, #0x0C ; set bit 3:2 to 
                                                            enable analog on PE
                                                            3, PE2
  225 0000011A 6008            STR              R0, [R1]
  226 0000011C         
  227 0000011C         ADC_0_Init
  228 0000011C         ; Disable sequencer while ADC setup
  229 0000011C 492D            LDR              R1, =ADC_0_ACTSS
  230 0000011E 6808            LDR              R0, [R1]
  231 00000120 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  232 00000124 6008            STR              R0, [R1]
  233 00000126         
  234 00000126         ; Disable interrupts
  235 00000126 492C            LDR              R1, =ADC_0_IM
  236 00000128 6808            LDR              R0, [R1]
  237 0000012A F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            not use interrupts
  238 0000012E 6008            STR              R0, [R1]    ; 
  239 00000130         
  240 00000130         ; Select trigger source
  241 00000130 492A            LDR              R1, =ADC_0_EMUX
  242 00000132 6808            LDR              R0, [R1]
  243 00000134 F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select softw
                                                            are
  244 00000138 6008            STR              R0, [R1]    ; trigger
  245 0000013A         
  246 0000013A         ; Config sample sequence   
  247 0000013A 4929            LDR              R1, =ADC_0_SSCTL0



ARM Macro Assembler    Page 7 


  248 0000013C 6808            LDR              R0, [R1]
  249 0000013E F020 0006       BIC              R0, R0, #0x0006 ; set bits 2:1 
                                                            (IE0, END0)
  250 00000142 6008            STR              R0, [R1]
  251 00000144         
  252 00000144         ; Set sample rate
  253 00000144 4927            LDR              R1, =ADC_0_PC
  254 00000146 6808            LDR              R0, [R1]
  255 00000148 F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             0x01 for 125kHz
  256 0000014C 6008            STR              R0, [R1]
  257 0000014E         
  258 0000014E         ; Done with setup, enable sequencer
  259 0000014E 4921            LDR              R1, =ADC_0_ACTSS
  260 00000150 6808            LDR              R0, [R1]
  261 00000152 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  262 00000156 6008            STR              R0, [R1]
  263 00000158         
  264 00000158         ADC_1_Init
  265 00000158         ; Disable sequencer while ADC setup
  266 00000158 4923            LDR              R1, =ADC_1_ACTSS
  267 0000015A 6808            LDR              R0, [R1]
  268 0000015C F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  269 00000160 6008            STR              R0, [R1]
  270 00000162         
  271 00000162         ; Disable interrupts
  272 00000162 4922            LDR              R1, =ADC_1_IM
  273 00000164 6808            LDR              R0, [R1]
  274 00000166 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            not use interrupts
  275 0000016A 6008            STR              R0, [R1]    ; 
  276 0000016C         
  277 0000016C         ; Select trigger source
  278 0000016C 4920            LDR              R1, =ADC_1_EMUX
  279 0000016E 6808            LDR              R0, [R1]
  280 00000170 F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select softw
                                                            are
  281 00000174 6008            STR              R0, [R1]    ; trigger
  282 00000176         
  283 00000176 491F            LDR              R1, =ADC_1_SSMUX3
  284 00000178 6808            LDR              R0, [R1]
  285 0000017A F040 0001       ORR              R0, R0, #0x1 ; Select PE2
  286 0000017E 6008            STR              R0, [R1]
  287 00000180         
  288 00000180         ; Config sample sequence   
  289 00000180 491D            LDR              R1, =ADC_1_SSCTL0
  290 00000182 6808            LDR              R0, [R1]
  291 00000184 F020 0006       BIC              R0, R0, #0x0006 ; set bits 2:1 
                                                            (IE0, END0)
  292 00000188 6008            STR              R0, [R1]
  293 0000018A         
  294 0000018A         ; Set sample rate
  295 0000018A 491C            LDR              R1, =ADC_1_PC
  296 0000018C 6808            LDR              R0, [R1]
  297 0000018E F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             0x01 for 125kHz



ARM Macro Assembler    Page 8 


  298 00000192 6008            STR              R0, [R1]
  299 00000194         
  300 00000194         ; Done with setup, enable sequencer
  301 00000194 4914            LDR              R1, =ADC_1_ACTSS
  302 00000196 6808            LDR              R0, [R1]
  303 00000198 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  304 0000019C 6008            STR              R0, [R1]
  305 0000019E         
  306 0000019E F85D EB04       POP{LR}
  307 000001A2 E8BD 1FFF       POP{R0-R12}
  308 000001A6 4770            BX               LR          ; Return from calle
                                                            r
  309 000001A8         
  310 000001A8         ;*******************************************************
                       ********
  311 000001A8         ; End of the program section
  312 000001A8         ;*******************************************************
                       ********
  313 000001A8         ;LABEL  DIRECTIVE VALUE   COMMENT
  314 000001A8                 END
              40039028 
              40039004 
              400390A8 
              40038028 
              40038004 
              400380A8 
              400FE638 
              400FE608 
              40024420 
              4002451C 
              40024528 
              40038000 
              40038008 
              40038014 
              40038044 
              40038FC4 
              40039000 
              40039008 
              40039014 
              400390A0 
              40039044 
              40039FC4 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\adc_function_class.d -o.\objects\adc_function_class.o
 -I.\RTE\_EE447-Project -ID:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Includ
e\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefin
e="__UVISION_VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listi
ngs\adc_function_class.lst ADC_Function_Class.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DOT 0000000F

Symbol: DOT
   Definitions
      At line 42 in file ADC_Function_Class.s
   Uses
      None
Comment: DOT unused
Volt_Text 00000000

Symbol: Volt_Text
   Definitions
      At line 39 in file ADC_Function_Class.s
   Uses
      None
Comment: Volt_Text unused
sdata 00000000

Symbol: sdata
   Definitions
      At line 37 in file ADC_Function_Class.s
   Uses
      None
Comment: sdata unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADC_0_Init 0000011C

Symbol: ADC_0_Init
   Definitions
      At line 227 in file ADC_Function_Class.s
   Uses
      None
Comment: ADC_0_Init unused
ADC_0_Read_X 00000058

Symbol: ADC_0_Read_X
   Definitions
      At line 105 in file ADC_Function_Class.s
   Uses
      At line 55 in file ADC_Function_Class.s
      At line 62 in file ADC_Function_Class.s
      At line 121 in file ADC_Function_Class.s

ADC_1_Init 00000158

Symbol: ADC_1_Init
   Definitions
      At line 264 in file ADC_Function_Class.s
   Uses
      None
Comment: ADC_1_Init unused
ADC_1_Read_Y 0000001A

Symbol: ADC_1_Read_Y
   Definitions
      At line 73 in file ADC_Function_Class.s
   Uses
      At line 54 in file ADC_Function_Class.s
      At line 65 in file ADC_Function_Class.s
      At line 89 in file ADC_Function_Class.s

ADC_Init 000000D8

Symbol: ADC_Init
   Definitions
      At line 185 in file ADC_Function_Class.s
   Uses
      At line 57 in file ADC_Function_Class.s
Comment: ADC_Init used once
Coordinate_X 000000AA

Symbol: Coordinate_X
   Definitions
      At line 148 in file ADC_Function_Class.s
   Uses
      At line 144 in file ADC_Function_Class.s
Comment: Coordinate_X used once
Coordinate_X_Return 000000CA

Symbol: Coordinate_X_Return
   Definitions
      At line 162 in file ADC_Function_Class.s
   Uses
      At line 158 in file ADC_Function_Class.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: Coordinate_X_Return used once
Coordinate_Y 000000A6

Symbol: Coordinate_Y
   Definitions
      At line 145 in file ADC_Function_Class.s
   Uses
      None
Comment: Coordinate_Y unused
Coordinate_Y_Return 000000C6

Symbol: Coordinate_Y_Return
   Definitions
      At line 159 in file ADC_Function_Class.s
   Uses
      None
Comment: Coordinate_Y_Return unused
Find_Pixel_Coordinate 00000096

Symbol: Find_Pixel_Coordinate
   Definitions
      At line 138 in file ADC_Function_Class.s
   Uses
      At line 56 in file ADC_Function_Class.s
      At line 64 in file ADC_Function_Class.s
      At line 67 in file ADC_Function_Class.s

GPIO_Init 000000DE

Symbol: GPIO_Init
   Definitions
      At line 188 in file ADC_Function_Class.s
   Uses
      None
Comment: GPIO_Init unused
Process 000000AE

Symbol: Process
   Definitions
      At line 151 in file ADC_Function_Class.s
   Uses
      At line 147 in file ADC_Function_Class.s
      At line 150 in file ADC_Function_Class.s
      At line 155 in file ADC_Function_Class.s

Return_Coordinate 000000CE

Symbol: Return_Coordinate
   Definitions
      At line 165 in file ADC_Function_Class.s
   Uses
      At line 161 in file ADC_Function_Class.s
      At line 164 in file ADC_Function_Class.s

loop 00000000

Symbol: loop
   Definitions
      At line 61 in file ADC_Function_Class.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 68 in file ADC_Function_Class.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 52 in file ADC_Function_Class.s
   Uses
      None
Comment: main unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC_0_ACTSS 40038000

Symbol: ADC_0_ACTSS
   Definitions
      At line 8 in file ADC_Function_Class.s
   Uses
      At line 229 in file ADC_Function_Class.s
      At line 259 in file ADC_Function_Class.s

ADC_0_EMUX 40038014

Symbol: ADC_0_EMUX
   Definitions
      At line 11 in file ADC_Function_Class.s
   Uses
      At line 241 in file ADC_Function_Class.s
Comment: ADC_0_EMUX used once
ADC_0_IM 40038008

Symbol: ADC_0_IM
   Definitions
      At line 10 in file ADC_Function_Class.s
   Uses
      At line 235 in file ADC_Function_Class.s
Comment: ADC_0_IM used once
ADC_0_PC 40038FC4

Symbol: ADC_0_PC
   Definitions
      At line 15 in file ADC_Function_Class.s
   Uses
      At line 253 in file ADC_Function_Class.s
Comment: ADC_0_PC used once
ADC_0_PSSI 40038028

Symbol: ADC_0_PSSI
   Definitions
      At line 12 in file ADC_Function_Class.s
   Uses
      At line 109 in file ADC_Function_Class.s
Comment: ADC_0_PSSI used once
ADC_0_RIS 40038004

Symbol: ADC_0_RIS
   Definitions
      At line 9 in file ADC_Function_Class.s
   Uses
      At line 110 in file ADC_Function_Class.s
Comment: ADC_0_RIS used once
ADC_0_SSCTL0 40038044

Symbol: ADC_0_SSCTL0
   Definitions
      At line 13 in file ADC_Function_Class.s
   Uses
      At line 247 in file ADC_Function_Class.s
Comment: ADC_0_SSCTL0 used once
ADC_0_SSFIFO3 400380A8




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: ADC_0_SSFIFO3
   Definitions
      At line 14 in file ADC_Function_Class.s
   Uses
      At line 111 in file ADC_Function_Class.s
Comment: ADC_0_SSFIFO3 used once
ADC_1_ACTSS 40039000

Symbol: ADC_1_ACTSS
   Definitions
      At line 17 in file ADC_Function_Class.s
   Uses
      At line 266 in file ADC_Function_Class.s
      At line 301 in file ADC_Function_Class.s

ADC_1_EMUX 40039014

Symbol: ADC_1_EMUX
   Definitions
      At line 20 in file ADC_Function_Class.s
   Uses
      At line 278 in file ADC_Function_Class.s
Comment: ADC_1_EMUX used once
ADC_1_IM 40039008

Symbol: ADC_1_IM
   Definitions
      At line 19 in file ADC_Function_Class.s
   Uses
      At line 272 in file ADC_Function_Class.s
Comment: ADC_1_IM used once
ADC_1_PC 40039FC4

Symbol: ADC_1_PC
   Definitions
      At line 25 in file ADC_Function_Class.s
   Uses
      At line 295 in file ADC_Function_Class.s
Comment: ADC_1_PC used once
ADC_1_PSSI 40039028

Symbol: ADC_1_PSSI
   Definitions
      At line 22 in file ADC_Function_Class.s
   Uses
      At line 77 in file ADC_Function_Class.s
Comment: ADC_1_PSSI used once
ADC_1_RIS 40039004

Symbol: ADC_1_RIS
   Definitions
      At line 18 in file ADC_Function_Class.s
   Uses
      At line 78 in file ADC_Function_Class.s
Comment: ADC_1_RIS used once
ADC_1_SSCTL0 40039044

Symbol: ADC_1_SSCTL0
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 23 in file ADC_Function_Class.s
   Uses
      At line 289 in file ADC_Function_Class.s
Comment: ADC_1_SSCTL0 used once
ADC_1_SSFIFO3 400390A8

Symbol: ADC_1_SSFIFO3
   Definitions
      At line 24 in file ADC_Function_Class.s
   Uses
      At line 79 in file ADC_Function_Class.s
Comment: ADC_1_SSFIFO3 used once
ADC_1_SSMUX3 400390A0

Symbol: ADC_1_SSMUX3
   Definitions
      At line 21 in file ADC_Function_Class.s
   Uses
      At line 283 in file ADC_Function_Class.s
Comment: ADC_1_SSMUX3 used once
GPIO_PORTE_AFSEL 40024420

Symbol: GPIO_PORTE_AFSEL
   Definitions
      At line 32 in file ADC_Function_Class.s
   Uses
      At line 208 in file ADC_Function_Class.s
Comment: GPIO_PORTE_AFSEL used once
GPIO_PORTE_AMSEL 40024528

Symbol: GPIO_PORTE_AMSEL
   Definitions
      At line 33 in file ADC_Function_Class.s
   Uses
      At line 222 in file ADC_Function_Class.s
Comment: GPIO_PORTE_AMSEL used once
GPIO_PORTE_DEN 4002451C

Symbol: GPIO_PORTE_DEN
   Definitions
      At line 30 in file ADC_Function_Class.s
   Uses
      At line 216 in file ADC_Function_Class.s
Comment: GPIO_PORTE_DEN used once
GPIO_PORTE_PCTL 4002452C

Symbol: GPIO_PORTE_PCTL
   Definitions
      At line 31 in file ADC_Function_Class.s
   Uses
      None
Comment: GPIO_PORTE_PCTL unused
RCGCADC 400FE638

Symbol: RCGCADC
   Definitions
      At line 7 in file ADC_Function_Class.s
   Uses
      At line 191 in file ADC_Function_Class.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: RCGCADC used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 28 in file ADC_Function_Class.s
   Uses
      At line 199 in file ADC_Function_Class.s
Comment: RCGCGPIO used once
TARGET 20001000

Symbol: TARGET
   Definitions
      At line 35 in file ADC_Function_Class.s
   Uses
      None
Comment: TARGET unused
24 symbols
378 symbols in table
