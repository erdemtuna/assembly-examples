


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL  DIRECTIVE VALUE   COMMENT
    6 00000000         ; ADC Registers
    7 00000000 400FE638 
                       RCGCADC EQU              0x400FE638  ; ADC clock registe
                                                            r
    8 00000000 40038000 
                       ADC_0_ACTSS
                               EQU              0x40038000  ; Sample sequencer 
                                                            (ADC_0 base address
                                                            )
    9 00000000 40038004 
                       ADC_0_RIS
                               EQU              0x40038004  ; Interrupt status
   10 00000000 40038008 
                       ADC_0_IM
                               EQU              0x40038008  ; Interrupt select
   11 00000000 40038014 
                       ADC_0_EMUX
                               EQU              0x40038014  ; Trigger select
   12 00000000 40038028 
                       ADC_0_PSSI
                               EQU              0x40038028  ; Initiate sample
   13 00000000 40038044 
                       ADC_0_SSCTL0
                               EQU              0x40038044  ; Sample sequence c
                                                            ontrol
   14 00000000 400380A8 
                       ADC_0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                            
   15 00000000 40038FC4 
                       ADC_0_PC
                               EQU              0x40038FC4  ; Sample rate
   16 00000000         
   17 00000000 40039000 
                       ADC_1_ACTSS
                               EQU              0x40039000  ; Sample sequencer 
                                                            (ADC_1 base address
                                                            )
   18 00000000 40039004 
                       ADC_1_RIS
                               EQU              0x40039004  ; Interrupt status
   19 00000000 40039008 
                       ADC_1_IM
                               EQU              0x40039008  ; Interrupt select
   20 00000000 40039014 
                       ADC_1_EMUX
                               EQU              0x40039014  ; Trigger select
   21 00000000 400390A0 
                       ADC_1_SSMUX3
                               EQU              0x400390A0  ; Sample sequencer
   22 00000000 40039028 
                       ADC_1_PSSI



ARM Macro Assembler    Page 2 


                               EQU              0x40039028  ; Initiate sample
   23 00000000 40039044 
                       ADC_1_SSCTL0
                               EQU              0x40039044  ; Sample sequence c
                                                            ontrol
   24 00000000 400390A8 
                       ADC_1_SSFIFO3
                               EQU              0x400390A8  ; Channel 3 results
                                                            
   25 00000000 40039FC4 
                       ADC_1_PC
                               EQU              0x40039FC4  ; Sample rate
   26 00000000         
   27 00000000         ; GPIO Registers 
   28 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   29 00000000         ; PORT E base address = 0x40024000
   30 00000000 4002451C 
                       GPIO_PORTE_DEN
                               EQU              0x4002451C  ; Digital Enable
   31 00000000 4002452C 
                       GPIO_PORTE_PCTL
                               EQU              0x4002452C  ; Alternate functio
                                                            n select
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL
                               EQU              0x40024420  ; Enable Alt functi
                                                            ons
   33 00000000 40024528 
                       GPIO_PORTE_AMSEL
                               EQU              0x40024528  ; Enable analog
   34 00000000         
   35 00000000 20001000 
                       TARGET  EQU              0x20001000
   36 00000000         ;LABEL DIRECTIVE VALUE COMMENT
   37 00000000                 AREA             sdata , DATA, READONLY
   38 00000000                 THUMB
   39 00000000 56 6F 6C 
              74 61 67 
              65 28 6D 
              56 29 3A 
              20       Volt_Text
                               DCB              "Voltage(mV): "
   40 0000000D 0D              DCB              0x0D
   41 0000000E 04              DCB              0x04
   42 0000000F 2E      DOT     DCB              0x2E
   43 00000010 0D              DCB              0x0D
   44 00000011 04              DCB              0x04
   45 00000012         
   46 00000012         ;MSG  DCB     "delaying..."
   47 00000012         
   48 00000012         ;*******************************************************
                       ********
   49 00000012         ; Program section
   50 00000012         ;*******************************************************
                       ********
   51 00000012         ;LABEL  DIRECTIVE VALUE   COMMENT



ARM Macro Assembler    Page 3 


   52 00000012                 AREA             main, READONLY, CODE
   53 00000000                 THUMB
   54 00000000                 EXPORT           ADC_1_Read_Y
   55 00000000                 EXPORT           ADC_0_Read_X
   56 00000000                 EXPORT           Find_Pixel_Coordinate
   57 00000000                 EXPORT           ADC_Init
   58 00000000                 EXPORT           __main
   59 00000000                 ENTRY
   60 00000000         
   61 00000000         __main
   62 00000000         
   63 00000000 F7FF FFFE       BL               ADC_Init
   64 00000004         loop
   65 00000004 F7FF FFFE       BL               ADC_0_Read_X
   66 00000008 F04F 033A       MOV              R3, #58
   67 0000000C F7FF FFFE       BL               Find_Pixel_Coordinate
   68 00000010 F7FF FFFE       BL               ADC_1_Read_Y
   69 00000014 F240 3339       MOV              R3, #825
   70 00000018 F7FF FFFE       BL               Find_Pixel_Coordinate
   71 0000001C E7F2            B                loop
   72 0000001E         ;-------------------------------------------
   73 0000001E         ; Read ADC_1 value and map to 0-3.3 V range
   74 0000001E         ; Return in R1
   75 0000001E         ;-------------------------------------------
   76 0000001E         ADC_1_Read_Y
   77 0000001E E92D 1FFD       PUSH{R0,         R2-R12}     ; push general purp
                                                            ose registers
   78 00000022 B500            PUSH{LR}                     ; push link registe
                                                            r
   79 00000024         ; initialize addess registers
   80 00000024 4A61            LDR              R2, =ADC_1_PSSI
   81 00000026 4B62            LDR              R3, =ADC_1_RIS
   82 00000028 4C62            LDR              R4, =ADC_1_SSFIFO3
   83 0000002A 6810            LDR              R0, [R2]
   84 0000002C F040 000F       ORR              R0, R0, #0x0F ; set bit 3 to en
                                                            able seq 3
   85 00000030 6010            STR              R0, [R2]
   86 00000032 BF00            NOP
   87 00000034 BF00            NOP
   88 00000036 BF00            NOP
   89 00000038         
   90 00000038 6818            LDR              R0, [R3]    ; check if sample i
                                                            s complete
   91 0000003A F010 0008       ANDS             R0, R0, #0x08
   92 0000003E D1FE            BNE              ADC_1_Read_Y
   93 00000040         
   94 00000040 6821            LDR              R1, [R4]    ; load reading in R
                                                            1
   95 00000042 F640 47E4       MOV              R7, #3300   ; max voltage
   96 00000046 F44F 5880       MOV              R8, #4096   ; max HEX value
   97 0000004A FB01 F107       MUL              R1, R1, R7  ; R1 = R1 * 3300
   98 0000004E FBB1 F1F8       UDIV             R1, R1, R8  ; R1 = R1 / 4096
   99 00000052 F85D EB04       POP{LR}                      ; pop link register
                                                            
  100 00000056 E8BD 1FFD       POP{R0,          R2-R12}     ; push general purp
                                                            ose registers
  101 0000005A 4770            BX               LR
  102 0000005C         ;-------------------------------------------
  103 0000005C         



ARM Macro Assembler    Page 4 


  104 0000005C         ;-------------------------------------------
  105 0000005C         ; Read ADC_0 value and map to 0-3.3 V range
  106 0000005C         ; Return in R0
  107 0000005C         ;-------------------------------------------
  108 0000005C         ADC_0_Read_X
  109 0000005C E92D 1FFE       PUSH{R1,         R2-R12}     ; push general purp
                                                            ose registers
  110 00000060 B500            PUSH{LR}                     ; push link registe
                                                            r
  111 00000062         ; initialize addess registers
  112 00000062 4A55            LDR              R2, =ADC_0_PSSI
  113 00000064 4B55            LDR              R3, =ADC_0_RIS
  114 00000066 4C56            LDR              R4, =ADC_0_SSFIFO3
  115 00000068 6810            LDR              R0, [R2]
  116 0000006A F040 000F       ORR              R0, R0, #0x0F ; set bit 3 to en
                                                            able seq 3
  117 0000006E 6010            STR              R0, [R2]
  118 00000070 BF00            NOP
  119 00000072 BF00            NOP
  120 00000074 BF00            NOP
  121 00000076         
  122 00000076 6818            LDR              R0, [R3]    ; check if sample i
                                                            s complete
  123 00000078 F010 0008       ANDS             R0, R0, #0x08
  124 0000007C D1FE            BNE              ADC_0_Read_X
  125 0000007E         
  126 0000007E 6820            LDR              R0, [R4]    ; load reading in R
                                                            0
  127 00000080 F640 47E4       MOV              R7, #3300   ; max voltage
  128 00000084 F44F 5880       MOV              R8, #4096   ; max HEX value
  129 00000088 FB00 F007       MUL              R0, R0, R7  ; R0 = R0 * 3300
  130 0000008C FBB0 F0F8       UDIV             R0, R0, R8  ; R0 = R0 / 4096
  131 00000090 F85D EB04       POP{LR}                      ; pop link register
                                                            
  132 00000094 E8BD 1FFE       POP{R1,          R2-R12}     ; push general purp
                                                            ose registers
  133 00000098 4770            BX               LR
  134 0000009A         ;-------------------------------------------
  135 0000009A         
  136 0000009A         ;-------------------------------------------
  137 0000009A         ; Find the pixel coordinate corresponding to ADC reading
                       
  138 0000009A         ; Pass divisor in R3 and readings in R0 or R1
  139 0000009A         ; Return R0 or R1
  140 0000009A         ;-------------------------------------------
  141 0000009A         Find_Pixel_Coordinate
  142 0000009A E92D 1FFC       PUSH{R2-R12}                 ; push general purp
                                                            ose registers
  143 0000009E B500            PUSH             {LR}
  144 000000A0 F04F 0B01       MOV              R11, #1     ; R11 = Local coord
                                                            inate variable
  145 000000A4 469A            MOV              R10, R3     ; R10 = Local divis
                                                            or variable
  146 000000A6 2B39            CMP              R3, #57
  147 000000A8 D001            BEQ              Coordinate_X
  148 000000AA         Coordinate_Y
  149 000000AA 460B            MOV              R3, R1
  150 000000AC E001            B                Process
  151 000000AE         Coordinate_X



ARM Macro Assembler    Page 5 


  152 000000AE 4603            MOV              R3, R0
  153 000000B0 E7FF            B                Process
  154 000000B2         Process
  155 000000B2 FB0A F90B       MUL              R9, R10, R11
  156 000000B6 454B            CMP              R3, R9
  157 000000B8 BFC8 F10B 
              0B01             ADDGT            R11, #1
  158 000000BE DCF8            BGT              Process
  159 000000C0 F1AB 0B01       SUB              R11, R11, #1
  160 000000C4 F1BA 0F39       CMP              R10, #57
  161 000000C8 D001            BEQ              Coordinate_X_Return
  162 000000CA         Coordinate_Y_Return
  163 000000CA 4659            MOV              R1, R11
  164 000000CC E001            B                Return_Coordinate
  165 000000CE         Coordinate_X_Return
  166 000000CE 4658            MOV              R0, R11
  167 000000D0 E7FF            B                Return_Coordinate
  168 000000D2         Return_Coordinate
  169 000000D2 F85D EB04       POP              {LR}
  170 000000D6 E8BD 1FFC       POP{R2-R12}                  ; push general purp
                                                            ose registers
  171 000000DA 4770            BX               LR
  172 000000DC         
  173 000000DC         
  174 000000DC         ;Print
  175 000000DC         ; LDR R5,=Volt_Text
  176 000000DC         ; BL  OutStr
  177 000000DC         ; 
  178 000000DC         ; MOV R6, R11
  179 000000DC         ; MOV R3, R11
  180 000000DC         ; LDR R5, = TARGET 
  181 000000DC         ; BL CONVRT
  182 000000DC         ; BL OutStr
  183 000000DC         ; ;MOV R11, #1
  184 000000DC         ; ;MOV R10, #52
  185 000000DC         ; ;B Reset_Constants
  186 000000DC         ; ;B ADC_1_Read ; Return from caller_Y
  187 000000DC         
  188 000000DC         ADC_Init
  189 000000DC E92D 1FFF       PUSH{R0-R12}
  190 000000E0 B500            PUSH{LR}
  191 000000E2         GPIO_Init
  192 000000E2         ; Start clocks for features to be used
  193 000000E2         
  194 000000E2 4938            LDR              R1, =RCGCADC ; start on ADC clo
                                                            ck
  195 000000E4 6808            LDR              R0, [R1]
  196 000000E6 F040 0003       ORR              R0, R0, #0x03 ; set bit 0:! to 
                                                            enable ADC_0 ADC_1 
                                                            clock
  197 000000EA 6008            STR              R0, [R1]
  198 000000EC BF00            NOP                          ; Let clock stabili
                                                            ze
  199 000000EE BF00            NOP
  200 000000F0 BF00            NOP
  201 000000F2         
  202 000000F2 4935            LDR              R1, =RCGCGPIO ; start on GPIO c
                                                            lock
  203 000000F4 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 6 


  204 000000F6 F040 0012       ORR              R0, R0, #0x12 ;!!!! set bit 4 t
                                                            o enable port E clo
                                                            ck and bit 1 to ena
                                                            ble port B
  205 000000FA 6008            STR              R0, [R1]
  206 000000FC BF00            NOP                          ; Let clock stabili
                                                            ze
  207 000000FE BF00            NOP
  208 00000100 BF00            NOP
  209 00000102         
  210 00000102         ; Enable alternate functions
  211 00000102 4932            LDR              R1, =GPIO_PORTE_AFSEL
  212 00000104 6808            LDR              R0, [R1]
  213 00000106 F040 000C       ORR              R0, R0, #0x0C ; set bit 3:2 to 
                                                            enable alt function
                                                            s on PE3, PE2
  214 0000010A 6008            STR              R0, [R1]
  215 0000010C         ; PCTL does not have to be configured since ADC_0 is aut
                       omatically selected
  216 0000010C         ; when port pin is set to analog.
  217 0000010C         
  218 0000010C         ; Disable digital on  PE3, PE2
  219 0000010C 4930            LDR              R1, =GPIO_PORTE_DEN
  220 0000010E 6808            LDR              R0, [R1]
  221 00000110 F020 000C       BIC              R0, R0, #0x0C ; clear bit 3:2 t
                                                            o disable digital o
                                                            n PE2
  222 00000114 6008            STR              R0, [R1]
  223 00000116         
  224 00000116         ; Eanable analog on PE3
  225 00000116 492F            LDR              R1, =GPIO_PORTE_AMSEL
  226 00000118 6808            LDR              R0, [R1]
  227 0000011A F040 000C       ORR              R0, R0, #0x0C ; set bit 3:2 to 
                                                            enable analog on PE
                                                            3, PE2
  228 0000011E 6008            STR              R0, [R1]
  229 00000120         
  230 00000120         ADC_0_Init
  231 00000120         ; Disable sequencer while ADC setup
  232 00000120 492D            LDR              R1, =ADC_0_ACTSS
  233 00000122 6808            LDR              R0, [R1]
  234 00000124 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  235 00000128 6008            STR              R0, [R1]
  236 0000012A         
  237 0000012A         ; Disable interrupts
  238 0000012A 492C            LDR              R1, =ADC_0_IM
  239 0000012C 6808            LDR              R0, [R1]
  240 0000012E F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            not use interrupts
  241 00000132 6008            STR              R0, [R1]    ; 
  242 00000134         
  243 00000134         ; Select trigger source
  244 00000134 492A            LDR              R1, =ADC_0_EMUX
  245 00000136 6808            LDR              R0, [R1]
  246 00000138 F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select softw
                                                            are
  247 0000013C 6008            STR              R0, [R1]    ; trigger



ARM Macro Assembler    Page 7 


  248 0000013E         
  249 0000013E         ; Config sample sequence   
  250 0000013E 4929            LDR              R1, =ADC_0_SSCTL0
  251 00000140 6808            LDR              R0, [R1]
  252 00000142 F020 0006       BIC              R0, R0, #0x0006 ; set bits 2:1 
                                                            (IE0, END0)
  253 00000146 6008            STR              R0, [R1]
  254 00000148         
  255 00000148         ; Set sample rate
  256 00000148 4927            LDR              R1, =ADC_0_PC
  257 0000014A 6808            LDR              R0, [R1]
  258 0000014C F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             0x01 for 125kHz
  259 00000150 6008            STR              R0, [R1]
  260 00000152         
  261 00000152         ; Done with setup, enable sequencer
  262 00000152 4921            LDR              R1, =ADC_0_ACTSS
  263 00000154 6808            LDR              R0, [R1]
  264 00000156 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  265 0000015A 6008            STR              R0, [R1]
  266 0000015C         
  267 0000015C         ADC_1_Init
  268 0000015C         ; Disable sequencer while ADC setup
  269 0000015C 4923            LDR              R1, =ADC_1_ACTSS
  270 0000015E 6808            LDR              R0, [R1]
  271 00000160 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  272 00000164 6008            STR              R0, [R1]
  273 00000166         
  274 00000166         ; Disable interrupts
  275 00000166 4922            LDR              R1, =ADC_1_IM
  276 00000168 6808            LDR              R0, [R1]
  277 0000016A F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            not use interrupts
  278 0000016E 6008            STR              R0, [R1]    ; 
  279 00000170         
  280 00000170         ; Select trigger source
  281 00000170 4920            LDR              R1, =ADC_1_EMUX
  282 00000172 6808            LDR              R0, [R1]
  283 00000174 F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select softw
                                                            are
  284 00000178 6008            STR              R0, [R1]    ; trigger
  285 0000017A         
  286 0000017A 491F            LDR              R1, =ADC_1_SSMUX3
  287 0000017C 6808            LDR              R0, [R1]
  288 0000017E F040 0001       ORR              R0, R0, #0x1 ; Select PE2
  289 00000182 6008            STR              R0, [R1]
  290 00000184         
  291 00000184         ; Config sample sequence   
  292 00000184 491D            LDR              R1, =ADC_1_SSCTL0
  293 00000186 6808            LDR              R0, [R1]
  294 00000188 F020 0006       BIC              R0, R0, #0x0006 ; set bits 2:1 
                                                            (IE0, END0)
  295 0000018C 6008            STR              R0, [R1]
  296 0000018E         
  297 0000018E         ; Set sample rate
  298 0000018E 491C            LDR              R1, =ADC_1_PC



ARM Macro Assembler    Page 8 


  299 00000190 6808            LDR              R0, [R1]
  300 00000192 F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             0x01 for 125kHz
  301 00000196 6008            STR              R0, [R1]
  302 00000198         
  303 00000198         ; Done with setup, enable sequencer
  304 00000198 4914            LDR              R1, =ADC_1_ACTSS
  305 0000019A 6808            LDR              R0, [R1]
  306 0000019C F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  307 000001A0 6008            STR              R0, [R1]
  308 000001A2         
  309 000001A2 F85D EB04       POP{LR}
  310 000001A6 E8BD 1FFF       POP{R0-R12}
  311 000001AA 4770            BX               LR          ; Return from calle
                                                            r
  312 000001AC         
  313 000001AC         ;*******************************************************
                       ********
  314 000001AC         ; End of the program section
  315 000001AC         ;*******************************************************
                       ********
  316 000001AC         ;LABEL  DIRECTIVE VALUE   COMMENT
  317 000001AC                 END
              40039028 
              40039004 
              400390A8 
              40038028 
              40038004 
              400380A8 
              400FE638 
              400FE608 
              40024420 
              4002451C 
              40024528 
              40038000 
              40038008 
              40038014 
              40038044 
              40038FC4 
              40039000 
              40039008 
              40039014 
              400390A0 
              40039044 
              40039FC4 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\adc_function_class.d -o.\objects\adc_function_class.o
 -I.\RTE\_EE447-Project -ID:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Includ
e\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefin
e="__UVISION_VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listi
ngs\adc_function_class.lst ADC_Function_Class.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DOT 0000000F

Symbol: DOT
   Definitions
      At line 42 in file ADC_Function_Class.s
   Uses
      None
Comment: DOT unused
Volt_Text 00000000

Symbol: Volt_Text
   Definitions
      At line 39 in file ADC_Function_Class.s
   Uses
      None
Comment: Volt_Text unused
sdata 00000000

Symbol: sdata
   Definitions
      At line 37 in file ADC_Function_Class.s
   Uses
      None
Comment: sdata unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADC_0_Init 00000120

Symbol: ADC_0_Init
   Definitions
      At line 230 in file ADC_Function_Class.s
   Uses
      None
Comment: ADC_0_Init unused
ADC_0_Read_X 0000005C

Symbol: ADC_0_Read_X
   Definitions
      At line 108 in file ADC_Function_Class.s
   Uses
      At line 55 in file ADC_Function_Class.s
      At line 65 in file ADC_Function_Class.s
      At line 124 in file ADC_Function_Class.s

ADC_1_Init 0000015C

Symbol: ADC_1_Init
   Definitions
      At line 267 in file ADC_Function_Class.s
   Uses
      None
Comment: ADC_1_Init unused
ADC_1_Read_Y 0000001E

Symbol: ADC_1_Read_Y
   Definitions
      At line 76 in file ADC_Function_Class.s
   Uses
      At line 54 in file ADC_Function_Class.s
      At line 68 in file ADC_Function_Class.s
      At line 92 in file ADC_Function_Class.s

ADC_Init 000000DC

Symbol: ADC_Init
   Definitions
      At line 188 in file ADC_Function_Class.s
   Uses
      At line 57 in file ADC_Function_Class.s
      At line 63 in file ADC_Function_Class.s

Coordinate_X 000000AE

Symbol: Coordinate_X
   Definitions
      At line 151 in file ADC_Function_Class.s
   Uses
      At line 147 in file ADC_Function_Class.s
Comment: Coordinate_X used once
Coordinate_X_Return 000000CE

Symbol: Coordinate_X_Return
   Definitions
      At line 165 in file ADC_Function_Class.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 161 in file ADC_Function_Class.s
Comment: Coordinate_X_Return used once
Coordinate_Y 000000AA

Symbol: Coordinate_Y
   Definitions
      At line 148 in file ADC_Function_Class.s
   Uses
      None
Comment: Coordinate_Y unused
Coordinate_Y_Return 000000CA

Symbol: Coordinate_Y_Return
   Definitions
      At line 162 in file ADC_Function_Class.s
   Uses
      None
Comment: Coordinate_Y_Return unused
Find_Pixel_Coordinate 0000009A

Symbol: Find_Pixel_Coordinate
   Definitions
      At line 141 in file ADC_Function_Class.s
   Uses
      At line 56 in file ADC_Function_Class.s
      At line 67 in file ADC_Function_Class.s
      At line 70 in file ADC_Function_Class.s

GPIO_Init 000000E2

Symbol: GPIO_Init
   Definitions
      At line 191 in file ADC_Function_Class.s
   Uses
      None
Comment: GPIO_Init unused
Process 000000B2

Symbol: Process
   Definitions
      At line 154 in file ADC_Function_Class.s
   Uses
      At line 150 in file ADC_Function_Class.s
      At line 153 in file ADC_Function_Class.s
      At line 158 in file ADC_Function_Class.s

Return_Coordinate 000000D2

Symbol: Return_Coordinate
   Definitions
      At line 168 in file ADC_Function_Class.s
   Uses
      At line 164 in file ADC_Function_Class.s
      At line 167 in file ADC_Function_Class.s

__main 00000000

Symbol: __main
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 61 in file ADC_Function_Class.s
   Uses
      At line 58 in file ADC_Function_Class.s
Comment: __main used once
loop 00000004

Symbol: loop
   Definitions
      At line 64 in file ADC_Function_Class.s
   Uses
      At line 71 in file ADC_Function_Class.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 52 in file ADC_Function_Class.s
   Uses
      None
Comment: main unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC_0_ACTSS 40038000

Symbol: ADC_0_ACTSS
   Definitions
      At line 8 in file ADC_Function_Class.s
   Uses
      At line 232 in file ADC_Function_Class.s
      At line 262 in file ADC_Function_Class.s

ADC_0_EMUX 40038014

Symbol: ADC_0_EMUX
   Definitions
      At line 11 in file ADC_Function_Class.s
   Uses
      At line 244 in file ADC_Function_Class.s
Comment: ADC_0_EMUX used once
ADC_0_IM 40038008

Symbol: ADC_0_IM
   Definitions
      At line 10 in file ADC_Function_Class.s
   Uses
      At line 238 in file ADC_Function_Class.s
Comment: ADC_0_IM used once
ADC_0_PC 40038FC4

Symbol: ADC_0_PC
   Definitions
      At line 15 in file ADC_Function_Class.s
   Uses
      At line 256 in file ADC_Function_Class.s
Comment: ADC_0_PC used once
ADC_0_PSSI 40038028

Symbol: ADC_0_PSSI
   Definitions
      At line 12 in file ADC_Function_Class.s
   Uses
      At line 112 in file ADC_Function_Class.s
Comment: ADC_0_PSSI used once
ADC_0_RIS 40038004

Symbol: ADC_0_RIS
   Definitions
      At line 9 in file ADC_Function_Class.s
   Uses
      At line 113 in file ADC_Function_Class.s
Comment: ADC_0_RIS used once
ADC_0_SSCTL0 40038044

Symbol: ADC_0_SSCTL0
   Definitions
      At line 13 in file ADC_Function_Class.s
   Uses
      At line 250 in file ADC_Function_Class.s
Comment: ADC_0_SSCTL0 used once
ADC_0_SSFIFO3 400380A8




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: ADC_0_SSFIFO3
   Definitions
      At line 14 in file ADC_Function_Class.s
   Uses
      At line 114 in file ADC_Function_Class.s
Comment: ADC_0_SSFIFO3 used once
ADC_1_ACTSS 40039000

Symbol: ADC_1_ACTSS
   Definitions
      At line 17 in file ADC_Function_Class.s
   Uses
      At line 269 in file ADC_Function_Class.s
      At line 304 in file ADC_Function_Class.s

ADC_1_EMUX 40039014

Symbol: ADC_1_EMUX
   Definitions
      At line 20 in file ADC_Function_Class.s
   Uses
      At line 281 in file ADC_Function_Class.s
Comment: ADC_1_EMUX used once
ADC_1_IM 40039008

Symbol: ADC_1_IM
   Definitions
      At line 19 in file ADC_Function_Class.s
   Uses
      At line 275 in file ADC_Function_Class.s
Comment: ADC_1_IM used once
ADC_1_PC 40039FC4

Symbol: ADC_1_PC
   Definitions
      At line 25 in file ADC_Function_Class.s
   Uses
      At line 298 in file ADC_Function_Class.s
Comment: ADC_1_PC used once
ADC_1_PSSI 40039028

Symbol: ADC_1_PSSI
   Definitions
      At line 22 in file ADC_Function_Class.s
   Uses
      At line 80 in file ADC_Function_Class.s
Comment: ADC_1_PSSI used once
ADC_1_RIS 40039004

Symbol: ADC_1_RIS
   Definitions
      At line 18 in file ADC_Function_Class.s
   Uses
      At line 81 in file ADC_Function_Class.s
Comment: ADC_1_RIS used once
ADC_1_SSCTL0 40039044

Symbol: ADC_1_SSCTL0
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 23 in file ADC_Function_Class.s
   Uses
      At line 292 in file ADC_Function_Class.s
Comment: ADC_1_SSCTL0 used once
ADC_1_SSFIFO3 400390A8

Symbol: ADC_1_SSFIFO3
   Definitions
      At line 24 in file ADC_Function_Class.s
   Uses
      At line 82 in file ADC_Function_Class.s
Comment: ADC_1_SSFIFO3 used once
ADC_1_SSMUX3 400390A0

Symbol: ADC_1_SSMUX3
   Definitions
      At line 21 in file ADC_Function_Class.s
   Uses
      At line 286 in file ADC_Function_Class.s
Comment: ADC_1_SSMUX3 used once
GPIO_PORTE_AFSEL 40024420

Symbol: GPIO_PORTE_AFSEL
   Definitions
      At line 32 in file ADC_Function_Class.s
   Uses
      At line 211 in file ADC_Function_Class.s
Comment: GPIO_PORTE_AFSEL used once
GPIO_PORTE_AMSEL 40024528

Symbol: GPIO_PORTE_AMSEL
   Definitions
      At line 33 in file ADC_Function_Class.s
   Uses
      At line 225 in file ADC_Function_Class.s
Comment: GPIO_PORTE_AMSEL used once
GPIO_PORTE_DEN 4002451C

Symbol: GPIO_PORTE_DEN
   Definitions
      At line 30 in file ADC_Function_Class.s
   Uses
      At line 219 in file ADC_Function_Class.s
Comment: GPIO_PORTE_DEN used once
GPIO_PORTE_PCTL 4002452C

Symbol: GPIO_PORTE_PCTL
   Definitions
      At line 31 in file ADC_Function_Class.s
   Uses
      None
Comment: GPIO_PORTE_PCTL unused
RCGCADC 400FE638

Symbol: RCGCADC
   Definitions
      At line 7 in file ADC_Function_Class.s
   Uses
      At line 194 in file ADC_Function_Class.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: RCGCADC used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 28 in file ADC_Function_Class.s
   Uses
      At line 202 in file ADC_Function_Class.s
Comment: RCGCGPIO used once
TARGET 20001000

Symbol: TARGET
   Definitions
      At line 35 in file ADC_Function_Class.s
   Uses
      None
Comment: TARGET unused
24 symbols
379 symbols in table
