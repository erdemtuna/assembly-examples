


ARM Macro Assembler    Page 1 


    1 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
    2 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
    3 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
    4 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
    5 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
    6 00000000         
    7 00000000 40025404 
                       GPIO_PORTF_IS_R
                               EQU              0x40025404
    8 00000000 40025408 
                       GPIO_PORTF_BE_R
                               EQU              0x40025408
    9 00000000 4002540C 
                       GPIO_PORTF_IEV_R
                               EQU              0x4002540C
   10 00000000 40025410 
                       GPIO_PORTF_IM_R
                               EQU              0x40025410
   11 00000000 4002541C 
                       GPIO_PORTF_ICR_R
                               EQU              0x4002541C
   12 00000000 40025414 
                       GPIO_PORTF_RIS_R
                               EQU              0x40025414
   13 00000000         
   14 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   15 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   16 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   17 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   18 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   19 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   20 00000000         
   21 00000000 E000E100 
                       NVIC_EN0
                               EQU              0xE000E100  ; IRQ 0 to 31 Set E
                                                            nable Register



ARM Macro Assembler    Page 2 


   22 00000000 E000E41C 
                       NVIC_PRI4
                               EQU              0xE000E41C  ; IRQ 92 to 95 Prio
                                                            rity Register
   23 00000000         
   24 00000000 20000700 
                       Memory_Battleship
                               EQU              0x20000700
   25 00000000 20000734 
                       Memory_Civilianship
                               EQU              0x20000734
   26 00000000 20000768 
                       Memory_Mine
                               EQU              0x20000768
   27 00000000 2000079C 
                       Memory_ShipCount
                               EQU              0x2000079C
   28 00000000 200007D0 
                       Memory_GamePhase
                               EQU              0x200007D0
   29 00000000 00000038 
                       Axis_X_Slice
                               EQU              56
   30 00000000 00000339 
                       Axis_Y_Slice
                               EQU              825
   31 00000000         
   32 00000000 00000006 
                       Axis_X_Offset
                               EQU              6
   33 00000000 00000001 
                       Axis_Y_Offset
                               EQU              1
   34 00000000         
   35 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   36 00000000                 THUMB
   37 00000000         gameplayBorder
   38 00000000         ; 2_xxxx.xxxx (data content)
   39 00000000 00 00 00 
              00 00 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[0,13]
   40 0000000E 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[14,27]
   41 0000001C 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 



ARM Macro Assembler    Page 3 


                                                            ; 0:[28,41]
   42 0000002A 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[42,55]
   43 00000038 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[56,69]
   44 00000046 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]
   45 00000054         
   46 00000054 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[0,13]
   47 00000062 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[14,27]
   48 00000070 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[28,41]
   49 0000007E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[42,55]
   50 0000008C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 1:[56,69]
   51 0000009A 00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[70,83]
   52 000000A8         
   53 000000A8 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[0,13]
   54 000000B6 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[14,27]
   55 000000C4 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[28,41]
   56 000000D2 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[42,55]
   57 000000E0 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 2:[56,69]
   58 000000EE 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[70,83]
   59 000000FC         
   60 000000FC 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   61 0000010A 00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   62 00000118 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   63 00000126 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   64 00000134 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   65 00000142 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   66 00000150         
   67 00000150 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   68 0000015E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   69 0000016C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   70 0000017A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 6 


              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   71 00000188 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   72 00000196 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   73 000001A4         
   74 000001A4 00 00 00 
              00 00 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[0,13]
   75 000001B2 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[14,27]
   76 000001C0 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[28,41]
   77 000001CE 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[42,55]
   78 000001DC 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[56,69]
   79 000001EA 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 



ARM Macro Assembler    Page 7 


                                                            ; 0:[70,83]
   80 000001F8         
   81 000001F8 2B 04   MSG_Cursor
                               DCB              "+",0x04
   82 000001FA 5B 04   MSG_Battleship
                               DCB              "[",0x04
   83 000001FC 7B 04   MSG_Civilianship
                               DCB              "{",0x04
   84 000001FE 2A 04   MSG_Mine
                               DCB              "*",0x04
   85 00000200 20 04   MSG_Clear_Cursor
                               DCB              " ",0x04
   86 00000202 45 45 34 
              34 37 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 4C 
              61 62 20 
              50 72 6F 
              6A 65 63 
              74 20 20 
              20 20 20 
              20 42 75 
              72 6B 61 
              79 20 55 
              6E 73 61 
              6C 20 20 
              20 20 20 
              45 72 64 
              65 6D 20 
              54 75 6E 
              61 04    MSG_InitialRun
                               DCB              "EE447            Lab Project  
    Burkay Unsal     Erdem Tuna",0x04
   87 00000240 50 6C 61 
              63 65 20 
              74 68 65 
              20 73 68 
              69 70 20 
              20 20 61 
              66 74 65 
              72 20 62 
              6F 72 64 
              65 72 20 
              69 73 20 
              20 76 69 
              73 69 62 
              6C 65 2E 
              04       MSG_Welcome
                               DCB              "Place the ship   after border 
is  visible.",0x04
   88 0000026B 57 61 69 
              74 69 6E 
              67 20 66 
              6F 72 20 
              20 20 20 
              20 20 70 
              6C 61 79 



ARM Macro Assembler    Page 8 


              65 72 32 
              20 74 6F 
              20 70 72 
              65 73 73 
              20 62 6F 
              74 68 20 
              62 75 74 
              74 6F 6E 
              73 2E 04 MSG_WaitUser2
                               DCB              "Waiting for      player2 to pr
ess both buttons.",0x04
   89 0000029B         
   90 0000029B                 EXPORT           PortF_Button_Init
   91 0000029B                 EXPORT           Check_Interrupt_Status
   92 0000029B                 EXPORT           Clear_Interrupt_Status
   93 0000029B                 EXPORT           GPIOPortF_Handler
   94 0000029B         
   95 0000029B                 EXTERN           MineShip_Coordinate_Save
   96 0000029B                 EXTERN           MineShip_Output_Display
   97 0000029B         ;----------------------------------
   98 0000029B         ; ADC functions
   99 0000029B         ;----------------------------------
  100 0000029B                 EXTERN           ADC_1_Read_Y
  101 0000029B                 EXTERN           ADC_0_Read_X
  102 0000029B                 EXTERN           Find_Pixel_Coordinate
  103 0000029B                 EXTERN           ADC_Init
  104 0000029B         
  105 0000029B         ;----------------------------------
  106 0000029B         ; Screen functions
  107 0000029B         ;----------------------------------
  108 0000029B                 EXTERN           Nokia_Init
  109 0000029B                 EXTERN           OutImgNokia
  110 0000029B                 EXTERN           SetCoordinate
  111 0000029B                 EXTERN           TxByte
  112 0000029B                 EXTERN           OutStrNokia
  113 0000029B                 EXTERN           ClearNokia
  114 0000029B         ;----------------------------------
  115 0000029B         ; Timer functions
  116 0000029B         ;----------------------------------
  117 0000029B                 EXTERN           WideTimer0A_Handler
  118 0000029B                 EXTERN           WideTimer0B_Handler
  119 0000029B                 EXTERN           Timers_Init
  120 0000029B                 EXTERN           Enable_Timers
  121 0000029B         
  122 0000029B         ;-------------------------------------------
  123 0000029B         ; Read PF4-PF0 Interrupt Status
  124 0000029B         ; Return in R12
  125 0000029B         ; Return Value either 0x11 or 0x10 or 0x01
  126 0000029B         ;-------------------------------------------
  127 0000029B         Check_Interrupt_Status
  128 0000029B 00 E92D 
              0FFF             PUSH{R0-R11}
  129 000002A0 B500            PUSH{LR}
  130 000002A2 4972            LDR              R1, = GPIO_PORTF_RIS_R
  131 000002A4 F8D1 C000       LDR              R12, [R1]
  132 000002A8 F00C 0C11       AND              R12, #0x11
  133 000002AC F85D EB04       POP{LR}
  134 000002B0 E8BD 0FFF       POP{R0-R11}
  135 000002B4 4770            BX               LR



ARM Macro Assembler    Page 9 


  136 000002B6         
  137 000002B6         ;-------------------------------------------
  138 000002B6         ; Clear PF4-PF0 Interrupt Status
  139 000002B6         ; No Return
  140 000002B6         ;-------------------------------------------
  141 000002B6         Clear_Interrupt_Status
  142 000002B6 E92D 1FFF       PUSH{R0-R12}
  143 000002BA B500            PUSH{LR}
  144 000002BC 496C            LDR              R1, =GPIO_PORTF_ICR_R ; enable 
                                                            commit for Port F
  145 000002BE F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  146 000002C2 6008            STR              R0, [R1]
  147 000002C4 F85D EB04       POP{LR}
  148 000002C8 E8BD 1FFF       POP{R0-R12}
  149 000002CC 4770            BX               LR
  150 000002CE         
  151 000002CE         
  152 000002CE         
  153 000002CE         ;-------------------------------------------
  154 000002CE         ; Process data according to game phase indicated by R9.
  155 000002CE         ; R9, game phase indicator:
  156 000002CE         ; 0 means ship deployment
  157 000002CE         ; 1 means ship deployment is done, wait handover
  158 000002CE         ; 2 means handover done, wait player2
  159 000002CE         ; 3 means mine deployment
  160 000002CE         ; Can edit R7 and R9.
  161 000002CE         ;-------------------------------------------
  162 000002CE         GPIOPortF_Handler
                               PROC
  163 000002CE E92D 5D60       PUSH{R5-R6,R8,R10-R12,LR}    ; R0,R1,R2,R3,R12 a
                                                            re pushed to stack
  164 000002D2         ; when interrupt occurs
  165 000002D2         
  166 000002D2 4E68            LDR              R6, = Memory_GamePhase
  167 000002D4 F896 9000       LDRB             R9, [R6]
  168 000002D8 F1B9 0F00       CMP              R9, #0
  169 000002DC D008            BEQ              ShipDeploy
  170 000002DE F1B9 0F01       CMP              R9, #1
  171 000002E2 D02D            BEQ              WaitHandover
  172 000002E4 F1B9 0F02       CMP              R9, #2
  173 000002E8 D032            BEQ              WaitPlayer2
  174 000002EA F1B9 0F03       CMP              R9, #3
  175 000002EE D041            BEQ              MineDeploy
  176 000002F0         
  177 000002F0         ShipDeploy
  178 000002F0 4E61            LDR              R6, = Memory_ShipCount
  179 000002F2 7837            LDRB             R7, [R6]
  180 000002F4 F107 0701       ADD              R7, R7, #1  ; increment ship co
                                                            unt
  181 000002F8 7037            STRB             R7, [R6]
  182 000002FA         Check_Last_Coordinates
  183 000002FA F04F 0000       MOV              R0, #0      ; clear x-coordinat
                                                            e
  184 000002FE F04F 0100       MOV              R1, #0      ; clear y-coordinat
                                                            e
  185 00000302 F7FF FFFE       BL               ADC_0_Read_X
  186 00000306 F04F 0338       LDR              R3, = Axis_X_Slice
  187 0000030A F7FF FFFE       BL               Find_Pixel_Coordinate 



ARM Macro Assembler    Page 10 


                                                            ; x-coordinae
  188 0000030E F7FF FFFE       BL               ADC_1_Read_Y
  189 00000312 F240 3339       LDR              R3, = Axis_Y_Slice
  190 00000316 F7FF FFFE       BL               Find_Pixel_Coordinate
  191 0000031A F100 0006       ADD              R0, R0, #Axis_X_Offset 
                                                            ; add x axis offset
                                                            
  192 0000031E F101 0101       ADD              R1, R1, #Axis_Y_Offset 
                                                            ; add y axis offset
                                                            
  193 00000322         
  194 00000322 F7FF FFFE       BL               Check_Interrupt_Status
  195 00000326 F1BC 0F10       CMP              R12, #0x10
  196 0000032A D104            BNE              Civilian_Save
  197 0000032C         Battle_Save
  198 0000032C F8DF 814C       LDR              R8, = Memory_Battleship
  199 00000330 F7FF FFFE       BL               MineShip_Coordinate_Save
  200 00000334 E037            B                Button_Return
  201 00000336         Civilian_Save
  202 00000336 F8DF 8148       LDR              R8, = Memory_Civilianship
  203 0000033A F7FF FFFE       BL               MineShip_Coordinate_Save
  204 0000033E E032            B                Button_Return
  205 00000340         
  206 00000340         WaitHandover
  207 00000340 4E4C            LDR              R6, = Memory_GamePhase
  208 00000342 F896 9000       LDRB             R9, [R6]
  209 00000346 F109 0901       ADD              R9, R9, #1
  210 0000034A F886 9000       STRB             R9, [R6]
  211 0000034E E02A            B                Button_Return
  212 00000350         WaitPlayer2
  213 00000350         
  214 00000350 F7FF FFFE       BL               Enable_Timers
  215 00000354 F7FF FFFE       BL               ClearNokia  ; clear the screen
  216 00000358 4D4A            LDR              R5,=gameplayBorder
  217 0000035A F7FF FFFE       BL               OutImgNokia ; output the border
                                                            
  218 0000035E F8DF 811C       LDR              R8, = Memory_Battleship
  219 00000362 4D49            LDR              R5, = MSG_Battleship
  220 00000364 F7FF FFFE       BL               MineShip_Output_Display ; print
                                                             battleships while 
                                                            deployment
  221 00000368 F8DF 8114       LDR              R8, = Memory_Civilianship
  222 0000036C 4D47            LDR              R5, = MSG_Civilianship
  223 0000036E F7FF FFFE       BL               MineShip_Output_Display ; print
                                                             battleships while 
                                                            deployment
  224 00000372 E018            B                Button_Return
  225 00000374         
  226 00000374         MineDeploy
  227 00000374 F04F 0000       MOV              R0, #0      ; clear x-coordinat
                                                            e
  228 00000378 F04F 0100       MOV              R1, #0      ; clear y-coordinat
                                                            e
  229 0000037C F7FF FFFE       BL               ADC_0_Read_X
  230 00000380 F04F 0338       LDR              R3, = Axis_X_Slice
  231 00000384 F7FF FFFE       BL               Find_Pixel_Coordinate 
                                                            ; x-coordinae
  232 00000388 F7FF FFFE       BL               ADC_1_Read_Y
  233 0000038C F240 3339       LDR              R3, = Axis_Y_Slice



ARM Macro Assembler    Page 11 


  234 00000390 F7FF FFFE       BL               Find_Pixel_Coordinate
  235 00000394 F100 0006       ADD              R0, R0, #Axis_X_Offset 
                                                            ; add x axis offset
                                                            
  236 00000398 F101 0101       ADD              R1, R1, #Axis_Y_Offset 
                                                            ; add y axis offset
                                                            
  237 0000039C         
  238 0000039C F8DF 80F0       LDR              R8, = Memory_Mine
  239 000003A0 F7FF FFFE       BL               MineShip_Coordinate_Save
  240 000003A4 E7FF            B                Button_Return
  241 000003A6         
  242 000003A6         Button_Return
  243 000003A6 F000 F805       BL               delayTrans
  244 000003AA F7FF FFFE       BL               Clear_Interrupt_Status ; clear 
                                                            interrupts before l
                                                            eaving
  245 000003AE E8BD 5D60       POP{R5-R6,R8,R10-R12,LR}
  246 000003B2 4770            BX               LR
  247 000003B4                 ENDP
  248 000003B4         
  249 000003B4         delayTrans
  250 000003B4 B500            PUSH             {LR}
  251 000003B6 B401            PUSH             {R0}
  252 000003B8 F640 7055       MOV              R0,#0xF55   ;~250ms, 0x5855
  253 000003BC         ; MOVT R0,#0x0001
  254 000003BC         dt
  255 000003BC 3801            SUBS             R0,#1
  256 000003BE D1FD            BNE              dt
  257 000003C0 BC01            POP              {R0}
  258 000003C2 F85D EB04       POP              {LR}
  259 000003C6 4770            BX               LR
  260 000003C8         
  261 000003C8         ;------------delay------------
  262 000003C8         ; Delay function for testing, which delays about 3*count
                        cycles.
  263 000003C8         ; Input: R1  count
  264 000003C8         ; Output: none
  265 000003C8         
  266 000003C8         ;delay
  267 000003C8         ;SUBS R1, R1, #1                 ; R1 = R1 - 1 (count = 
                       count - 1)
  268 000003C8         ;BNE delay                       ; if count (R1) != 0, s
                       kip to 'delay'
  269 000003C8         ;BX  LR                          ; return
  270 000003C8         
  271 000003C8         ;------------PortF_Button_Init------------
  272 000003C8         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  273 000003C8         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  274 000003C8         ; resistors are enabled, and the NMI functionality on PF
                       0 is
  275 000003C8         ; disabled.  Make the RGB LED's pins outputs.
  276 000003C8         ; Modifies: R0, R1, R2'
  277 000003C8         ;------------PortF_Button_Init------------
  278 000003C8         PortF_Button_Init
  279 000003C8 E92D 1FFF       PUSH{R0-R12}
  280 000003CC B500            PUSH{LR}
  281 000003CE 4931            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act



ARM Macro Assembler    Page 12 


                                                            ivate clock for Por
                                                            t F
  282 000003D0 6808            LDR              R0, [R1]
  283 000003D2 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  284 000003D6 6008            STR              R0, [R1]
  285 000003D8 BF00            NOP
  286 000003DA BF00            NOP
  287 000003DC 492E            LDR              R1, =GPIO_PORTF_LOCK_R
  288 000003DE 482F            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
  289 000003E0 6008            STR              R0, [R1]
  290 000003E2 492F            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  291 000003E4 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  292 000003E8 6008            STR              R0, [R1]
  293 000003EA 492E            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  294 000003EC F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  295 000003F0 6008            STR              R0, [R1]
  296 000003F2 492D            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  297 000003F4 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  298 000003F8 6008            STR              R0, [R1]
  299 000003FA 492C            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  300 000003FC F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  301 00000400 6008            STR              R0, [R1]
  302 00000402 492B            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  303 00000404 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  304 00000408 6008            STR              R0, [R1]
  305 0000040A 492A            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  306 0000040C F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
  307 00000410 6008            STR              R0, [R1]
  308 00000412 4929            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  309 00000414 F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
  310 00000418 6008            STR              R0, [R1]
  311 0000041A         
  312 0000041A 4928            LDR              R1, =GPIO_PORTF_IS_R ; 7) enabl
                                                            e Port F digital po
                                                            rt
  313 0000041C F04F 0000       MOV              R0, #0x00   ; 1 means enable di
                                                            gital I/O



ARM Macro Assembler    Page 13 


  314 00000420 6008            STR              R0, [R1]
  315 00000422         
  316 00000422 4927            LDR              R1, =GPIO_PORTF_BE_R ; 7) enabl
                                                            e Port F digital po
                                                            rt
  317 00000424 F04F 0000       MOV              R0, #0x00   ; 1 means enable di
                                                            gital I/O
  318 00000428 6008            STR              R0, [R1]
  319 0000042A         
  320 0000042A 4926            LDR              R1, =GPIO_PORTF_IEV_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  321 0000042C F04F 0000       MOV              R0, #0x00   ; 1 means enable di
                                                            gital I/O
  322 00000430 6008            STR              R0, [R1]
  323 00000432         
  324 00000432 4925            LDR              R1, =GPIO_PORTF_IM_R ; 7) enabl
                                                            e Port F digital po
                                                            rt
  325 00000434 F04F 0011       MOV              R0, #0x11   ; 1 means enable di
                                                            gital I/O
  326 00000438 6008            STR              R0, [R1]
  327 0000043A         
  328 0000043A         ; - - - - - - - - - -- - - - - - -
  329 0000043A         ; Configure interrupt priorities
  330 0000043A         ; Timer0A is interrupt #94.
  331 0000043A         ; Interrupts 92-95 are handled by NVIC register PRI23.
  332 0000043A         ; set NVIC interrupt 94-95 to priority 2
  333 0000043A 4924            LDR              R1, =NVIC_PRI4
  334 0000043C 6808            LDR              R0, [R1]
  335 0000043E F64F 72FF 
              F2C0 0200        MOV32            R2, #0x0000FFFF
  336 00000446 EA00 0002       AND              R0, R0, R2  ; clear interrupt
  337 0000044A F240 0200 
              F2C4 0240        MOV32            R2,  #0x40400000
  338 00000452 EA40 0002       ORR              R0, R0, R2  ; set interrupt
  339 00000456 6008            STR              R0, [R1]
  340 00000458         ; NVIC has to be enabled
  341 00000458         ; Interrupts 64-95 are handled by NVIC register EN2
  342 00000458         ; Interrupt 94 is controlled by bit 30-31
  343 00000458 491D            LDR              R1, =NVIC_EN0
  344 0000045A 6808            LDR              R0, [R1]
  345 0000045C F040 4040       ORR              R0, R0, #0xC0000000 ; set bit 3
                                                            0-31 to enable inte
                                                            rrupt 94-95
  346 00000460 6008            STR              R0, [R1]
  347 00000462 F85D EB04       POP{LR}
  348 00000466 E8BD 1FFF       POP{R0-R12}
  349 0000046A 4770            BX               LR
  350 0000046C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  351 0000046C                 END                          ; end of file
              40025414 
              4002541C 
              200007D0 
              2000079C 
              20000700 
              20000734 



ARM Macro Assembler    Page 14 


              00000000 
              00000000 
              00000000 
              20000768 
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              40025404 
              40025408 
              4002540C 
              40025410 
              E000E41C 
              E000E100 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\button_function_class.d -o.\objects\button_function_c
lass.o -I.\RTE\_EE447-Project -ID:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\
Include\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pr
edefine="__UVISION_VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.
\listings\button_function_class.lst Button_Function_Class.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 35 in file Button_Function_Class.s
   Uses
      None
Comment: .text unused
Battle_Save 0000032C

Symbol: Battle_Save
   Definitions
      At line 197 in file Button_Function_Class.s
   Uses
      None
Comment: Battle_Save unused
Button_Return 000003A6

Symbol: Button_Return
   Definitions
      At line 242 in file Button_Function_Class.s
   Uses
      At line 200 in file Button_Function_Class.s
      At line 204 in file Button_Function_Class.s
      At line 211 in file Button_Function_Class.s
      At line 224 in file Button_Function_Class.s
      At line 240 in file Button_Function_Class.s

Check_Interrupt_Status 0000029B

Symbol: Check_Interrupt_Status
   Definitions
      At line 127 in file Button_Function_Class.s
   Uses
      At line 91 in file Button_Function_Class.s
      At line 194 in file Button_Function_Class.s

Check_Last_Coordinates 000002FA

Symbol: Check_Last_Coordinates
   Definitions
      At line 182 in file Button_Function_Class.s
   Uses
      None
Comment: Check_Last_Coordinates unused
Civilian_Save 00000336

Symbol: Civilian_Save
   Definitions
      At line 201 in file Button_Function_Class.s
   Uses
      At line 196 in file Button_Function_Class.s
Comment: Civilian_Save used once
Clear_Interrupt_Status 000002B6

Symbol: Clear_Interrupt_Status
   Definitions
      At line 141 in file Button_Function_Class.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 92 in file Button_Function_Class.s
      At line 244 in file Button_Function_Class.s

GPIOPortF_Handler 000002CE

Symbol: GPIOPortF_Handler
   Definitions
      At line 162 in file Button_Function_Class.s
   Uses
      At line 93 in file Button_Function_Class.s
Comment: GPIOPortF_Handler used once
MSG_Battleship 000001FA

Symbol: MSG_Battleship
   Definitions
      At line 82 in file Button_Function_Class.s
   Uses
      At line 219 in file Button_Function_Class.s
Comment: MSG_Battleship used once
MSG_Civilianship 000001FC

Symbol: MSG_Civilianship
   Definitions
      At line 83 in file Button_Function_Class.s
   Uses
      At line 222 in file Button_Function_Class.s
Comment: MSG_Civilianship used once
MSG_Clear_Cursor 00000200

Symbol: MSG_Clear_Cursor
   Definitions
      At line 85 in file Button_Function_Class.s
   Uses
      None
Comment: MSG_Clear_Cursor unused
MSG_Cursor 000001F8

Symbol: MSG_Cursor
   Definitions
      At line 81 in file Button_Function_Class.s
   Uses
      None
Comment: MSG_Cursor unused
MSG_InitialRun 00000202

Symbol: MSG_InitialRun
   Definitions
      At line 86 in file Button_Function_Class.s
   Uses
      None
Comment: MSG_InitialRun unused
MSG_Mine 000001FE

Symbol: MSG_Mine
   Definitions
      At line 84 in file Button_Function_Class.s
   Uses
      None
Comment: MSG_Mine unused



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

MSG_WaitUser2 0000026B

Symbol: MSG_WaitUser2
   Definitions
      At line 88 in file Button_Function_Class.s
   Uses
      None
Comment: MSG_WaitUser2 unused
MSG_Welcome 00000240

Symbol: MSG_Welcome
   Definitions
      At line 87 in file Button_Function_Class.s
   Uses
      None
Comment: MSG_Welcome unused
MineDeploy 00000374

Symbol: MineDeploy
   Definitions
      At line 226 in file Button_Function_Class.s
   Uses
      At line 175 in file Button_Function_Class.s
Comment: MineDeploy used once
PortF_Button_Init 000003C8

Symbol: PortF_Button_Init
   Definitions
      At line 278 in file Button_Function_Class.s
   Uses
      At line 90 in file Button_Function_Class.s
Comment: PortF_Button_Init used once
ShipDeploy 000002F0

Symbol: ShipDeploy
   Definitions
      At line 177 in file Button_Function_Class.s
   Uses
      At line 169 in file Button_Function_Class.s
Comment: ShipDeploy used once
WaitHandover 00000340

Symbol: WaitHandover
   Definitions
      At line 206 in file Button_Function_Class.s
   Uses
      At line 171 in file Button_Function_Class.s
Comment: WaitHandover used once
WaitPlayer2 00000350

Symbol: WaitPlayer2
   Definitions
      At line 212 in file Button_Function_Class.s
   Uses
      At line 173 in file Button_Function_Class.s
Comment: WaitPlayer2 used once
delayTrans 000003B4

Symbol: delayTrans



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 249 in file Button_Function_Class.s
   Uses
      At line 243 in file Button_Function_Class.s
Comment: delayTrans used once
dt 000003BC

Symbol: dt
   Definitions
      At line 254 in file Button_Function_Class.s
   Uses
      At line 256 in file Button_Function_Class.s
Comment: dt used once
gameplayBorder 00000000

Symbol: gameplayBorder
   Definitions
      At line 37 in file Button_Function_Class.s
   Uses
      At line 216 in file Button_Function_Class.s
Comment: gameplayBorder used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Axis_X_Offset 00000006

Symbol: Axis_X_Offset
   Definitions
      At line 32 in file Button_Function_Class.s
   Uses
      At line 191 in file Button_Function_Class.s
      At line 235 in file Button_Function_Class.s

Axis_X_Slice 00000038

Symbol: Axis_X_Slice
   Definitions
      At line 29 in file Button_Function_Class.s
   Uses
      At line 186 in file Button_Function_Class.s
      At line 230 in file Button_Function_Class.s

Axis_Y_Offset 00000001

Symbol: Axis_Y_Offset
   Definitions
      At line 33 in file Button_Function_Class.s
   Uses
      At line 192 in file Button_Function_Class.s
      At line 236 in file Button_Function_Class.s

Axis_Y_Slice 00000339

Symbol: Axis_Y_Slice
   Definitions
      At line 30 in file Button_Function_Class.s
   Uses
      At line 189 in file Button_Function_Class.s
      At line 233 in file Button_Function_Class.s

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 18 in file Button_Function_Class.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 3 in file Button_Function_Class.s
   Uses
      At line 302 in file Button_Function_Class.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 16 in file Button_Function_Class.s
   Uses
      At line 293 in file Button_Function_Class.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_BE_R 40025408

Symbol: GPIO_PORTF_BE_R
   Definitions
      At line 8 in file Button_Function_Class.s
   Uses
      At line 316 in file Button_Function_Class.s
Comment: GPIO_PORTF_BE_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 15 in file Button_Function_Class.s
   Uses
      At line 290 in file Button_Function_Class.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 1 in file Button_Function_Class.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 5 in file Button_Function_Class.s
   Uses
      At line 308 in file Button_Function_Class.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 2 in file Button_Function_Class.s
   Uses
      At line 299 in file Button_Function_Class.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_ICR_R 4002541C

Symbol: GPIO_PORTF_ICR_R
   Definitions
      At line 11 in file Button_Function_Class.s
   Uses
      At line 144 in file Button_Function_Class.s
Comment: GPIO_PORTF_ICR_R used once
GPIO_PORTF_IEV_R 4002540C

Symbol: GPIO_PORTF_IEV_R
   Definitions
      At line 9 in file Button_Function_Class.s
   Uses
      At line 320 in file Button_Function_Class.s
Comment: GPIO_PORTF_IEV_R used once
GPIO_PORTF_IM_R 40025410




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTF_IM_R
   Definitions
      At line 10 in file Button_Function_Class.s
   Uses
      At line 324 in file Button_Function_Class.s
Comment: GPIO_PORTF_IM_R used once
GPIO_PORTF_IS_R 40025404

Symbol: GPIO_PORTF_IS_R
   Definitions
      At line 7 in file Button_Function_Class.s
   Uses
      At line 312 in file Button_Function_Class.s
Comment: GPIO_PORTF_IS_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 14 in file Button_Function_Class.s
   Uses
      At line 287 in file Button_Function_Class.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 17 in file Button_Function_Class.s
   Uses
      At line 296 in file Button_Function_Class.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 4 in file Button_Function_Class.s
   Uses
      At line 305 in file Button_Function_Class.s
Comment: GPIO_PORTF_PUR_R used once
GPIO_PORTF_RIS_R 40025414

Symbol: GPIO_PORTF_RIS_R
   Definitions
      At line 12 in file Button_Function_Class.s
   Uses
      At line 130 in file Button_Function_Class.s
Comment: GPIO_PORTF_RIS_R used once
Memory_Battleship 20000700

Symbol: Memory_Battleship
   Definitions
      At line 24 in file Button_Function_Class.s
   Uses
      At line 198 in file Button_Function_Class.s
      At line 218 in file Button_Function_Class.s

Memory_Civilianship 20000734

Symbol: Memory_Civilianship
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 25 in file Button_Function_Class.s
   Uses
      At line 202 in file Button_Function_Class.s
      At line 221 in file Button_Function_Class.s

Memory_GamePhase 200007D0

Symbol: Memory_GamePhase
   Definitions
      At line 28 in file Button_Function_Class.s
   Uses
      At line 166 in file Button_Function_Class.s
      At line 207 in file Button_Function_Class.s

Memory_Mine 20000768

Symbol: Memory_Mine
   Definitions
      At line 26 in file Button_Function_Class.s
   Uses
      At line 238 in file Button_Function_Class.s
Comment: Memory_Mine used once
Memory_ShipCount 2000079C

Symbol: Memory_ShipCount
   Definitions
      At line 27 in file Button_Function_Class.s
   Uses
      At line 178 in file Button_Function_Class.s
Comment: Memory_ShipCount used once
NVIC_EN0 E000E100

Symbol: NVIC_EN0
   Definitions
      At line 21 in file Button_Function_Class.s
   Uses
      At line 343 in file Button_Function_Class.s
Comment: NVIC_EN0 used once
NVIC_PRI4 E000E41C

Symbol: NVIC_PRI4
   Definitions
      At line 22 in file Button_Function_Class.s
   Uses
      At line 333 in file Button_Function_Class.s
Comment: NVIC_PRI4 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 19 in file Button_Function_Class.s
   Uses
      At line 281 in file Button_Function_Class.s
Comment: SYSCTL_RCGCGPIO_R used once
28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC_0_Read_X 00000000

Symbol: ADC_0_Read_X
   Definitions
      At line 101 in file Button_Function_Class.s
   Uses
      At line 185 in file Button_Function_Class.s
      At line 229 in file Button_Function_Class.s

ADC_1_Read_Y 00000000

Symbol: ADC_1_Read_Y
   Definitions
      At line 100 in file Button_Function_Class.s
   Uses
      At line 188 in file Button_Function_Class.s
      At line 232 in file Button_Function_Class.s

ADC_Init 00000000

Symbol: ADC_Init
   Definitions
      At line 103 in file Button_Function_Class.s
   Uses
      None
Comment: ADC_Init unused
ClearNokia 00000000

Symbol: ClearNokia
   Definitions
      At line 113 in file Button_Function_Class.s
   Uses
      At line 215 in file Button_Function_Class.s
Comment: ClearNokia used once
Enable_Timers 00000000

Symbol: Enable_Timers
   Definitions
      At line 120 in file Button_Function_Class.s
   Uses
      At line 214 in file Button_Function_Class.s
Comment: Enable_Timers used once
Find_Pixel_Coordinate 00000000

Symbol: Find_Pixel_Coordinate
   Definitions
      At line 102 in file Button_Function_Class.s
   Uses
      At line 187 in file Button_Function_Class.s
      At line 190 in file Button_Function_Class.s
      At line 231 in file Button_Function_Class.s
      At line 234 in file Button_Function_Class.s

MineShip_Coordinate_Save 00000000

Symbol: MineShip_Coordinate_Save
   Definitions
      At line 95 in file Button_Function_Class.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 199 in file Button_Function_Class.s
      At line 203 in file Button_Function_Class.s
      At line 239 in file Button_Function_Class.s

MineShip_Output_Display 00000000

Symbol: MineShip_Output_Display
   Definitions
      At line 96 in file Button_Function_Class.s
   Uses
      At line 220 in file Button_Function_Class.s
      At line 223 in file Button_Function_Class.s

Nokia_Init 00000000

Symbol: Nokia_Init
   Definitions
      At line 108 in file Button_Function_Class.s
   Uses
      None
Comment: Nokia_Init unused
OutImgNokia 00000000

Symbol: OutImgNokia
   Definitions
      At line 109 in file Button_Function_Class.s
   Uses
      At line 217 in file Button_Function_Class.s
Comment: OutImgNokia used once
OutStrNokia 00000000

Symbol: OutStrNokia
   Definitions
      At line 112 in file Button_Function_Class.s
   Uses
      None
Comment: OutStrNokia unused
SetCoordinate 00000000

Symbol: SetCoordinate
   Definitions
      At line 110 in file Button_Function_Class.s
   Uses
      None
Comment: SetCoordinate unused
Timers_Init 00000000

Symbol: Timers_Init
   Definitions
      At line 119 in file Button_Function_Class.s
   Uses
      None
Comment: Timers_Init unused
TxByte 00000000

Symbol: TxByte
   Definitions
      At line 111 in file Button_Function_Class.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      None
Comment: TxByte unused
WideTimer0A_Handler 00000000

Symbol: WideTimer0A_Handler
   Definitions
      At line 117 in file Button_Function_Class.s
   Uses
      None
Comment: WideTimer0A_Handler unused
WideTimer0B_Handler 00000000

Symbol: WideTimer0B_Handler
   Definitions
      At line 118 in file Button_Function_Class.s
   Uses
      None
Comment: WideTimer0B_Handler unused
16 symbols
404 symbols in table
