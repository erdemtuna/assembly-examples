


ARM Macro Assembler    Page 1 


    1 00000000         ; Nokia5110-Class.s
    2 00000000         
    3 00000000         ; Sets up SSI0, PA6, PA to work with the
    4 00000000         ; SParkFun version of the Nokia 5110
    5 00000000         
    6 00000000         ; Pin connections
    7 00000000         ; ------------------------------------------
    8 00000000         ; Signal        (Nokia 5110) LaunchPad pin
    9 00000000         ; ------------------------------------------
   10 00000000         ; 3.3V          (VCC, pin 1) power
   11 00000000         ; Ground        (GND, pin 2) ground
   12 00000000         ; SSI0Fss       (SCE, pin 3) connected to PA3
   13 00000000         ; Reset         (RST, pin 4) connected to PA7
   14 00000000         ; Data/Command  (D/C, pin 5) connected to PA6
   15 00000000         ; SSI0Tx        (DN,  pin 6) connected to PA5
   16 00000000         ; SSI0Clk       (SCLK, pin 7) connected to PA2
   17 00000000         ; back light    (LED, pin 8) not connected, consists of 
                       4 white LEDs which draw ~80mA total
   18 00000000         
   19 00000000         ;GPIO Registers
   20 00000000 400043FC 
                       GPIO_PORTA_DATA
                               EQU              0x400043FC  ; Port A Data
   21 00000000 40004010 
                       GPIO_PORTA_IM
                               EQU              0x40004010  ; Interrupt Mask
   22 00000000 40004400 
                       GPIO_PORTA_DIR
                               EQU              0x40004400  ; Port Direction
   23 00000000 40004420 
                       GPIO_PORTA_AFSEL
                               EQU              0x40004420  ; Alt Function enab
                                                            le
   24 00000000 4000451C 
                       GPIO_PORTA_DEN
                               EQU              0x4000451C  ; Digital Enable
   25 00000000 40004528 
                       GPIO_PORTA_AMSEL
                               EQU              0x40004528  ; Analog enable
   26 00000000 4000452C 
                       GPIO_PORTA_PCTL
                               EQU              0x4000452C  ; Alternate Functio
                                                            ns
   27 00000000         
   28 00000000 400053FC 
                       GPIO_PORTB_DATA
                               EQU              0x400053FC  ; Port B Data
   29 00000000 40005010 
                       GPIO_PORTB_IM
                               EQU              0x40005010  ; Interrupt Mask
   30 00000000 40005400 
                       GPIO_PORTB_DIR
                               EQU              0x40005400  ; Port Direction
   31 00000000 40005420 
                       GPIO_PORTB_AFSEL
                               EQU              0x40005420  ; Alt Function enab
                                                            le
   32 00000000 4000551C 
                       GPIO_PORTB_DEN



ARM Macro Assembler    Page 2 


                               EQU              0x4000551C  ; Digital Enable
   33 00000000 40005528 
                       GPIO_PORTB_AMSEL
                               EQU              0x40005528  ; Analog enable
   34 00000000 4000552C 
                       GPIO_PORTB_PCTL
                               EQU              0x4000552C  ; Alternate Functio
                                                            ns
   35 00000000         
   36 00000000         ;SSI Registers
   37 00000000 40008000 
                       SSI0_CR0
                               EQU              0x40008000
   38 00000000 40008004 
                       SSI0_CR1
                               EQU              0x40008004
   39 00000000 40008008 
                       SSI0_DR EQU              0x40008008
   40 00000000 4000800C 
                       SSI0_SR EQU              0x4000800C
   41 00000000 40008010 
                       SSI0_CPSR
                               EQU              0x40008010
   42 00000000 40008FC8 
                       SSI0_CC EQU              0x40008FC8
   43 00000000         
   44 00000000         ;System Registers
   45 00000000 400FE608 
                       SYSCTL_RCGCGPIO
                               EQU              0x400FE608  ; GPIO Gate Control
                                                            
   46 00000000 400FE61C 
                       SYSCTL_RCGCSSI
                               EQU              0x400FE61C  ; SSI Gate Control
   47 00000000         
   48 00000000                 AREA             timer, CODE, READONLY
   49 00000000                 THUMB
   50 00000000         
   51 00000000                 EXPORT           Nokia_Init
   52 00000000                 EXPORT           TxByte
   53 00000000                 EXPORT           OutImgNokia
   54 00000000                 EXPORT           SetCoordinate
   55 00000000                 EXPORT           OutCharNokia
   56 00000000                 EXPORT           OutStrNokia
   57 00000000                 EXPORT           ClearNokia
   58 00000000         
   59 00000000         ; ASCII table for characters to be displayed
   60 00000000 00 00 00 
              00 00    ASCII   DCB              0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ;// 20
   61 00000005 00 00 5F 
              00 00            DCB              0x00, 0x00, 0x5f, 0x00, 0x00 
                                                            ;// 21 !
   62 0000000A 00 07 00 
              07 00            DCB              0x00, 0x07, 0x00, 0x07, 0x00 
                                                            ;// 22 "
   63 0000000F 14 7F 14 
              7F 14            DCB              0x14, 0x7f, 0x14, 0x7f, 0x14 
                                                            ;// 23 #



ARM Macro Assembler    Page 3 


   64 00000014 24 2A 7F 
              2A 12            DCB              0x24, 0x2a, 0x7f, 0x2a, 0x12 
                                                            ;// 24 $
   65 00000019 23 13 08 
              64 62            DCB              0x23, 0x13, 0x08, 0x64, 0x62 
                                                            ;// 25 %
   66 0000001E 36 49 55 
              22 50            DCB              0x36, 0x49, 0x55, 0x22, 0x50 
                                                            ;// 26 &
   67 00000023 00 05 03 
              00 00            DCB              0x00, 0x05, 0x03, 0x00, 0x00 
                                                            ;// 27 '
   68 00000028 00 1C 22 
              41 00            DCB              0x00, 0x1c, 0x22, 0x41, 0x00 
                                                            ;// 28 (
   69 0000002D 00 41 22 
              1C 00            DCB              0x00, 0x41, 0x22, 0x1c, 0x00 
                                                            ;// 29 )
   70 00000032 14 08 3E 
              08 14            DCB              0x14, 0x08, 0x3e, 0x08, 0x14 
                                                            ;// 2a *
   71 00000037 08 08 3E 
              08 08            DCB              0x08, 0x08, 0x3e, 0x08, 0x08 
                                                            ;// 2b +
   72 0000003C 00 50 30 
              00 00            DCB              0x00, 0x50, 0x30, 0x00, 0x00 
                                                            ;// 2c ,
   73 00000041 08 08 08 
              08 08            DCB              0x08, 0x08, 0x08, 0x08, 0x08 
                                                            ;// 2d -
   74 00000046 00 60 60 
              00 00            DCB              0x00, 0x60, 0x60, 0x00, 0x00 
                                                            ;// 2e .
   75 0000004B 20 10 08 
              04 02            DCB              0x20, 0x10, 0x08, 0x04, 0x02 
                                                            ;// 2f /
   76 00000050 3E 51 49 
              45 3E            DCB              0x3e, 0x51, 0x49, 0x45, 0x3e 
                                                            ;// 30 0
   77 00000055 00 42 7F 
              40 00            DCB              0x00, 0x42, 0x7f, 0x40, 0x00 
                                                            ;// 31 1
   78 0000005A 42 61 51 
              49 46            DCB              0x42, 0x61, 0x51, 0x49, 0x46 
                                                            ;// 32 2
   79 0000005F 21 41 45 
              4B 31            DCB              0x21, 0x41, 0x45, 0x4b, 0x31 
                                                            ;// 33 3
   80 00000064 18 14 12 
              7F 10            DCB              0x18, 0x14, 0x12, 0x7f, 0x10 
                                                            ;// 34 4
   81 00000069 27 45 45 
              45 39            DCB              0x27, 0x45, 0x45, 0x45, 0x39 
                                                            ;// 35 5
   82 0000006E 3C 4A 49 
              49 30            DCB              0x3c, 0x4a, 0x49, 0x49, 0x30 
                                                            ;// 36 6
   83 00000073 01 71 09 
              05 03            DCB              0x01, 0x71, 0x09, 0x05, 0x03 



ARM Macro Assembler    Page 4 


                                                            ;// 37 7
   84 00000078 36 49 49 
              49 36            DCB              0x36, 0x49, 0x49, 0x49, 0x36 
                                                            ;// 38 8
   85 0000007D 06 49 49 
              29 1E            DCB              0x06, 0x49, 0x49, 0x29, 0x1e 
                                                            ;// 39 9
   86 00000082 00 36 36 
              00 00            DCB              0x00, 0x36, 0x36, 0x00, 0x00 
                                                            ;// 3a :
   87 00000087 00 56 36 
              00 00            DCB              0x00, 0x56, 0x36, 0x00, 0x00 
                                                            ;// 3b ;
   88 0000008C 08 14 22 
              41 00            DCB              0x08, 0x14, 0x22, 0x41, 0x00 
                                                            ;// 3c <
   89 00000091 14 14 14 
              14 14            DCB              0x14, 0x14, 0x14, 0x14, 0x14 
                                                            ;// 3d =
   90 00000096 00 41 22 
              14 08            DCB              0x00, 0x41, 0x22, 0x14, 0x08 
                                                            ;// 3e >
   91 0000009B 02 01 51 
              09 06            DCB              0x02, 0x01, 0x51, 0x09, 0x06 
                                                            ;// 3f ?
   92 000000A0 32 49 79 
              41 3E            DCB              0x32, 0x49, 0x79, 0x41, 0x3e 
                                                            ;// 40 @
   93 000000A5 7E 11 11 
              11 7E            DCB              0x7e, 0x11, 0x11, 0x11, 0x7e 
                                                            ;// 41 A
   94 000000AA 7F 49 49 
              49 36            DCB              0x7f, 0x49, 0x49, 0x49, 0x36 
                                                            ;// 42 B
   95 000000AF 3E 41 41 
              41 22            DCB              0x3e, 0x41, 0x41, 0x41, 0x22 
                                                            ;// 43 C
   96 000000B4 7F 41 41 
              22 1C            DCB              0x7f, 0x41, 0x41, 0x22, 0x1c 
                                                            ;// 44 D
   97 000000B9 7F 49 49 
              49 41            DCB              0x7f, 0x49, 0x49, 0x49, 0x41 
                                                            ;// 45 E
   98 000000BE 7F 09 09 
              09 01            DCB              0x7f, 0x09, 0x09, 0x09, 0x01 
                                                            ;// 46 F
   99 000000C3 3E 41 49 
              49 7A            DCB              0x3e, 0x41, 0x49, 0x49, 0x7a 
                                                            ;// 47 G
  100 000000C8 7F 08 08 
              08 7F            DCB              0x7f, 0x08, 0x08, 0x08, 0x7f 
                                                            ;// 48 H
  101 000000CD 00 41 7F 
              41 00            DCB              0x00, 0x41, 0x7f, 0x41, 0x00 
                                                            ;// 49 I
  102 000000D2 20 40 41 
              3F 01            DCB              0x20, 0x40, 0x41, 0x3f, 0x01 
                                                            ;// 4a J
  103 000000D7 7F 08 14 



ARM Macro Assembler    Page 5 


              22 41            DCB              0x7f, 0x08, 0x14, 0x22, 0x41 
                                                            ;// 4b K
  104 000000DC 7F 40 40 
              40 40            DCB              0x7f, 0x40, 0x40, 0x40, 0x40 
                                                            ;// 4c L
  105 000000E1 7F 02 0C 
              02 7F            DCB              0x7f, 0x02, 0x0c, 0x02, 0x7f 
                                                            ;// 4d M
  106 000000E6 7F 04 08 
              10 7F            DCB              0x7f, 0x04, 0x08, 0x10, 0x7f 
                                                            ;// 4e N
  107 000000EB 3E 41 41 
              41 3E            DCB              0x3e, 0x41, 0x41, 0x41, 0x3e 
                                                            ;// 4f O
  108 000000F0 7F 09 09 
              09 06            DCB              0x7f, 0x09, 0x09, 0x09, 0x06 
                                                            ;// 50 P
  109 000000F5 3E 41 51 
              21 5E            DCB              0x3e, 0x41, 0x51, 0x21, 0x5e 
                                                            ;// 51 Q
  110 000000FA 7F 09 19 
              29 46            DCB              0x7f, 0x09, 0x19, 0x29, 0x46 
                                                            ;// 52 R
  111 000000FF 46 49 49 
              49 31            DCB              0x46, 0x49, 0x49, 0x49, 0x31 
                                                            ;// 53 S
  112 00000104 01 01 7F 
              01 01            DCB              0x01, 0x01, 0x7f, 0x01, 0x01 
                                                            ;// 54 T
  113 00000109 3F 40 40 
              40 3F            DCB              0x3f, 0x40, 0x40, 0x40, 0x3f 
                                                            ;// 55 U
  114 0000010E 1F 20 40 
              20 1F            DCB              0x1f, 0x20, 0x40, 0x20, 0x1f 
                                                            ;// 56 V
  115 00000113 3F 40 38 
              40 3F            DCB              0x3f, 0x40, 0x38, 0x40, 0x3f 
                                                            ;// 57 W
  116 00000118 63 14 08 
              14 63            DCB              0x63, 0x14, 0x08, 0x14, 0x63 
                                                            ;// 58 X
  117 0000011D 07 08 70 
              08 07            DCB              0x07, 0x08, 0x70, 0x08, 0x07 
                                                            ;// 59 Y
  118 00000122 61 51 49 
              45 43            DCB              0x61, 0x51, 0x49, 0x45, 0x43 
                                                            ;// 5a Z
  119 00000127 00 7F 41 
              41 00            DCB              0x00, 0x7f, 0x41, 0x41, 0x00 
                                                            ;// 5b [
  120 0000012C 02 04 08 
              10 20            DCB              0x02, 0x04, 0x08, 0x10, 0x20 
                                                            ;// 5c '\'
  121 00000131 00 41 41 
              7F 00            DCB              0x00, 0x41, 0x41, 0x7f, 0x00 
                                                            ;// 5d ]
  122 00000136 04 02 01 
              02 04            DCB              0x04, 0x02, 0x01, 0x02, 0x04 
                                                            ;// 5e ^



ARM Macro Assembler    Page 6 


  123 0000013B 40 40 40 
              40 40            DCB              0x40, 0x40, 0x40, 0x40, 0x40 
                                                            ;// 5f _
  124 00000140 00 01 02 
              04 00            DCB              0x00, 0x01, 0x02, 0x04, 0x00 
                                                            ;// 60 `
  125 00000145 20 54 54 
              54 78            DCB              0x20, 0x54, 0x54, 0x54, 0x78 
                                                            ;// 61 a
  126 0000014A 7F 48 44 
              44 38            DCB              0x7f, 0x48, 0x44, 0x44, 0x38 
                                                            ;// 62 b
  127 0000014F 38 44 44 
              44 20            DCB              0x38, 0x44, 0x44, 0x44, 0x20 
                                                            ;// 63 c
  128 00000154 38 44 44 
              48 7F            DCB              0x38, 0x44, 0x44, 0x48, 0x7f 
                                                            ;// 64 d
  129 00000159 38 54 54 
              54 18            DCB              0x38, 0x54, 0x54, 0x54, 0x18 
                                                            ;// 65 e
  130 0000015E 08 7E 09 
              01 02            DCB              0x08, 0x7e, 0x09, 0x01, 0x02 
                                                            ;// 66 f
  131 00000163 0C 52 52 
              52 3E            DCB              0x0c, 0x52, 0x52, 0x52, 0x3e 
                                                            ;// 67 g
  132 00000168 7F 08 04 
              04 78            DCB              0x7f, 0x08, 0x04, 0x04, 0x78 
                                                            ;// 68 h
  133 0000016D 00 44 7D 
              40 00            DCB              0x00, 0x44, 0x7d, 0x40, 0x00 
                                                            ;// 69 i
  134 00000172 20 40 44 
              3D 00            DCB              0x20, 0x40, 0x44, 0x3d, 0x00 
                                                            ;// 6a j
  135 00000177 7F 10 28 
              44 00            DCB              0x7f, 0x10, 0x28, 0x44, 0x00 
                                                            ;// 6b k
  136 0000017C 00 41 7F 
              40 00            DCB              0x00, 0x41, 0x7f, 0x40, 0x00 
                                                            ;// 6c l
  137 00000181 7C 04 18 
              04 78            DCB              0x7c, 0x04, 0x18, 0x04, 0x78 
                                                            ;// 6d m
  138 00000186 7C 08 04 
              04 78            DCB              0x7c, 0x08, 0x04, 0x04, 0x78 
                                                            ;// 6e n
  139 0000018B 38 44 44 
              44 38            DCB              0x38, 0x44, 0x44, 0x44, 0x38 
                                                            ;// 6f o
  140 00000190 7C 14 14 
              14 08            DCB              0x7c, 0x14, 0x14, 0x14, 0x08 
                                                            ;// 70 p
  141 00000195 08 14 14 
              18 7C            DCB              0x08, 0x14, 0x14, 0x18, 0x7c 
                                                            ;// 71 q
  142 0000019A 7C 08 04 
              04 08            DCB              0x7c, 0x08, 0x04, 0x04, 0x08 



ARM Macro Assembler    Page 7 


                                                            ;// 72 r
  143 0000019F 48 54 54 
              54 20            DCB              0x48, 0x54, 0x54, 0x54, 0x20 
                                                            ;// 73 s
  144 000001A4 04 3F 44 
              40 20            DCB              0x04, 0x3f, 0x44, 0x40, 0x20 
                                                            ;// 74 t
  145 000001A9 3C 40 40 
              20 7C            DCB              0x3c, 0x40, 0x40, 0x20, 0x7c 
                                                            ;// 75 u
  146 000001AE 1C 20 40 
              20 1C            DCB              0x1c, 0x20, 0x40, 0x20, 0x1c 
                                                            ;// 76 v
  147 000001B3 3C 40 30 
              40 3C            DCB              0x3c, 0x40, 0x30, 0x40, 0x3c 
                                                            ;// 77 w
  148 000001B8 44 28 10 
              28 44            DCB              0x44, 0x28, 0x10, 0x28, 0x44 
                                                            ;// 78 x
  149 000001BD 0C 50 50 
              50 3C            DCB              0x0c, 0x50, 0x50, 0x50, 0x3c 
                                                            ;// 79 y
  150 000001C2 44 64 54 
              4C 44            DCB              0x44, 0x64, 0x54, 0x4c, 0x44 
                                                            ;// 7a z
  151 000001C7 00 08 36 
              41 00            DCB              0x00, 0x08, 0x36, 0x41, 0x00 
                                                            ;// 7b {
  152 000001CC 00 00 7F 
              00 00            DCB              0x00, 0x00, 0x7f, 0x00, 0x00 
                                                            ;// 7c |
  153 000001D1 00 41 36 
              08 00            DCB              0x00, 0x41, 0x36, 0x08, 0x00 
                                                            ;// 7d }
  154 000001D6 10 08 08 
              10 08            DCB              0x10, 0x08, 0x08, 0x10, 0x08 
                                                            ;// 7e ~
  155 000001DB 00              SPACE            1           ; added for padding
                                                            
  156 000001DC         ;"
  157 000001DC         ;DCB  0XFF, 0x81, 0xfd, 0xd5, 0xd5, 0x9a, 0x81, 0xff ;//
                        Battleship
  158 000001DC         ;DCB  0xFF, 0x81, 0xFD, 0xC5, 0xC5, 0xA9, 0x81, 0XFF ;//
                        Civilianship
  159 000001DC         ;*******************************************************
                       **********
  160 000001DC         ; Initializes Nokia display
  161 000001DC         Nokia_Init
  162 000001DC B500            PUSH             {LR}
  163 000001DE         ;Setup GPIO
  164 000001DE 4995            LDR              R1, =SYSCTL_RCGCGPIO 
                                                            ; start GPIO clock
  165 000001E0 6808            LDR              R0, [R1]
  166 000001E2 F040 0001       ORR              R0, #0x1    ; set bit 0 
  167 000001E6 6008            STR              R0, [R1]
  168 000001E8 BF00            NOP                          ; allow clock to se
                                                            ttle
  169 000001EA BF00            NOP
  170 000001EC BF00            NOP



ARM Macro Assembler    Page 8 


  171 000001EE 4992            LDR              R1,=GPIO_PORTA_DIR ; make PA2,3
                                                            ,5,6,7 output
  172 000001F0 F04F 00EC       LDR              R0, = 2_11101100 ; and make PA4
                                                             input
  173 000001F4 6008            STR              R0,[R1]
  174 000001F6 4991            LDR              R1,=GPIO_PORTA_AFSEL ; enable a
                                                            lt funct on PA2,3,4
                                                            ,5
  175 000001F8 F04F 003C       MOV              R0, #0x3C
  176 000001FC 6008            STR              R0,[R1]
  177 000001FE 4990            LDR              R1,=GPIO_PORTA_DEN ; enable dig
                                                            ital I/O at PA2,3,4
                                                            ,5,6,7
  178 00000200 F04F 00FC       MOV              R0, #0xFC
  179 00000204 6008            STR              R0,[R1]
  180 00000206 498F            LDR              R1,=GPIO_PORTA_PCTL ; configure
                                                             PA2,3,4,5 as SSI
  181 00000208 488F            LDR              R0, = 0x00222200
  182 0000020A 6008            STR              R0,[R1]
  183 0000020C 498F            LDR              R1,=GPIO_PORTA_AMSEL ; disable 
                                                            analog functionalit
                                                            y
  184 0000020E F04F 0000       MOV              R0, #0x0
  185 00000212 6008            STR              R0,[R1]
  186 00000214         
  187 00000214         ;Setup SSI 
  188 00000214 498E            LDR              R1,=SYSCTL_RCGCSSI 
                                                            ; start SSI clock
  189 00000216 6808            LDR              R0,[R1]
  190 00000218 F04F 0001       MOV              R0, #0x1    ; set bit 0 for SSI
                                                            0
  191 0000021C 6008            STR              R0,[R1]
  192 0000021E         ; small delay
  193 0000021E F04F 000F       MOV              R0,#0x0F
  194 00000222         waitSSIClk                           ; allow clock to se
                                                            ttle
  195 00000222 1E40            SUBS             R0,R0,#0x01
  196 00000224 D1FD            BNE              waitSSIClk
  197 00000226         
  198 00000226 498B            LDR              R1,=SSI0_CR1 ; disable SSI duri
                                                            ng setup and also s
                                                            et to Master
  199 00000228 6808            LDR              R0, [R1]    ; clear bit 1 and  
                                                            clear bit 2 (you ca
                                                            n clear all bits)
  200 0000022A F020 0006       BIC              R0, #0x06
  201 0000022E 6008            STR              R0,[R1]
  202 00000230         
  203 00000230         ; Configure baud rate PIOSC=16MHz,Baud=2MHz,CPSDVSR=4,SC
                       R=1
  204 00000230         ; BR=SysClk/(CPSDVSR * (1 + SCR))
  205 00000230 4989            LDR              R1,=SSI0_CC ; use PIOSC (16MHz)
                                                              
  206 00000232 6808            LDR              R0, [R1]    ; set bits 3:0 of t
                                                            he SSICC to 0x5 
  207 00000234 F040 0005       ORR              R0, #0x05
  208 00000238 6008            STR              R0,[R1]
  209 0000023A 4988            LDR              R1,=SSI0_CR0 ; set SCR bits to 
                                                            0x01



ARM Macro Assembler    Page 9 


  210 0000023C 6808            LDR              R0,[R1]
  211 0000023E         ;  ________________    ;
  212 0000023E 6008            STR              R0,[R1]
  213 00000240 4987            LDR              R1,=SSI0_CPSR ; set CPSDVSR (pr
                                                            escale) to 0x04
  214 00000242 F04F 0004       MOV              R0, #0x04
  215 00000246 6008            STR              R0,[R1]
  216 00000248 4984            LDR              R1,=SSI0_CR0 ; clear SPH,SPO
  217 0000024A 6808            LDR              R0,[R1]     ; choose Freescale 
                                                            frame format
  218 0000024C F020 0030       BIC              R0, #0x30   ; clear bits 5:4  
  219 00000250 F040 0007       ORR              R0, #0x7    ; choose 8-bit data
                                                             (set DSS bits to 0
                                                            x07)
  220 00000254 6008            STR              R0,[R1]
  221 00000256 497F            LDR              R1,=SSI0_CR1 ; enable SSI
  222 00000258 6808            LDR              R0,[R1]
  223 0000025A F040 0002       ORR              R0, #0x02   ; set bit 1
  224 0000025E 6008            STR              R0,[R1]
  225 00000260         ; DC = PA7
  226 00000260         ; Reset LCD memory - reset already low
  227 00000260         ; ensure reset is low
  228 00000260 4980            LDR              R1,=GPIO_PORTA_DATA
  229 00000262 6808            LDR              R0, [R1]    ; clear reset(PA7) 
                                                             
  230 00000264 F020 0080       BIC              R0, #0x80
  231 00000268 6008            STR              R0,[R1]
  232 0000026A         
  233 0000026A F04F 000A       MOV              R0,#10
  234 0000026E         delReset
  235 0000026E 1E40            SUBS             R0,R0,#1
  236 00000270 D1FD            BNE              delReset
  237 00000272         
  238 00000272 497C            LDR              R1,=GPIO_PORTA_DATA ; 
  239 00000274 6808            LDR              R0, [R1]    ; set reset(PA7)
  240 00000276 F040 0080       ORR              R0, #0x80
  241 0000027A 6008            STR              R0,[R1]     ;
  242 0000027C         
  243 0000027C         ; Setup LCD
  244 0000027C 4979            LDR              R1,=GPIO_PORTA_DATA ; set PA6 l
                                                            ow for Command
  245 0000027E 6808            LDR              R0,[R1]
  246 00000280 F020 0040       BIC              R0, #0x40
  247 00000284 6008            STR              R0,[R1]
  248 00000286         
  249 00000286         ;chip active (PD=0)
  250 00000286         ;horizontal addressing (V=0)
  251 00000286         ;extended instruction set (H=1)
  252 00000286 F04F 0521       MOV              R5,#0x21
  253 0000028A F7FF FFFE       BL               TxByte
  254 0000028E         ;set contrast
  255 0000028E F04F 05B8       MOV              R5,#0xB8
  256 00000292 F7FF FFFE       BL               TxByte
  257 00000296         ;set temp coefficient
  258 00000296 F04F 0504       MOV              R5,#0x04
  259 0000029A F7FF FFFE       BL               TxByte
  260 0000029E         ;set bias 1:48: try 0x13 or 0x14
  261 0000029E F04F 0514       MOV              R5,#0x14
  262 000002A2 F7FF FFFE       BL               TxByte



ARM Macro Assembler    Page 10 


  263 000002A6         ;change H=0
  264 000002A6 F04F 0520       MOV              R5,#0x20
  265 000002AA F7FF FFFE       BL               TxByte
  266 000002AE         ;set control mode to normal
  267 000002AE F04F 050C       MOV              R5,#0x0C
  268 000002B2 F7FF FFFE       BL               TxByte
  269 000002B6         ; clear screen
  270 000002B6         ; screen memory is undefined after startup
  271 000002B6 F7FF FFFE       BL               ClearNokia
  272 000002BA         
  273 000002BA         waitCMDDone
  274 000002BA 496B            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  275 000002BC 6808            LDR              R0,[R1]
  276 000002BE F010 0010       ANDS             R0,R0,#0x10
  277 000002C2 D1FA            BNE              waitCMDDone
  278 000002C4         
  279 000002C4 F85D EB04       POP{LR}
  280 000002C8 4770            BX               LR
  281 000002CA         ;*******************************************************
                       **********  
  282 000002CA         
  283 000002CA         ;----------------------------------
  284 000002CA         ; Send 8 bits , a byte, to screen.
  285 000002CA         ; Pass data with R5.
  286 000002CA         ; Edits R0, R1.
  287 000002CA         ;----------------------------------
  288 000002CA         TxByte
  289 000002CA B403            PUSH             {R0-R1}
  290 000002CC 4966            LDR              R1,=SSI0_SR
  291 000002CE         
  292 000002CE         waitFIFOnotFull
  293 000002CE 6808            LDR              R0,[R1]
  294 000002D0 F010 0002       ANDS             R0,R0,#0x02
  295 000002D4 D0FB            BEQ              waitFIFOnotFull ; wait if FIFO 
                                                            is full
  296 000002D6 4965            LDR              R1,=SSI0_DR
  297 000002D8 700D            STRB             R5,[R1]
  298 000002DA BC03            POP              {R0-R1}
  299 000002DC 4770            BX               LR
  300 000002DE         ;*******************************************************
                       **********   
  301 000002DE         
  302 000002DE         ;*******************************************************
                       **********
  303 000002DE         ; Send Image to Nokia routine 
  304 000002DE         OutImgNokia
  305 000002DE B51F            PUSH             {R0-R4,LR}
  306 000002E0 B420            PUSH             {R5}        ; save Img address
  307 000002E2 4960            LDR              R1,=GPIO_PORTA_DATA ; set PA6 l
                                                            ow for Command
  308 000002E4 6808            LDR              R0,[R1]
  309 000002E6 F020 0040       BIC              R0,#0x40
  310 000002EA 6008            STR              R0,[R1]
  311 000002EC F04F 0520       MOV              R5,#0x20    ; ensure H=0
  312 000002F0 F7FF FFFE       BL               TxByte
  313 000002F4 F04F 0540       MOV              R5,#0x40    ; set Y address to 
                                                            0
  314 000002F8 F7FF FFFE       BL               TxByte



ARM Macro Assembler    Page 11 


  315 000002FC F04F 0580       MOV              R5,#0x80    ; set X address to 
                                                            0
  316 00000300 F7FF FFFE       BL               TxByte
  317 00000304         waitImgReady
  318 00000304 4958            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  319 00000306 6808            LDR              R0,[R1]
  320 00000308 F010 0010       ANDS             R0,R0,#0x10
  321 0000030C D1FA            BNE              waitImgReady
  322 0000030E 4955            LDR              R1,=GPIO_PORTA_DATA ; ready: se
                                                            t PA6 high for Data
                                                            
  323 00000310 6808            LDR              R0,[R1]
  324 00000312 F040 0040       ORR              R0,#0x40
  325 00000316 6008            STR              R0,[R1]
  326 00000318 BC20            POP              {R5}
  327 0000031A F44F 70FC       MOV              R0,#504     ; 504 bytes in full
                                                             image
  328 0000031E 4629            MOV              R1,R5       ; put img address i
                                                            n R1
  329 00000320         sendNxtByteNokia
  330 00000320 F811 5B01       LDRB             R5,[R1],#1  ; load R5 with byte
                                                            , post inc address
  331 00000324 F7FF FFFE       BL               TxByte
  332 00000328 3801            SUBS             R0,#1
  333 0000032A D1F9            BNE              sendNxtByteNokia
  334 0000032C E8BD 401F       POP              {R0-R4,LR}
  335 00000330 4770            BX               LR
  336 00000332         ;*******************************************************
                       **********
  337 00000332         
  338 00000332         ;*******************************************************
                       **********
  339 00000332         
  340 00000332         ;------------------------------------
  341 00000332         ; Set coordinates (x,y) of the screen
  342 00000332         ; Pass x coordinate by R0.
  343 00000332         ; Pass y coordinate by R1.
  344 00000332         ; Edits R0, R1.
  345 00000332         ;------------------------------------
  346 00000332         SetCoordinate
  347 00000332         ; DC is left high, so data can be sent after
  348 00000332 B53C            PUSH             {R2-R5,LR}
  349 00000334 B403            PUSH             {R0-R1}
  350 00000336 494B            LDR              R1,=GPIO_PORTA_DATA ; set PA6 l
                                                            ow for Command
  351 00000338 6808            LDR              R0,[R1]
  352 0000033A F020 0040       BIC              R0,#0x40
  353 0000033E 6008            STR              R0,[R1]
  354 00000340 F04F 0520       MOV              R5,#0x20    ; ensure H=0
  355 00000344 F7FF FFFE       BL               TxByte
  356 00000348 BC03            POP              {R0-R1}
  357 0000034A 460D            MOV              R5,R1       ; set Y address
  358 0000034C F045 0540       ORR              R5,#0x40
  359 00000350 F7FF FFFE       BL               TxByte
  360 00000354 4605            MOV              R5,R0       ; set X address
  361 00000356 F045 0580       ORR              R5,#0x80
  362 0000035A F7FF FFFE       BL               TxByte
  363 0000035E         



ARM Macro Assembler    Page 12 


  364 0000035E         waitEndOfTransmission
  365 0000035E 4942            LDR              R1,=SSI0_SR
  366 00000360 6808            LDR              R0,[R1]
  367 00000362 F010 0010       ANDS             R0,R0,#0x10
  368 00000366 D1FA            BNE              waitEndOfTransmission ; wait if
                                                             transmission conti
                                                            nues
  369 00000368 493E            LDR              R1,=GPIO_PORTA_DATA ; set PA6 h
                                                            igh for Data
  370 0000036A 6808            LDR              R0,[R1]
  371 0000036C F040 0040       ORR              R0,#0x40
  372 00000370 6008            STR              R0,[R1]
  373 00000372 E8BD 403C       POP              {R2-R5,LR}
  374 00000376 4770            BX               LR
  375 00000378         ;*******************************************************
                       **********
  376 00000378         
  377 00000378         ;*******************************************************
                       **********
  378 00000378         ; output ASCII character to LCD screen
  379 00000378         ; ASCII hex value passed via R5
  380 00000378         ; This routine assumes coordinates have already been set
                       
  381 00000378         OutCharNokia
  382 00000378 B51F            PUSH             {R0-R4,LR}
  383 0000037A 493A            LDR              R1,=GPIO_PORTA_DATA ; set PA6 h
                                                            igh for Data
  384 0000037C 6808            LDR              R0,[R1]
  385 0000037E F040 0040       ORR              R0,#0x40
  386 00000382 6008            STR              R0,[R1]
  387 00000384 493A            LDR              R1,=ASCII   ; load address of A
                                                            SCII table
  388 00000386 F1A5 0220       SUB              R2,R5,#0x20 ; calculate offset 
                                                            of char
  389 0000038A F04F 0305       MOV              R3,#0x05
  390 0000038E FB02 F203       MUL              R2,R2,R3
  391 00000392 4411            ADD              R1,R1,R2
  392 00000394 B420            PUSH             {R5}        ; save state of R5
  393 00000396 F04F 0005       MOV              R0,#0x05    ; 5 bytes in every 
                                                            char
  394 0000039A F04F 0200       MOV              R2,#0x00    ; 1 empty column be
                                                            tween chars
  395 0000039E         sendCharByte
  396 0000039E F811 5B01       LDRB             R5,[R1],#1
  397 000003A2 F7FF FFFE       BL               TxByte      ; send each byte of
                                                             char
  398 000003A6 1E40            SUBS             R0,R0,#1
  399 000003A8 D1F9            BNE              sendCharByte
  400 000003AA 4615            MOV              R5,R2
  401 000003AC F7FF FFFE       BL               TxByte      ; tack space on aft
                                                            er char
  402 000003B0         waitCharDone
  403 000003B0 492D            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  404 000003B2 6808            LDR              R0,[R1]
  405 000003B4 F010 0010       ANDS             R0,R0,#0x10
  406 000003B8 D1FA            BNE              waitCharDone
  407 000003BA BC20            POP              {R5}
  408 000003BC E8BD 401F       POP              {R0-R4,LR}



ARM Macro Assembler    Page 13 


  409 000003C0 4770            BX               LR
  410 000003C2         ;*******************************************************
                       ********** 
  411 000003C2         
  412 000003C2         ;*******************************************************
                       **********
  413 000003C2         ; output ASCII string to LCD screen
  414 000003C2         ; Address of start of message passed via R5
  415 000003C2         ; Ended using EOT character 0x04
  416 000003C2         OutStrNokia
  417 000003C2 B53F            PUSH             {R0-R5,LR}
  418 000003C4 4629            MOV              R1,R5
  419 000003C6         nextStrChar
  420 000003C6 F811 5B01       LDRB             R5,[R1],#1
  421 000003CA 2D04            CMP              R5,#0x04
  422 000003CC D002            BEQ              doneStrNokia
  423 000003CE F7FF FFFE       BL               OutCharNokia
  424 000003D2 E7F8            B                nextStrChar
  425 000003D4         doneStrNokia
  426 000003D4 E8BD 403F       POP              {R0-R5,LR}
  427 000003D8 4770            BX               LR
  428 000003DA         ;*******************************************************
                       **********
  429 000003DA         
  430 000003DA         ;*******************************************************
                       **********
  431 000003DA         ; clear LCD screen
  432 000003DA         ClearNokia
  433 000003DA B53F            PUSH             {R0-R5,LR}
  434 000003DC 4921            LDR              R1,=GPIO_PORTA_DATA ; set PA6 l
                                                            ow for Command
  435 000003DE 6808            LDR              R0,[R1]
  436 000003E0 F020 0040       BIC              R0,#0x40
  437 000003E4 6008            STR              R0,[R1]
  438 000003E6 F04F 0520       MOV              R5,#0x20    ; ensure H=0
  439 000003EA F7FF FFFE       BL               TxByte
  440 000003EE F04F 0540       MOV              R5,#0x40    ; set Y address to 
                                                            0
  441 000003F2 F7FF FFFE       BL               TxByte
  442 000003F6 F04F 0580       MOV              R5,#0x80    ; set X address to 
                                                            0
  443 000003FA F7FF FFFE       BL               TxByte
  444 000003FE         waitClrReady
  445 000003FE 491A            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  446 00000400 6808            LDR              R0,[R1]
  447 00000402 F010 0010       ANDS             R0,R0,#0x10
  448 00000406 D1FA            BNE              waitClrReady
  449 00000408 4916            LDR              R1,=GPIO_PORTA_DATA ; set PA6 h
                                                            igh for Data
  450 0000040A 6808            LDR              R0,[R1]
  451 0000040C F040 0040       ORR              R0,#0x40
  452 00000410 6008            STR              R0,[R1]
  453 00000412 F44F 70FC       MOV              R0,#504     ; 504 bytes in full
                                                             image
  454 00000416 F04F 0500       MOV              R5,#0x00    ; load zeros to sen
                                                            d
  455 0000041A         clrNxtNokia
  456 0000041A F7FF FFFE       BL               TxByte



ARM Macro Assembler    Page 14 


  457 0000041E 3801            SUBS             R0,#1
  458 00000420 D1FB            BNE              clrNxtNokia
  459 00000422         waitClrDone
  460 00000422 4911            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  461 00000424 6808            LDR              R0,[R1]
  462 00000426 F010 0010       ANDS             R0,R0,#0x10
  463 0000042A D1FA            BNE              waitClrDone
  464 0000042C E8BD 403F       POP              {R0-R5,LR}
  465 00000430 4770            BX               LR
  466 00000432         ;*******************************************************
                       **********  
  467 00000432 00 00           ALIGN
  468 00000434                 END
              400FE608 
              40004400 
              40004420 
              4000451C 
              4000452C 
              00222200 
              40004528 
              400FE61C 
              40008004 
              40008FC8 
              40008000 
              40008010 
              400043FC 
              4000800C 
              40008008 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\lcd_function_class.d -o.\objects\lcd_function_class.o
 -I.\RTE\_EE447-Project -ID:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Includ
e\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefin
e="__UVISION_VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listi
ngs\lcd_function_class.lst LCD_Function_Class.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ASCII 00000000

Symbol: ASCII
   Definitions
      At line 60 in file LCD_Function_Class.s
   Uses
      At line 387 in file LCD_Function_Class.s
Comment: ASCII used once
ClearNokia 000003DA

Symbol: ClearNokia
   Definitions
      At line 432 in file LCD_Function_Class.s
   Uses
      At line 57 in file LCD_Function_Class.s
      At line 271 in file LCD_Function_Class.s

Nokia_Init 000001DC

Symbol: Nokia_Init
   Definitions
      At line 161 in file LCD_Function_Class.s
   Uses
      At line 51 in file LCD_Function_Class.s
Comment: Nokia_Init used once
OutCharNokia 00000378

Symbol: OutCharNokia
   Definitions
      At line 381 in file LCD_Function_Class.s
   Uses
      At line 55 in file LCD_Function_Class.s
      At line 423 in file LCD_Function_Class.s

OutImgNokia 000002DE

Symbol: OutImgNokia
   Definitions
      At line 304 in file LCD_Function_Class.s
   Uses
      At line 53 in file LCD_Function_Class.s
Comment: OutImgNokia used once
OutStrNokia 000003C2

Symbol: OutStrNokia
   Definitions
      At line 416 in file LCD_Function_Class.s
   Uses
      At line 56 in file LCD_Function_Class.s
Comment: OutStrNokia used once
SetCoordinate 00000332

Symbol: SetCoordinate
   Definitions
      At line 346 in file LCD_Function_Class.s
   Uses
      At line 54 in file LCD_Function_Class.s
Comment: SetCoordinate used once
TxByte 000002CA



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: TxByte
   Definitions
      At line 288 in file LCD_Function_Class.s
   Uses
      At line 52 in file LCD_Function_Class.s
      At line 253 in file LCD_Function_Class.s
      At line 256 in file LCD_Function_Class.s
      At line 259 in file LCD_Function_Class.s
      At line 262 in file LCD_Function_Class.s
      At line 265 in file LCD_Function_Class.s
      At line 268 in file LCD_Function_Class.s
      At line 312 in file LCD_Function_Class.s
      At line 314 in file LCD_Function_Class.s
      At line 316 in file LCD_Function_Class.s
      At line 331 in file LCD_Function_Class.s
      At line 355 in file LCD_Function_Class.s
      At line 359 in file LCD_Function_Class.s
      At line 362 in file LCD_Function_Class.s
      At line 397 in file LCD_Function_Class.s
      At line 401 in file LCD_Function_Class.s
      At line 439 in file LCD_Function_Class.s
      At line 441 in file LCD_Function_Class.s
      At line 443 in file LCD_Function_Class.s
      At line 456 in file LCD_Function_Class.s

clrNxtNokia 0000041A

Symbol: clrNxtNokia
   Definitions
      At line 455 in file LCD_Function_Class.s
   Uses
      At line 458 in file LCD_Function_Class.s
Comment: clrNxtNokia used once
delReset 0000026E

Symbol: delReset
   Definitions
      At line 234 in file LCD_Function_Class.s
   Uses
      At line 236 in file LCD_Function_Class.s
Comment: delReset used once
doneStrNokia 000003D4

Symbol: doneStrNokia
   Definitions
      At line 425 in file LCD_Function_Class.s
   Uses
      At line 422 in file LCD_Function_Class.s
Comment: doneStrNokia used once
nextStrChar 000003C6

Symbol: nextStrChar
   Definitions
      At line 419 in file LCD_Function_Class.s
   Uses
      At line 424 in file LCD_Function_Class.s
Comment: nextStrChar used once
sendCharByte 0000039E



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: sendCharByte
   Definitions
      At line 395 in file LCD_Function_Class.s
   Uses
      At line 399 in file LCD_Function_Class.s
Comment: sendCharByte used once
sendNxtByteNokia 00000320

Symbol: sendNxtByteNokia
   Definitions
      At line 329 in file LCD_Function_Class.s
   Uses
      At line 333 in file LCD_Function_Class.s
Comment: sendNxtByteNokia used once
timer 00000000

Symbol: timer
   Definitions
      At line 48 in file LCD_Function_Class.s
   Uses
      None
Comment: timer unused
waitCMDDone 000002BA

Symbol: waitCMDDone
   Definitions
      At line 273 in file LCD_Function_Class.s
   Uses
      At line 277 in file LCD_Function_Class.s
Comment: waitCMDDone used once
waitCharDone 000003B0

Symbol: waitCharDone
   Definitions
      At line 402 in file LCD_Function_Class.s
   Uses
      At line 406 in file LCD_Function_Class.s
Comment: waitCharDone used once
waitClrDone 00000422

Symbol: waitClrDone
   Definitions
      At line 459 in file LCD_Function_Class.s
   Uses
      At line 463 in file LCD_Function_Class.s
Comment: waitClrDone used once
waitClrReady 000003FE

Symbol: waitClrReady
   Definitions
      At line 444 in file LCD_Function_Class.s
   Uses
      At line 448 in file LCD_Function_Class.s
Comment: waitClrReady used once
waitEndOfTransmission 0000035E

Symbol: waitEndOfTransmission
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 364 in file LCD_Function_Class.s
   Uses
      At line 368 in file LCD_Function_Class.s
Comment: waitEndOfTransmission used once
waitFIFOnotFull 000002CE

Symbol: waitFIFOnotFull
   Definitions
      At line 292 in file LCD_Function_Class.s
   Uses
      At line 295 in file LCD_Function_Class.s
Comment: waitFIFOnotFull used once
waitImgReady 00000304

Symbol: waitImgReady
   Definitions
      At line 317 in file LCD_Function_Class.s
   Uses
      At line 321 in file LCD_Function_Class.s
Comment: waitImgReady used once
waitSSIClk 00000222

Symbol: waitSSIClk
   Definitions
      At line 194 in file LCD_Function_Class.s
   Uses
      At line 196 in file LCD_Function_Class.s
Comment: waitSSIClk used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_AFSEL 40004420

Symbol: GPIO_PORTA_AFSEL
   Definitions
      At line 23 in file LCD_Function_Class.s
   Uses
      At line 174 in file LCD_Function_Class.s
Comment: GPIO_PORTA_AFSEL used once
GPIO_PORTA_AMSEL 40004528

Symbol: GPIO_PORTA_AMSEL
   Definitions
      At line 25 in file LCD_Function_Class.s
   Uses
      At line 183 in file LCD_Function_Class.s
Comment: GPIO_PORTA_AMSEL used once
GPIO_PORTA_DATA 400043FC

Symbol: GPIO_PORTA_DATA
   Definitions
      At line 20 in file LCD_Function_Class.s
   Uses
      At line 228 in file LCD_Function_Class.s
      At line 238 in file LCD_Function_Class.s
      At line 244 in file LCD_Function_Class.s
      At line 307 in file LCD_Function_Class.s
      At line 322 in file LCD_Function_Class.s
      At line 350 in file LCD_Function_Class.s
      At line 369 in file LCD_Function_Class.s
      At line 383 in file LCD_Function_Class.s
      At line 434 in file LCD_Function_Class.s
      At line 449 in file LCD_Function_Class.s

GPIO_PORTA_DEN 4000451C

Symbol: GPIO_PORTA_DEN
   Definitions
      At line 24 in file LCD_Function_Class.s
   Uses
      At line 177 in file LCD_Function_Class.s
Comment: GPIO_PORTA_DEN used once
GPIO_PORTA_DIR 40004400

Symbol: GPIO_PORTA_DIR
   Definitions
      At line 22 in file LCD_Function_Class.s
   Uses
      At line 171 in file LCD_Function_Class.s
Comment: GPIO_PORTA_DIR used once
GPIO_PORTA_IM 40004010

Symbol: GPIO_PORTA_IM
   Definitions
      At line 21 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTA_IM unused
GPIO_PORTA_PCTL 4000452C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTA_PCTL
   Definitions
      At line 26 in file LCD_Function_Class.s
   Uses
      At line 180 in file LCD_Function_Class.s
Comment: GPIO_PORTA_PCTL used once
GPIO_PORTB_AFSEL 40005420

Symbol: GPIO_PORTB_AFSEL
   Definitions
      At line 31 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_AFSEL unused
GPIO_PORTB_AMSEL 40005528

Symbol: GPIO_PORTB_AMSEL
   Definitions
      At line 33 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_AMSEL unused
GPIO_PORTB_DATA 400053FC

Symbol: GPIO_PORTB_DATA
   Definitions
      At line 28 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_DATA unused
GPIO_PORTB_DEN 4000551C

Symbol: GPIO_PORTB_DEN
   Definitions
      At line 32 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_DEN unused
GPIO_PORTB_DIR 40005400

Symbol: GPIO_PORTB_DIR
   Definitions
      At line 30 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_DIR unused
GPIO_PORTB_IM 40005010

Symbol: GPIO_PORTB_IM
   Definitions
      At line 29 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_IM unused
GPIO_PORTB_PCTL 4000552C

Symbol: GPIO_PORTB_PCTL
   Definitions
      At line 34 in file LCD_Function_Class.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIO_PORTB_PCTL unused
SSI0_CC 40008FC8

Symbol: SSI0_CC
   Definitions
      At line 42 in file LCD_Function_Class.s
   Uses
      At line 205 in file LCD_Function_Class.s
Comment: SSI0_CC used once
SSI0_CPSR 40008010

Symbol: SSI0_CPSR
   Definitions
      At line 41 in file LCD_Function_Class.s
   Uses
      At line 213 in file LCD_Function_Class.s
Comment: SSI0_CPSR used once
SSI0_CR0 40008000

Symbol: SSI0_CR0
   Definitions
      At line 37 in file LCD_Function_Class.s
   Uses
      At line 209 in file LCD_Function_Class.s
      At line 216 in file LCD_Function_Class.s

SSI0_CR1 40008004

Symbol: SSI0_CR1
   Definitions
      At line 38 in file LCD_Function_Class.s
   Uses
      At line 198 in file LCD_Function_Class.s
      At line 221 in file LCD_Function_Class.s

SSI0_DR 40008008

Symbol: SSI0_DR
   Definitions
      At line 39 in file LCD_Function_Class.s
   Uses
      At line 296 in file LCD_Function_Class.s
Comment: SSI0_DR used once
SSI0_SR 4000800C

Symbol: SSI0_SR
   Definitions
      At line 40 in file LCD_Function_Class.s
   Uses
      At line 274 in file LCD_Function_Class.s
      At line 290 in file LCD_Function_Class.s
      At line 318 in file LCD_Function_Class.s
      At line 365 in file LCD_Function_Class.s
      At line 403 in file LCD_Function_Class.s
      At line 445 in file LCD_Function_Class.s
      At line 460 in file LCD_Function_Class.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

SYSCTL_RCGCGPIO 400FE608

Symbol: SYSCTL_RCGCGPIO
   Definitions
      At line 45 in file LCD_Function_Class.s
   Uses
      At line 164 in file LCD_Function_Class.s
Comment: SYSCTL_RCGCGPIO used once
SYSCTL_RCGCSSI 400FE61C

Symbol: SYSCTL_RCGCSSI
   Definitions
      At line 46 in file LCD_Function_Class.s
   Uses
      At line 188 in file LCD_Function_Class.s
Comment: SYSCTL_RCGCSSI used once
22 symbols
381 symbols in table
