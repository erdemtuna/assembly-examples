


ARM Macro Assembler    Page 1 


    1 00000000         ; Sets up SSI0, PA6, PA to work with the
    2 00000000         
    3 00000000         ; Pin connections
    4 00000000         ; ------------------------------------------
    5 00000000         ; Signal        (Nokia 5110) TIVA Pin
    6 00000000         ; ------------------------------------------
    7 00000000         ; 3.3V          (VCC, pin 1) power
    8 00000000         ; Ground        (GND, pin 2) ground
    9 00000000         ; SSI0Fss       (SCE, pin 3) connected to PA3
   10 00000000         ; Reset         (RST, pin 4) connected to PA7
   11 00000000         ; Data/Command  (D/C, pin 5) connected to PA6
   12 00000000         ; SSI0Tx        (DN,  pin 6) connected to PA5
   13 00000000         ; SSI0Clk       (SCLK, pin 7) connected to PA2
   14 00000000         ; back light    (LED, pin 8) connected to potentiometer
   15 00000000         
   16 00000000         ;GPIO Registers
   17 00000000 400043FC 
                       GPIO_PORTA_DATA
                               EQU              0x400043FC  ; Port A Data
   18 00000000 40004010 
                       GPIO_PORTA_IM
                               EQU              0x40004010  ; Interrupt Mask
   19 00000000 40004400 
                       GPIO_PORTA_DIR
                               EQU              0x40004400  ; Port Direction
   20 00000000 40004420 
                       GPIO_PORTA_AFSEL
                               EQU              0x40004420  ; Alt Function enab
                                                            le
   21 00000000 4000451C 
                       GPIO_PORTA_DEN
                               EQU              0x4000451C  ; Digital Enable
   22 00000000 40004528 
                       GPIO_PORTA_AMSEL
                               EQU              0x40004528  ; Analog enable
   23 00000000 4000452C 
                       GPIO_PORTA_PCTL
                               EQU              0x4000452C  ; Alternate Functio
                                                            ns
   24 00000000         
   25 00000000 400053FC 
                       GPIO_PORTB_DATA
                               EQU              0x400053FC  ; Port B Data
   26 00000000 40005010 
                       GPIO_PORTB_IM
                               EQU              0x40005010  ; Interrupt Mask
   27 00000000 40005400 
                       GPIO_PORTB_DIR
                               EQU              0x40005400  ; Port Direction
   28 00000000 40005420 
                       GPIO_PORTB_AFSEL
                               EQU              0x40005420  ; Alt Function enab
                                                            le
   29 00000000 4000551C 
                       GPIO_PORTB_DEN
                               EQU              0x4000551C  ; Digital Enable
   30 00000000 40005528 
                       GPIO_PORTB_AMSEL
                               EQU              0x40005528  ; Analog enable



ARM Macro Assembler    Page 2 


   31 00000000 4000552C 
                       GPIO_PORTB_PCTL
                               EQU              0x4000552C  ; Alternate Functio
                                                            ns
   32 00000000         
   33 00000000         ;SSI Registers
   34 00000000 40008000 
                       SSI0_CR0
                               EQU              0x40008000
   35 00000000 40008004 
                       SSI0_CR1
                               EQU              0x40008004
   36 00000000 40008008 
                       SSI0_DR EQU              0x40008008
   37 00000000 4000800C 
                       SSI0_SR EQU              0x4000800C
   38 00000000 40008010 
                       SSI0_CPSR
                               EQU              0x40008010
   39 00000000 40008FC8 
                       SSI0_CC EQU              0x40008FC8
   40 00000000         
   41 00000000         ;System Registers
   42 00000000 400FE608 
                       SYSCTL_RCGCGPIO
                               EQU              0x400FE608  ; GPIO Gate Control
                                                            
   43 00000000 400FE61C 
                       SYSCTL_RCGCSSI
                               EQU              0x400FE61C  ; SSI Gate Control
   44 00000000         
   45 00000000                 AREA             timer, CODE, READONLY
   46 00000000                 THUMB
   47 00000000         
   48 00000000                 EXPORT           Nokia_Init
   49 00000000                 EXPORT           TxByte
   50 00000000                 EXPORT           OutImgNokia
   51 00000000                 EXPORT           SetCoordinate
   52 00000000                 EXPORT           OutCharNokia
   53 00000000                 EXPORT           OutStrNokia
   54 00000000                 EXPORT           ClearNokia
   55 00000000         
   56 00000000         ; ASCII table for characters to be displayed
   57 00000000 00 00 00 
              00 00    ASCII   DCB              0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ;// 20
   58 00000005 00 00 5F 
              00 00            DCB              0x00, 0x00, 0x5f, 0x00, 0x00 
                                                            ;// 21 !
   59 0000000A 00 07 00 
              07 00            DCB              0x00, 0x07, 0x00, 0x07, 0x00 
                                                            ;// 22 "
   60 0000000F 14 7F 14 
              7F 14            DCB              0x14, 0x7f, 0x14, 0x7f, 0x14 
                                                            ;// 23 #
   61 00000014 24 2A 7F 
              2A 12            DCB              0x24, 0x2a, 0x7f, 0x2a, 0x12 
                                                            ;// 24 $
   62 00000019 23 13 08 



ARM Macro Assembler    Page 3 


              64 62            DCB              0x23, 0x13, 0x08, 0x64, 0x62 
                                                            ;// 25 %
   63 0000001E 36 49 55 
              22 50            DCB              0x36, 0x49, 0x55, 0x22, 0x50 
                                                            ;// 26 &
   64 00000023 00 05 03 
              00 00            DCB              0x00, 0x05, 0x03, 0x00, 0x00 
                                                            ;// 27 '
   65 00000028 00 1C 22 
              41 00            DCB              0x00, 0x1c, 0x22, 0x41, 0x00 
                                                            ;// 28 (
   66 0000002D 00 41 22 
              1C 00            DCB              0x00, 0x41, 0x22, 0x1c, 0x00 
                                                            ;// 29 )
   67 00000032 14 08 3E 
              08 14            DCB              0x14, 0x08, 0x3e, 0x08, 0x14 
                                                            ;// 2a *
   68 00000037 08 08 3E 
              08 08            DCB              0x08, 0x08, 0x3e, 0x08, 0x08 
                                                            ;// 2b +
   69 0000003C 00 50 30 
              00 00            DCB              0x00, 0x50, 0x30, 0x00, 0x00 
                                                            ;// 2c ,
   70 00000041 08 08 08 
              08 08            DCB              0x08, 0x08, 0x08, 0x08, 0x08 
                                                            ;// 2d -
   71 00000046 00 60 60 
              00 00            DCB              0x00, 0x60, 0x60, 0x00, 0x00 
                                                            ;// 2e .
   72 0000004B 20 10 08 
              04 02            DCB              0x20, 0x10, 0x08, 0x04, 0x02 
                                                            ;// 2f /
   73 00000050 3E 51 49 
              45 3E            DCB              0x3e, 0x51, 0x49, 0x45, 0x3e 
                                                            ;// 30 0
   74 00000055 00 42 7F 
              40 00            DCB              0x00, 0x42, 0x7f, 0x40, 0x00 
                                                            ;// 31 1
   75 0000005A 42 61 51 
              49 46            DCB              0x42, 0x61, 0x51, 0x49, 0x46 
                                                            ;// 32 2
   76 0000005F 21 41 45 
              4B 31            DCB              0x21, 0x41, 0x45, 0x4b, 0x31 
                                                            ;// 33 3
   77 00000064 18 14 12 
              7F 10            DCB              0x18, 0x14, 0x12, 0x7f, 0x10 
                                                            ;// 34 4
   78 00000069 27 45 45 
              45 39            DCB              0x27, 0x45, 0x45, 0x45, 0x39 
                                                            ;// 35 5
   79 0000006E 3C 4A 49 
              49 30            DCB              0x3c, 0x4a, 0x49, 0x49, 0x30 
                                                            ;// 36 6
   80 00000073 01 71 09 
              05 03            DCB              0x01, 0x71, 0x09, 0x05, 0x03 
                                                            ;// 37 7
   81 00000078 36 49 49 
              49 36            DCB              0x36, 0x49, 0x49, 0x49, 0x36 
                                                            ;// 38 8



ARM Macro Assembler    Page 4 


   82 0000007D 06 49 49 
              29 1E            DCB              0x06, 0x49, 0x49, 0x29, 0x1e 
                                                            ;// 39 9
   83 00000082 00 36 36 
              00 00            DCB              0x00, 0x36, 0x36, 0x00, 0x00 
                                                            ;// 3a :
   84 00000087 00 56 36 
              00 00            DCB              0x00, 0x56, 0x36, 0x00, 0x00 
                                                            ;// 3b ;
   85 0000008C 08 14 22 
              41 00            DCB              0x08, 0x14, 0x22, 0x41, 0x00 
                                                            ;// 3c <
   86 00000091 14 14 14 
              14 14            DCB              0x14, 0x14, 0x14, 0x14, 0x14 
                                                            ;// 3d =
   87 00000096 00 41 22 
              14 08            DCB              0x00, 0x41, 0x22, 0x14, 0x08 
                                                            ;// 3e >
   88 0000009B 02 01 51 
              09 06            DCB              0x02, 0x01, 0x51, 0x09, 0x06 
                                                            ;// 3f ?
   89 000000A0 32 49 79 
              41 3E            DCB              0x32, 0x49, 0x79, 0x41, 0x3e 
                                                            ;// 40 @
   90 000000A5 7E 11 11 
              11 7E            DCB              0x7e, 0x11, 0x11, 0x11, 0x7e 
                                                            ;// 41 A
   91 000000AA 7F 49 49 
              49 36            DCB              0x7f, 0x49, 0x49, 0x49, 0x36 
                                                            ;// 42 B
   92 000000AF 3E 41 41 
              41 22            DCB              0x3e, 0x41, 0x41, 0x41, 0x22 
                                                            ;// 43 C
   93 000000B4 7F 41 41 
              22 1C            DCB              0x7f, 0x41, 0x41, 0x22, 0x1c 
                                                            ;// 44 D
   94 000000B9 7F 49 49 
              49 41            DCB              0x7f, 0x49, 0x49, 0x49, 0x41 
                                                            ;// 45 E
   95 000000BE 7F 09 09 
              09 01            DCB              0x7f, 0x09, 0x09, 0x09, 0x01 
                                                            ;// 46 F
   96 000000C3 3E 41 49 
              49 7A            DCB              0x3e, 0x41, 0x49, 0x49, 0x7a 
                                                            ;// 47 G
   97 000000C8 7F 08 08 
              08 7F            DCB              0x7f, 0x08, 0x08, 0x08, 0x7f 
                                                            ;// 48 H
   98 000000CD 00 41 7F 
              41 00            DCB              0x00, 0x41, 0x7f, 0x41, 0x00 
                                                            ;// 49 I
   99 000000D2 20 40 41 
              3F 01            DCB              0x20, 0x40, 0x41, 0x3f, 0x01 
                                                            ;// 4a J
  100 000000D7 7F 08 14 
              22 41            DCB              0x7f, 0x08, 0x14, 0x22, 0x41 
                                                            ;// 4b K
  101 000000DC 7F 40 40 
              40 40            DCB              0x7f, 0x40, 0x40, 0x40, 0x40 



ARM Macro Assembler    Page 5 


                                                            ;// 4c L
  102 000000E1 7F 02 0C 
              02 7F            DCB              0x7f, 0x02, 0x0c, 0x02, 0x7f 
                                                            ;// 4d M
  103 000000E6 7F 04 08 
              10 7F            DCB              0x7f, 0x04, 0x08, 0x10, 0x7f 
                                                            ;// 4e N
  104 000000EB 3E 41 41 
              41 3E            DCB              0x3e, 0x41, 0x41, 0x41, 0x3e 
                                                            ;// 4f O
  105 000000F0 7F 09 09 
              09 06            DCB              0x7f, 0x09, 0x09, 0x09, 0x06 
                                                            ;// 50 P
  106 000000F5 3E 41 51 
              21 5E            DCB              0x3e, 0x41, 0x51, 0x21, 0x5e 
                                                            ;// 51 Q
  107 000000FA 7F 09 19 
              29 46            DCB              0x7f, 0x09, 0x19, 0x29, 0x46 
                                                            ;// 52 R
  108 000000FF 46 49 49 
              49 31            DCB              0x46, 0x49, 0x49, 0x49, 0x31 
                                                            ;// 53 S
  109 00000104 01 01 7F 
              01 01            DCB              0x01, 0x01, 0x7f, 0x01, 0x01 
                                                            ;// 54 T
  110 00000109 3F 40 40 
              40 3F            DCB              0x3f, 0x40, 0x40, 0x40, 0x3f 
                                                            ;// 55 U
  111 0000010E 1F 20 40 
              20 1F            DCB              0x1f, 0x20, 0x40, 0x20, 0x1f 
                                                            ;// 56 V
  112 00000113 3F 40 38 
              40 3F            DCB              0x3f, 0x40, 0x38, 0x40, 0x3f 
                                                            ;// 57 W
  113 00000118 63 14 08 
              14 63            DCB              0x63, 0x14, 0x08, 0x14, 0x63 
                                                            ;// 58 X
  114 0000011D 07 08 70 
              08 07            DCB              0x07, 0x08, 0x70, 0x08, 0x07 
                                                            ;// 59 Y
  115 00000122 61 51 49 
              45 43            DCB              0x61, 0x51, 0x49, 0x45, 0x43 
                                                            ;// 5a Z
  116 00000127 1F 1F 1F 
              1F 1F            DCB              0x1F, 0x1F, 0x1F, 0x1F, 0x1F 
                                                            ;// 5b [ BATTLESHIP
                                                            
  117 0000012C 02 04 08 
              10 20            DCB              0x02, 0x04, 0x08, 0x10, 0x20 
                                                            ;// 5c '\'
  118 00000131 00 41 41 
              7F 00            DCB              0x00, 0x41, 0x41, 0x7f, 0x00 
                                                            ;// 5d ]
  119 00000136 04 02 01 
              02 04            DCB              0x04, 0x02, 0x01, 0x02, 0x04 
                                                            ;// 5e ^
  120 0000013B 40 40 40 
              40 40            DCB              0x40, 0x40, 0x40, 0x40, 0x40 
                                                            ;// 5f _



ARM Macro Assembler    Page 6 


  121 00000140 00 01 02 
              04 00            DCB              0x00, 0x01, 0x02, 0x04, 0x00 
                                                            ;// 60 `
  122 00000145 20 54 54 
              54 78            DCB              0x20, 0x54, 0x54, 0x54, 0x78 
                                                            ;// 61 a
  123 0000014A 7F 48 44 
              44 38            DCB              0x7f, 0x48, 0x44, 0x44, 0x38 
                                                            ;// 62 b
  124 0000014F 38 44 44 
              44 20            DCB              0x38, 0x44, 0x44, 0x44, 0x20 
                                                            ;// 63 c
  125 00000154 38 44 44 
              48 7F            DCB              0x38, 0x44, 0x44, 0x48, 0x7f 
                                                            ;// 64 d
  126 00000159 38 54 54 
              54 18            DCB              0x38, 0x54, 0x54, 0x54, 0x18 
                                                            ;// 65 e
  127 0000015E 08 7E 09 
              01 02            DCB              0x08, 0x7e, 0x09, 0x01, 0x02 
                                                            ;// 66 f
  128 00000163 0C 52 52 
              52 3E            DCB              0x0c, 0x52, 0x52, 0x52, 0x3e 
                                                            ;// 67 g
  129 00000168 7F 08 04 
              04 78            DCB              0x7f, 0x08, 0x04, 0x04, 0x78 
                                                            ;// 68 h
  130 0000016D 00 44 7D 
              40 00            DCB              0x00, 0x44, 0x7d, 0x40, 0x00 
                                                            ;// 69 i
  131 00000172 20 40 44 
              3D 00            DCB              0x20, 0x40, 0x44, 0x3d, 0x00 
                                                            ;// 6a j
  132 00000177 7F 10 28 
              44 00            DCB              0x7f, 0x10, 0x28, 0x44, 0x00 
                                                            ;// 6b k
  133 0000017C 00 41 7F 
              40 00            DCB              0x00, 0x41, 0x7f, 0x40, 0x00 
                                                            ;// 6c l
  134 00000181 7C 04 18 
              04 78            DCB              0x7c, 0x04, 0x18, 0x04, 0x78 
                                                            ;// 6d m
  135 00000186 7C 08 04 
              04 78            DCB              0x7c, 0x08, 0x04, 0x04, 0x78 
                                                            ;// 6e n
  136 0000018B 38 44 44 
              44 38            DCB              0x38, 0x44, 0x44, 0x44, 0x38 
                                                            ;// 6f o
  137 00000190 7C 14 14 
              14 08            DCB              0x7c, 0x14, 0x14, 0x14, 0x08 
                                                            ;// 70 p
  138 00000195 08 14 14 
              18 7C            DCB              0x08, 0x14, 0x14, 0x18, 0x7c 
                                                            ;// 71 q
  139 0000019A 7C 08 04 
              04 08            DCB              0x7c, 0x08, 0x04, 0x04, 0x08 
                                                            ;// 72 r
  140 0000019F 48 54 54 
              54 20            DCB              0x48, 0x54, 0x54, 0x54, 0x20 



ARM Macro Assembler    Page 7 


                                                            ;// 73 s
  141 000001A4 04 3F 44 
              40 20            DCB              0x04, 0x3f, 0x44, 0x40, 0x20 
                                                            ;// 74 t
  142 000001A9 3C 40 40 
              20 7C            DCB              0x3c, 0x40, 0x40, 0x20, 0x7c 
                                                            ;// 75 u
  143 000001AE 1C 20 40 
              20 1C            DCB              0x1c, 0x20, 0x40, 0x20, 0x1c 
                                                            ;// 76 v
  144 000001B3 3C 40 30 
              40 3C            DCB              0x3c, 0x40, 0x30, 0x40, 0x3c 
                                                            ;// 77 w
  145 000001B8 44 28 10 
              28 44            DCB              0x44, 0x28, 0x10, 0x28, 0x44 
                                                            ;// 78 x
  146 000001BD 0C 50 50 
              50 3C            DCB              0x0c, 0x50, 0x50, 0x50, 0x3c 
                                                            ;// 79 y
  147 000001C2 44 64 54 
              4C 44            DCB              0x44, 0x64, 0x54, 0x4c, 0x44 
                                                            ;// 7a z
  148 000001C7 1F 11 11 
              11 1F            DCB              0x1F, 0x11, 0x11, 0x11, 0x1F 
                                                            ;// 7b { CIVILIAN
  149 000001CC 00 00 7F 
              00 00            DCB              0x00, 0x00, 0x7f, 0x00, 0x00 
                                                            ;// 7c |
  150 000001D1 00 41 36 
              08 00            DCB              0x00, 0x41, 0x36, 0x08, 0x00 
                                                            ;// 7d }
  151 000001D6 10 08 08 
              10 08            DCB              0x10, 0x08, 0x08, 0x10, 0x08 
                                                            ;// 7e ~
  152 000001DB 00              SPACE            1           ; added for padding
                                                            
  153 000001DC         ;"
  154 000001DC         ;DCB  0XFF, 0x81, 0xfd, 0xd5, 0xd5, 0x9a, 0x81, 0xff ;//
                        Battleship
  155 000001DC         ;DCB  0xFF, 0x81, 0xFD, 0xC5, 0xC5, 0xA9, 0x81, 0XFF ;//
                        Civilianship
  156 000001DC         ;*******************************************************
                       **********
  157 000001DC         ; Initializes Nokia display
  158 000001DC         Nokia_Init
  159 000001DC B500            PUSH             {LR}
  160 000001DE         ;Setup GPIO
  161 000001DE 4994            LDR              R1, =SYSCTL_RCGCGPIO 
                                                            ; start GPIO clock
  162 000001E0 6808            LDR              R0, [R1]
  163 000001E2 F040 0001       ORR              R0, #0x1    ; set bit 0 
  164 000001E6 6008            STR              R0, [R1]
  165 000001E8 BF00            NOP                          ; allow clock to se
                                                            ttle
  166 000001EA BF00            NOP
  167 000001EC BF00            NOP
  168 000001EE 4991            LDR              R1,=GPIO_PORTA_DIR ; make PA2,3
                                                            ,5,6,7 output
  169 000001F0 F04F 00EC       LDR              R0, = 2_11101100 ; and make PA4



ARM Macro Assembler    Page 8 


                                                             input
  170 000001F4 6008            STR              R0,[R1]
  171 000001F6 4990            LDR              R1,=GPIO_PORTA_AFSEL ; enable a
                                                            lt funct on PA2,3,4
                                                            ,5
  172 000001F8 F04F 003C       MOV              R0, #0x3C
  173 000001FC 6008            STR              R0,[R1]
  174 000001FE 498F            LDR              R1,=GPIO_PORTA_DEN ; enable dig
                                                            ital I/O at PA2,3,4
                                                            ,5,6,7
  175 00000200 F04F 00FC       MOV              R0, #0xFC
  176 00000204 6008            STR              R0,[R1]
  177 00000206 498E            LDR              R1,=GPIO_PORTA_PCTL ; configure
                                                             PA2,3,4,5 as SSI
  178 00000208 488E            LDR              R0, = 0x00222200
  179 0000020A 6008            STR              R0,[R1]
  180 0000020C 498E            LDR              R1,=GPIO_PORTA_AMSEL ; disable 
                                                            analog functionalit
                                                            y
  181 0000020E F04F 0000       MOV              R0, #0x0
  182 00000212 6008            STR              R0,[R1]
  183 00000214         
  184 00000214         ;Setup SSI 
  185 00000214 498D            LDR              R1,=SYSCTL_RCGCSSI 
                                                            ; start SSI clock
  186 00000216 6808            LDR              R0,[R1]
  187 00000218 F04F 0001       MOV              R0, #0x1    ; set bit 0 for SSI
                                                            0
  188 0000021C 6008            STR              R0,[R1]
  189 0000021E         ; small delay
  190 0000021E F04F 000F       MOV              R0,#0x0F
  191 00000222         waitSSIClk                           ; allow clock to se
                                                            ttle
  192 00000222 1E40            SUBS             R0,R0,#0x01
  193 00000224 D1FD            BNE              waitSSIClk
  194 00000226         
  195 00000226 498A            LDR              R1,=SSI0_CR1 ; disable SSI duri
                                                            ng setup and also s
                                                            et to Master
  196 00000228 6808            LDR              R0, [R1]    ; clear bit 1 and  
                                                            clear bit 2 (you ca
                                                            n clear all bits)
  197 0000022A F020 0006       BIC              R0, #0x06
  198 0000022E 6008            STR              R0,[R1]
  199 00000230         
  200 00000230         ; Configure baud rate PIOSC=16MHz,Baud=2MHz,CPSDVSR=4,SC
                       R=1
  201 00000230         ; BR=SysClk/(CPSDVSR * (1 + SCR))
  202 00000230 4988            LDR              R1,=SSI0_CC ; use PIOSC (16MHz)
                                                              
  203 00000232 6808            LDR              R0, [R1]    ; set bits 3:0 of t
                                                            he SSICC to 0x5 
  204 00000234 F040 0005       ORR              R0, #0x05
  205 00000238 6008            STR              R0,[R1]
  206 0000023A 4987            LDR              R1,=SSI0_CR0 ; set SCR bits to 
                                                            0x01
  207 0000023C 6808            LDR              R0,[R1]
  208 0000023E         ;  ________________    ;
  209 0000023E 6008            STR              R0,[R1]



ARM Macro Assembler    Page 9 


  210 00000240 4986            LDR              R1,=SSI0_CPSR ; set CPSDVSR (pr
                                                            escale) to 0x04
  211 00000242 F04F 0004       MOV              R0, #0x04
  212 00000246 6008            STR              R0,[R1]
  213 00000248 4983            LDR              R1,=SSI0_CR0 ; clear SPH,SPO
  214 0000024A 6808            LDR              R0,[R1]     ; choose Freescale 
                                                            frame format
  215 0000024C F020 0030       BIC              R0, #0x30   ; clear bits 5:4  
  216 00000250 F040 0007       ORR              R0, #0x7    ; choose 8-bit data
                                                             (set DSS bits to 0
                                                            x07)
  217 00000254 6008            STR              R0,[R1]
  218 00000256 497E            LDR              R1,=SSI0_CR1 ; enable SSI
  219 00000258 6808            LDR              R0,[R1]
  220 0000025A F040 0002       ORR              R0, #0x02   ; set bit 1
  221 0000025E 6008            STR              R0,[R1]
  222 00000260         ; DC = PA7
  223 00000260         ; Reset LCD memory - reset already low
  224 00000260         ; ensure reset is low
  225 00000260 497F            LDR              R1,=GPIO_PORTA_DATA
  226 00000262 6808            LDR              R0, [R1]    ; clear reset(PA7) 
                                                             
  227 00000264 F020 0080       BIC              R0, #0x80
  228 00000268 6008            STR              R0,[R1]
  229 0000026A         
  230 0000026A F04F 000A       MOV              R0,#10
  231 0000026E         delReset
  232 0000026E 1E40            SUBS             R0,R0,#1
  233 00000270 D1FD            BNE              delReset
  234 00000272         
  235 00000272 497B            LDR              R1,=GPIO_PORTA_DATA ; 
  236 00000274 6808            LDR              R0, [R1]    ; set reset(PA7)
  237 00000276 F040 0080       ORR              R0, #0x80
  238 0000027A 6008            STR              R0,[R1]     ;
  239 0000027C         
  240 0000027C         ; Setup LCD
  241 0000027C 4978            LDR              R1,=GPIO_PORTA_DATA ; set PA6 l
                                                            ow for Command
  242 0000027E 6808            LDR              R0,[R1]
  243 00000280 F020 0040       BIC              R0, #0x40
  244 00000284 6008            STR              R0,[R1]
  245 00000286         
  246 00000286         ;chip active (PD=0)
  247 00000286         ;horizontal addressing (V=0)
  248 00000286         ;extended instruction set (H=1)
  249 00000286 F04F 0521       MOV              R5,#0x21
  250 0000028A F7FF FFFE       BL               TxByte
  251 0000028E         ;set contrast
  252 0000028E F04F 05B8       MOV              R5,#0xB8
  253 00000292 F7FF FFFE       BL               TxByte
  254 00000296         ;set temp coefficient
  255 00000296 F04F 0504       MOV              R5,#0x04
  256 0000029A F7FF FFFE       BL               TxByte
  257 0000029E         ;set bias 1:48: try 0x13 or 0x14
  258 0000029E F04F 0514       MOV              R5,#0x14
  259 000002A2 F7FF FFFE       BL               TxByte
  260 000002A6         ;change H=0
  261 000002A6 F04F 0520       MOV              R5,#0x20
  262 000002AA F7FF FFFE       BL               TxByte



ARM Macro Assembler    Page 10 


  263 000002AE         ;set control mode to normal
  264 000002AE F04F 050C       MOV              R5,#0x0C
  265 000002B2 F7FF FFFE       BL               TxByte
  266 000002B6         ; clear screen
  267 000002B6         ; screen memory is undefined after startup
  268 000002B6 F7FF FFFE       BL               ClearNokia
  269 000002BA         
  270 000002BA         waitCMDDone
  271 000002BA 496A            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  272 000002BC 6808            LDR              R0,[R1]
  273 000002BE F010 0010       ANDS             R0,R0,#0x10
  274 000002C2 D1FA            BNE              waitCMDDone
  275 000002C4         
  276 000002C4 F85D EB04       POP{LR}
  277 000002C8 4770            BX               LR
  278 000002CA         ;*******************************************************
                       **********  
  279 000002CA         
  280 000002CA         ;----------------------------------
  281 000002CA         ; Send 8 bits , a byte, to screen.
  282 000002CA         ; Pass data with R5.
  283 000002CA         ; Edits R0, R1.
  284 000002CA         ;----------------------------------
  285 000002CA         TxByte
  286 000002CA B403            PUSH             {R0-R1}
  287 000002CC 4965            LDR              R1,=SSI0_SR
  288 000002CE         
  289 000002CE         waitFIFOnotFull
  290 000002CE 6808            LDR              R0,[R1]
  291 000002D0 F010 0002       ANDS             R0,R0,#0x02
  292 000002D4 D0FB            BEQ              waitFIFOnotFull ; wait if FIFO 
                                                            is full
  293 000002D6 4964            LDR              R1,=SSI0_DR
  294 000002D8 700D            STRB             R5,[R1]
  295 000002DA BC03            POP              {R0-R1}
  296 000002DC 4770            BX               LR
  297 000002DE         ;*******************************************************
                       **********   
  298 000002DE         
  299 000002DE         ;*******************************************************
                       **********
  300 000002DE         ; Send Image to Nokia routine 
  301 000002DE         OutImgNokia
  302 000002DE B51F            PUSH             {R0-R4,LR}
  303 000002E0 B420            PUSH             {R5}        ; save Img address
  304 000002E2 495F            LDR              R1,=GPIO_PORTA_DATA ; set PA6 l
                                                            ow for Command
  305 000002E4 6808            LDR              R0,[R1]
  306 000002E6 F020 0040       BIC              R0,#0x40
  307 000002EA 6008            STR              R0,[R1]
  308 000002EC F04F 0520       MOV              R5,#0x20    ; ensure H=0
  309 000002F0 F7FF FFFE       BL               TxByte
  310 000002F4 F04F 0540       MOV              R5,#0x40    ; set Y address to 
                                                            0
  311 000002F8 F7FF FFFE       BL               TxByte
  312 000002FC F04F 0580       MOV              R5,#0x80    ; set X address to 
                                                            0
  313 00000300 F7FF FFFE       BL               TxByte



ARM Macro Assembler    Page 11 


  314 00000304         waitImgReady
  315 00000304 4957            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  316 00000306 6808            LDR              R0,[R1]
  317 00000308 F010 0010       ANDS             R0,R0,#0x10
  318 0000030C D1FA            BNE              waitImgReady
  319 0000030E 4954            LDR              R1,=GPIO_PORTA_DATA ; ready: se
                                                            t PA6 high for Data
                                                            
  320 00000310 6808            LDR              R0,[R1]
  321 00000312 F040 0040       ORR              R0,#0x40
  322 00000316 6008            STR              R0,[R1]
  323 00000318 BC20            POP              {R5}
  324 0000031A F44F 70FC       MOV              R0,#504     ; 504 bytes in full
                                                             image
  325 0000031E 4629            MOV              R1,R5       ; put img address i
                                                            n R1
  326 00000320         sendNxtByteNokia
  327 00000320 F811 5B01       LDRB             R5,[R1],#1  ; load R5 with byte
                                                            , post inc address
  328 00000324 F7FF FFFE       BL               TxByte
  329 00000328 3801            SUBS             R0,#1
  330 0000032A D1F9            BNE              sendNxtByteNokia
  331 0000032C E8BD 401F       POP              {R0-R4,LR}
  332 00000330 4770            BX               LR
  333 00000332         ;*******************************************************
                       **********
  334 00000332         
  335 00000332         ;*******************************************************
                       **********
  336 00000332         
  337 00000332         ;------------------------------------
  338 00000332         ; Set coordinates (x,y) of the screen
  339 00000332         ; Pass x coordinate by R0.
  340 00000332         ; Pass y coordinate by R1.
  341 00000332         ; Edits R0, R1.
  342 00000332         ;------------------------------------
  343 00000332         SetCoordinate
  344 00000332         ; DC is left high, so data can be sent after
  345 00000332 B53C            PUSH             {R2-R5,LR}
  346 00000334 B403            PUSH             {R0-R1}
  347 00000336 494A            LDR              R1,=GPIO_PORTA_DATA ; set PA6 l
                                                            ow for Command
  348 00000338 6808            LDR              R0,[R1]
  349 0000033A F020 0040       BIC              R0,#0x40
  350 0000033E 6008            STR              R0,[R1]
  351 00000340 F04F 0520       MOV              R5,#0x20    ; ensure H=0
  352 00000344 F7FF FFFE       BL               TxByte
  353 00000348 BC03            POP              {R0-R1}
  354 0000034A 460D            MOV              R5,R1       ; set Y address
  355 0000034C F045 0540       ORR              R5,#0x40
  356 00000350 F7FF FFFE       BL               TxByte
  357 00000354 4605            MOV              R5,R0       ; set X address
  358 00000356 F045 0580       ORR              R5,#0x80
  359 0000035A F7FF FFFE       BL               TxByte
  360 0000035E         
  361 0000035E         waitEndOfTransmission
  362 0000035E 4941            LDR              R1,=SSI0_SR
  363 00000360 6808            LDR              R0,[R1]



ARM Macro Assembler    Page 12 


  364 00000362 F010 0010       ANDS             R0,R0,#0x10
  365 00000366 D1FA            BNE              waitEndOfTransmission ; wait if
                                                             transmission conti
                                                            nues
  366 00000368 493D            LDR              R1,=GPIO_PORTA_DATA ; set PA6 h
                                                            igh for Data
  367 0000036A 6808            LDR              R0,[R1]
  368 0000036C F040 0040       ORR              R0,#0x40
  369 00000370 6008            STR              R0,[R1]
  370 00000372 E8BD 403C       POP              {R2-R5,LR}
  371 00000376 4770            BX               LR
  372 00000378         ;*******************************************************
                       **********
  373 00000378         
  374 00000378         ;*******************************************************
                       **********
  375 00000378         ; output ASCII character to LCD screen
  376 00000378         ; ASCII hex value passed via R5
  377 00000378         ; This routine assumes coordinates have already been set
                       
  378 00000378         OutCharNokia
  379 00000378 B51F            PUSH             {R0-R4,LR}
  380 0000037A 4939            LDR              R1,=GPIO_PORTA_DATA ; set PA6 h
                                                            igh for Data
  381 0000037C 6808            LDR              R0,[R1]
  382 0000037E F040 0040       ORR              R0,#0x40
  383 00000382 6008            STR              R0,[R1]
  384 00000384 4939            LDR              R1,=ASCII   ; load address of A
                                                            SCII table
  385 00000386 F1A5 0220       SUB              R2,R5,#0x20 ; calculate offset 
                                                            of char
  386 0000038A F04F 0305       MOV              R3,#0x05
  387 0000038E FB02 F203       MUL              R2,R2,R3
  388 00000392 4411            ADD              R1,R1,R2
  389 00000394 B420            PUSH             {R5}        ; save state of R5
  390 00000396 F04F 0005       MOV              R0,#0x05    ; 5 bytes in every 
                                                            char
  391 0000039A F04F 0200       MOV              R2,#0x00    ; 1 empty column be
                                                            tween chars
  392 0000039E         sendCharByte
  393 0000039E F811 5B01       LDRB             R5,[R1],#1
  394 000003A2 F7FF FFFE       BL               TxByte      ; send each byte of
                                                             char
  395 000003A6 1E40            SUBS             R0,R0,#1
  396 000003A8 D1F9            BNE              sendCharByte
  397 000003AA 4615            MOV              R5,R2
  398 000003AC         ;BL  TxByte    ; tack space on after char
  399 000003AC         waitCharDone
  400 000003AC 492D            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  401 000003AE 6808            LDR              R0,[R1]
  402 000003B0 F010 0010       ANDS             R0,R0,#0x10
  403 000003B4 D1FA            BNE              waitCharDone
  404 000003B6 BC20            POP              {R5}
  405 000003B8 E8BD 401F       POP              {R0-R4,LR}
  406 000003BC 4770            BX               LR
  407 000003BE         ;*******************************************************
                       ********** 
  408 000003BE         



ARM Macro Assembler    Page 13 


  409 000003BE         ;*******************************************************
                       **********
  410 000003BE         ; output ASCII string to LCD screen
  411 000003BE         ; Address of start of message passed via R5
  412 000003BE         ; Ended using EOT character 0x04
  413 000003BE         OutStrNokia
  414 000003BE E92D 5FFF       PUSH             {R0-R12,LR}
  415 000003C2 4629            MOV              R1,R5
  416 000003C4         nextStrChar
  417 000003C4 F811 5B01       LDRB             R5,[R1],#1
  418 000003C8 2D04            CMP              R5,#0x04
  419 000003CA D002            BEQ              doneStrNokia
  420 000003CC F7FF FFFE       BL               OutCharNokia
  421 000003D0 E7F8            B                nextStrChar
  422 000003D2         doneStrNokia
  423 000003D2 E8BD 5FFF       POP              {R0-R12,LR}
  424 000003D6 4770            BX               LR
  425 000003D8         ;*******************************************************
                       **********
  426 000003D8         
  427 000003D8         ;*******************************************************
                       **********
  428 000003D8         ; clear LCD screen
  429 000003D8         ClearNokia
  430 000003D8 B53F            PUSH             {R0-R5,LR}
  431 000003DA 4921            LDR              R1,=GPIO_PORTA_DATA ; set PA6 l
                                                            ow for Command
  432 000003DC 6808            LDR              R0,[R1]
  433 000003DE F020 0040       BIC              R0,#0x40
  434 000003E2 6008            STR              R0,[R1]
  435 000003E4 F04F 0520       MOV              R5,#0x20    ; ensure H=0
  436 000003E8 F7FF FFFE       BL               TxByte
  437 000003EC F04F 0540       MOV              R5,#0x40    ; set Y address to 
                                                            0
  438 000003F0 F7FF FFFE       BL               TxByte
  439 000003F4 F04F 0580       MOV              R5,#0x80    ; set X address to 
                                                            0
  440 000003F8 F7FF FFFE       BL               TxByte
  441 000003FC         waitClrReady
  442 000003FC 4919            LDR              R1,=SSI0_SR ; wait until SSI is
                                                             done
  443 000003FE 6808            LDR              R0,[R1]
  444 00000400 F010 0010       ANDS             R0,R0,#0x10
  445 00000404 D1FA            BNE              waitClrReady
  446 00000406 4916            LDR              R1,=GPIO_PORTA_DATA ; set PA6 h
                                                            igh for Data
  447 00000408 6808            LDR              R0,[R1]
  448 0000040A F040 0040       ORR              R0,#0x40
  449 0000040E 6008            STR              R0,[R1]
  450 00000410 F44F 70FC       MOV              R0,#504     ; 504 bytes in full
                                                             image
  451 00000414 F04F 0500       MOV              R5,#0x00    ; load zeros to sen
                                                            d
  452 00000418         clrNxtNokia
  453 00000418 F7FF FFFE       BL               TxByte
  454 0000041C 3801            SUBS             R0,#1
  455 0000041E D1FB            BNE              clrNxtNokia
  456 00000420         waitClrDone
  457 00000420 4910            LDR              R1,=SSI0_SR ; wait until SSI is



ARM Macro Assembler    Page 14 


                                                             done
  458 00000422 6808            LDR              R0,[R1]
  459 00000424 F010 0010       ANDS             R0,R0,#0x10
  460 00000428 D1FA            BNE              waitClrDone
  461 0000042A E8BD 403F       POP              {R0-R5,LR}
  462 0000042E 4770            BX               LR
  463 00000430         ;*******************************************************
                       **********  
  464 00000430                 ALIGN
  465 00000430                 END
              400FE608 
              40004400 
              40004420 
              4000451C 
              4000452C 
              00222200 
              40004528 
              400FE61C 
              40008004 
              40008FC8 
              40008000 
              40008010 
              400043FC 
              4000800C 
              40008008 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\lcd_function_class.d -o.\objects\lcd_function_class.o
 -I.\RTE\_EE447-Project -ID:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Includ
e\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefin
e="__UVISION_VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listi
ngs\lcd_function_class.lst LCD_Function_Class.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ASCII 00000000

Symbol: ASCII
   Definitions
      At line 57 in file LCD_Function_Class.s
   Uses
      At line 384 in file LCD_Function_Class.s
Comment: ASCII used once
ClearNokia 000003D8

Symbol: ClearNokia
   Definitions
      At line 429 in file LCD_Function_Class.s
   Uses
      At line 54 in file LCD_Function_Class.s
      At line 268 in file LCD_Function_Class.s

Nokia_Init 000001DC

Symbol: Nokia_Init
   Definitions
      At line 158 in file LCD_Function_Class.s
   Uses
      At line 48 in file LCD_Function_Class.s
Comment: Nokia_Init used once
OutCharNokia 00000378

Symbol: OutCharNokia
   Definitions
      At line 378 in file LCD_Function_Class.s
   Uses
      At line 52 in file LCD_Function_Class.s
      At line 420 in file LCD_Function_Class.s

OutImgNokia 000002DE

Symbol: OutImgNokia
   Definitions
      At line 301 in file LCD_Function_Class.s
   Uses
      At line 50 in file LCD_Function_Class.s
Comment: OutImgNokia used once
OutStrNokia 000003BE

Symbol: OutStrNokia
   Definitions
      At line 413 in file LCD_Function_Class.s
   Uses
      At line 53 in file LCD_Function_Class.s
Comment: OutStrNokia used once
SetCoordinate 00000332

Symbol: SetCoordinate
   Definitions
      At line 343 in file LCD_Function_Class.s
   Uses
      At line 51 in file LCD_Function_Class.s
Comment: SetCoordinate used once
TxByte 000002CA



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: TxByte
   Definitions
      At line 285 in file LCD_Function_Class.s
   Uses
      At line 49 in file LCD_Function_Class.s
      At line 250 in file LCD_Function_Class.s
      At line 253 in file LCD_Function_Class.s
      At line 256 in file LCD_Function_Class.s
      At line 259 in file LCD_Function_Class.s
      At line 262 in file LCD_Function_Class.s
      At line 265 in file LCD_Function_Class.s
      At line 309 in file LCD_Function_Class.s
      At line 311 in file LCD_Function_Class.s
      At line 313 in file LCD_Function_Class.s
      At line 328 in file LCD_Function_Class.s
      At line 352 in file LCD_Function_Class.s
      At line 356 in file LCD_Function_Class.s
      At line 359 in file LCD_Function_Class.s
      At line 394 in file LCD_Function_Class.s
      At line 436 in file LCD_Function_Class.s
      At line 438 in file LCD_Function_Class.s
      At line 440 in file LCD_Function_Class.s
      At line 453 in file LCD_Function_Class.s

clrNxtNokia 00000418

Symbol: clrNxtNokia
   Definitions
      At line 452 in file LCD_Function_Class.s
   Uses
      At line 455 in file LCD_Function_Class.s
Comment: clrNxtNokia used once
delReset 0000026E

Symbol: delReset
   Definitions
      At line 231 in file LCD_Function_Class.s
   Uses
      At line 233 in file LCD_Function_Class.s
Comment: delReset used once
doneStrNokia 000003D2

Symbol: doneStrNokia
   Definitions
      At line 422 in file LCD_Function_Class.s
   Uses
      At line 419 in file LCD_Function_Class.s
Comment: doneStrNokia used once
nextStrChar 000003C4

Symbol: nextStrChar
   Definitions
      At line 416 in file LCD_Function_Class.s
   Uses
      At line 421 in file LCD_Function_Class.s
Comment: nextStrChar used once
sendCharByte 0000039E




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: sendCharByte
   Definitions
      At line 392 in file LCD_Function_Class.s
   Uses
      At line 396 in file LCD_Function_Class.s
Comment: sendCharByte used once
sendNxtByteNokia 00000320

Symbol: sendNxtByteNokia
   Definitions
      At line 326 in file LCD_Function_Class.s
   Uses
      At line 330 in file LCD_Function_Class.s
Comment: sendNxtByteNokia used once
timer 00000000

Symbol: timer
   Definitions
      At line 45 in file LCD_Function_Class.s
   Uses
      None
Comment: timer unused
waitCMDDone 000002BA

Symbol: waitCMDDone
   Definitions
      At line 270 in file LCD_Function_Class.s
   Uses
      At line 274 in file LCD_Function_Class.s
Comment: waitCMDDone used once
waitCharDone 000003AC

Symbol: waitCharDone
   Definitions
      At line 399 in file LCD_Function_Class.s
   Uses
      At line 403 in file LCD_Function_Class.s
Comment: waitCharDone used once
waitClrDone 00000420

Symbol: waitClrDone
   Definitions
      At line 456 in file LCD_Function_Class.s
   Uses
      At line 460 in file LCD_Function_Class.s
Comment: waitClrDone used once
waitClrReady 000003FC

Symbol: waitClrReady
   Definitions
      At line 441 in file LCD_Function_Class.s
   Uses
      At line 445 in file LCD_Function_Class.s
Comment: waitClrReady used once
waitEndOfTransmission 0000035E

Symbol: waitEndOfTransmission
   Definitions
      At line 361 in file LCD_Function_Class.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 365 in file LCD_Function_Class.s
Comment: waitEndOfTransmission used once
waitFIFOnotFull 000002CE

Symbol: waitFIFOnotFull
   Definitions
      At line 289 in file LCD_Function_Class.s
   Uses
      At line 292 in file LCD_Function_Class.s
Comment: waitFIFOnotFull used once
waitImgReady 00000304

Symbol: waitImgReady
   Definitions
      At line 314 in file LCD_Function_Class.s
   Uses
      At line 318 in file LCD_Function_Class.s
Comment: waitImgReady used once
waitSSIClk 00000222

Symbol: waitSSIClk
   Definitions
      At line 191 in file LCD_Function_Class.s
   Uses
      At line 193 in file LCD_Function_Class.s
Comment: waitSSIClk used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_AFSEL 40004420

Symbol: GPIO_PORTA_AFSEL
   Definitions
      At line 20 in file LCD_Function_Class.s
   Uses
      At line 171 in file LCD_Function_Class.s
Comment: GPIO_PORTA_AFSEL used once
GPIO_PORTA_AMSEL 40004528

Symbol: GPIO_PORTA_AMSEL
   Definitions
      At line 22 in file LCD_Function_Class.s
   Uses
      At line 180 in file LCD_Function_Class.s
Comment: GPIO_PORTA_AMSEL used once
GPIO_PORTA_DATA 400043FC

Symbol: GPIO_PORTA_DATA
   Definitions
      At line 17 in file LCD_Function_Class.s
   Uses
      At line 225 in file LCD_Function_Class.s
      At line 235 in file LCD_Function_Class.s
      At line 241 in file LCD_Function_Class.s
      At line 304 in file LCD_Function_Class.s
      At line 319 in file LCD_Function_Class.s
      At line 347 in file LCD_Function_Class.s
      At line 366 in file LCD_Function_Class.s
      At line 380 in file LCD_Function_Class.s
      At line 431 in file LCD_Function_Class.s
      At line 446 in file LCD_Function_Class.s

GPIO_PORTA_DEN 4000451C

Symbol: GPIO_PORTA_DEN
   Definitions
      At line 21 in file LCD_Function_Class.s
   Uses
      At line 174 in file LCD_Function_Class.s
Comment: GPIO_PORTA_DEN used once
GPIO_PORTA_DIR 40004400

Symbol: GPIO_PORTA_DIR
   Definitions
      At line 19 in file LCD_Function_Class.s
   Uses
      At line 168 in file LCD_Function_Class.s
Comment: GPIO_PORTA_DIR used once
GPIO_PORTA_IM 40004010

Symbol: GPIO_PORTA_IM
   Definitions
      At line 18 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTA_IM unused
GPIO_PORTA_PCTL 4000452C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTA_PCTL
   Definitions
      At line 23 in file LCD_Function_Class.s
   Uses
      At line 177 in file LCD_Function_Class.s
Comment: GPIO_PORTA_PCTL used once
GPIO_PORTB_AFSEL 40005420

Symbol: GPIO_PORTB_AFSEL
   Definitions
      At line 28 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_AFSEL unused
GPIO_PORTB_AMSEL 40005528

Symbol: GPIO_PORTB_AMSEL
   Definitions
      At line 30 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_AMSEL unused
GPIO_PORTB_DATA 400053FC

Symbol: GPIO_PORTB_DATA
   Definitions
      At line 25 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_DATA unused
GPIO_PORTB_DEN 4000551C

Symbol: GPIO_PORTB_DEN
   Definitions
      At line 29 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_DEN unused
GPIO_PORTB_DIR 40005400

Symbol: GPIO_PORTB_DIR
   Definitions
      At line 27 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_DIR unused
GPIO_PORTB_IM 40005010

Symbol: GPIO_PORTB_IM
   Definitions
      At line 26 in file LCD_Function_Class.s
   Uses
      None
Comment: GPIO_PORTB_IM unused
GPIO_PORTB_PCTL 4000552C

Symbol: GPIO_PORTB_PCTL
   Definitions
      At line 31 in file LCD_Function_Class.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIO_PORTB_PCTL unused
SSI0_CC 40008FC8

Symbol: SSI0_CC
   Definitions
      At line 39 in file LCD_Function_Class.s
   Uses
      At line 202 in file LCD_Function_Class.s
Comment: SSI0_CC used once
SSI0_CPSR 40008010

Symbol: SSI0_CPSR
   Definitions
      At line 38 in file LCD_Function_Class.s
   Uses
      At line 210 in file LCD_Function_Class.s
Comment: SSI0_CPSR used once
SSI0_CR0 40008000

Symbol: SSI0_CR0
   Definitions
      At line 34 in file LCD_Function_Class.s
   Uses
      At line 206 in file LCD_Function_Class.s
      At line 213 in file LCD_Function_Class.s

SSI0_CR1 40008004

Symbol: SSI0_CR1
   Definitions
      At line 35 in file LCD_Function_Class.s
   Uses
      At line 195 in file LCD_Function_Class.s
      At line 218 in file LCD_Function_Class.s

SSI0_DR 40008008

Symbol: SSI0_DR
   Definitions
      At line 36 in file LCD_Function_Class.s
   Uses
      At line 293 in file LCD_Function_Class.s
Comment: SSI0_DR used once
SSI0_SR 4000800C

Symbol: SSI0_SR
   Definitions
      At line 37 in file LCD_Function_Class.s
   Uses
      At line 271 in file LCD_Function_Class.s
      At line 287 in file LCD_Function_Class.s
      At line 315 in file LCD_Function_Class.s
      At line 362 in file LCD_Function_Class.s
      At line 400 in file LCD_Function_Class.s
      At line 442 in file LCD_Function_Class.s
      At line 457 in file LCD_Function_Class.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

SYSCTL_RCGCGPIO 400FE608

Symbol: SYSCTL_RCGCGPIO
   Definitions
      At line 42 in file LCD_Function_Class.s
   Uses
      At line 161 in file LCD_Function_Class.s
Comment: SYSCTL_RCGCGPIO used once
SYSCTL_RCGCSSI 400FE61C

Symbol: SYSCTL_RCGCSSI
   Definitions
      At line 43 in file LCD_Function_Class.s
   Uses
      At line 185 in file LCD_Function_Class.s
Comment: SYSCTL_RCGCSSI used once
22 symbols
381 symbols in table
