


ARM Macro Assembler    Page 1 


    1 00000000         ; Pulse.s
    2 00000000         ; Routine for creating a pulse train using interrupts
    3 00000000         ; This uses Channel 0, and a 1MHz Timer Clock (_TAPR = 1
                       5 )
    4 00000000         ; Uses 32/64-bit Timer 0 to create pulse train on PF2
    5 00000000         
    6 00000000         ;Nested Vector Interrupt Controller registers
    7 00000000         ;NVIC_EN0_INT94  EQU 0x00080000 ; Interrupt 94 enable
    8 00000000 E000E108 
                       NVIC_EN0
                               EQU              0xE000E108  ; IRQ 0 to 31 Set E
                                                            nable Register
    9 00000000 E000E45C 
                       NVIC_PRI4
                               EQU              0xE000E45C  ; IRQ 92 to 95 Prio
                                                            rity Register
   10 00000000         
   11 00000000         ; 32/64 Timer Registers
   12 00000000 40036000 
                       TIMER0_CFG
                               EQU              0x40036000
   13 00000000 40036004 
                       TIMER0_TAMR
                               EQU              0x40036004
   14 00000000 40036008 
                       TIMER0_TAMR_B
                               EQU              0x40036008
   15 00000000 4003600C 
                       TIMER0_CTL
                               EQU              0x4003600C
   16 00000000 40036018 
                       TIMER0_IMR
                               EQU              0x40036018
   17 00000000 4003601C 
                       TIMER0_RIS
                               EQU              0x4003601C  ; Timer Interrupt S
                                                            tatus
   18 00000000 40036024 
                       TIMER0_ICR
                               EQU              0x40036024  ; Timer Interrupt C
                                                            lear
   19 00000000 40036028 
                       TIMER0_TAILR
                               EQU              0x40036028  ; Timer interval
   20 00000000 4003602C 
                       TIMER0_TAILR_B
                               EQU              0x4003602C  ; Timer interval
   21 00000000 40036038 
                       TIMER0_TAPR
                               EQU              0x40036038
   22 00000000 4003603C 
                       TIMER0_TAPR_B
                               EQU              0x4003603C
   23 00000000 4003604C 
                       TIMER0_TAR_B
                               EQU              0x4003604C  ; Timer register
   24 00000000 40036050 
                       TIMER0_TAV
                               EQU              0x40036050  ; Timer register



ARM Macro Assembler    Page 2 


   25 00000000 40036030 
                       TIMER0_TAMATCHR
                               EQU              0x40036030  ; Timer register
   26 00000000 40036034 
                       TIMER0_TAMATCHR_B
                               EQU              0x40036034  ; Timer register
   27 00000000 40036040 
                       TIMER0_TAPMR
                               EQU              0x40036040  ; Timer register
   28 00000000 40036044 
                       TIMER0_TAPMR_B
                               EQU              0x40036044  ; Timer register
   29 00000000         
   30 00000000         ;GPIO Registers
   31 00000000 40025010 
                       GPIO_PORTF_DATA
                               EQU              0x40025010  ; Access BIT2
   32 00000000 40025400 
                       GPIO_PORTF_DIR
                               EQU              0x40025400  ; Port Direction
   33 00000000 40025420 
                       GPIO_PORTF_AFSEL
                               EQU              0x40025420  ; Alt Function enab
                                                            le
   34 00000000 4002551C 
                       GPIO_PORTF_DEN
                               EQU              0x4002551C  ; Digital Enable
   35 00000000 40025528 
                       GPIO_PORTF_AMSEL
                               EQU              0x40025528  ; Analog enable
   36 00000000 4002552C 
                       GPIO_PORTF_PCTL
                               EQU              0x4002552C  ; Alternate Functio
                                                            ns
   37 00000000         
   38 00000000         ;System Registers
   39 00000000 400FE608 
                       SYSCTL_RCGCGPIO
                               EQU              0x400FE608  ; GPIO Gate Control
                                                            
   40 00000000 400FE65C 
                       SYSCTL_RCGCTIMER
                               EQU              0x400FE65C  ; GPTM Gate Control
                                                            
   41 00000000         ; 32/64-bit Timer 0
   42 00000000         
   43 00000000         ;---------------------------------------------------
   44 00000000 01312D00 
                       MAX     EQU              0x1312D00   ; 20e6 useconds
   45 00000000 000F4240 
                       DECREASE
                               EQU              0xF4240     ; 1e6 useconds
   46 00000000 0007A120 
                       MAX_TIMER_A
                               EQU              0x7A120     ; 5e5 useconds
   47 00000000 0000004A 
                       Coordinate_Timer_X
                               EQU              74
   48 00000000         ;---------------------------------------------------



ARM Macro Assembler    Page 3 


   49 00000000                 AREA             |.text|, READONLY, CODE
   50 00000000                 THUMB
   51 00000000         
   52 00000000         gameplayBorder
   53 00000000         ; 2_xxxx.xxxx (data content)
   54 00000000 00 00 00 
              00 00 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[0,13]
   55 0000000E 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[14,27]
   56 0000001C 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[28,41]
   57 0000002A 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[42,55]
   58 00000038 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[56,69]
   59 00000046 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]
   60 00000054         
   61 00000054 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[0,13]
   62 00000062 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[14,27]
   63 00000070 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[28,41]
   64 0000007E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[42,55]
   65 0000008C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 1:[56,69]
   66 0000009A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[70,83]
   67 000000A8         
   68 000000A8 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[0,13]
   69 000000B6 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[14,27]
   70 000000C4 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[28,41]
   71 000000D2 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 



ARM Macro Assembler    Page 5 


                                                            ; 2:[42,55]
   72 000000E0 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 2:[56,69]
   73 000000EE 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[70,83]
   74 000000FC         
   75 000000FC 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   76 0000010A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   77 00000118 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   78 00000126 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   79 00000134 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   80 00000142 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   81 00000150         



ARM Macro Assembler    Page 6 


   82 00000150 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   83 0000015E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   84 0000016C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   85 0000017A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   86 00000188 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   87 00000196 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   88 000001A4         
   89 000001A4 00 00 00 
              00 00 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[0,13]
   90 000001B2 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[14,27]
   91 000001C0 01 01 01 
              01 01 01 



ARM Macro Assembler    Page 7 


              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[28,41]
   92 000001CE 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[42,55]
   93 000001DC 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[56,69]
   94 000001EA 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]
   95 000001F8         
   96 000001F8 32 30 04 
                       MSG_20s DCB              "20",0x04
   97 000001FB 31 39 04 
                       MSG_19s DCB              "19",0x04
   98 000001FE 31 38 04 
                       MSG_18s DCB              "18",0x04
   99 00000201 31 37 04 
                       MSG_17s DCB              "17",0x04
  100 00000204 31 36 04 
                       MSG_16s DCB              "16",0x04
  101 00000207 31 35 04 
                       MSG_15s DCB              "15",0x04
  102 0000020A 31 34 04 
                       MSG_14s DCB              "14",0x04
  103 0000020D 31 33 04 
                       MSG_13s DCB              "13",0x04
  104 00000210 31 32 04 
                       MSG_12s DCB              "12",0x04
  105 00000213 31 31 04 
                       MSG_11s DCB              "11",0x04
  106 00000216 31 30 04 
                       MSG_10s DCB              "10",0x04
  107 00000219 30 39 04 
                       MSG_9s  DCB              "09",0x04
  108 0000021C 30 38 04 
                       MSG_8s  DCB              "08",0x04
  109 0000021F 30 37 04 
                       MSG_7s  DCB              "07",0x04
  110 00000222 30 36 04 
                       MSG_6s  DCB              "06",0x04
  111 00000225 30 35 04 
                       MSG_5s  DCB              "05",0x04



ARM Macro Assembler    Page 8 


  112 00000228 30 34 04 
                       MSG_4s  DCB              "04",0x04
  113 0000022B 30 33 04 
                       MSG_3s  DCB              "03",0x04
  114 0000022E 30 32 04 
                       MSG_2s  DCB              "02",0x04
  115 00000231 30 31 04 
                       MSG_1s  DCB              "01",0x04
  116 00000234 30 30 04 
                       MSG_0s  DCB              "00",0x04
  117 00000237 20 20 04 
                       MSG_ClearTimer
                               DCB              "  ",0x04
  118 0000023A         
  119 0000023A                 AREA             routines, CODE, READONLY
  120 00000000                 THUMB
  121 00000000         
  122 00000000                 EXPORT           WideTimer0A_Handler
  123 00000000                 EXPORT           WideTimer0B_Handler
  124 00000000                 EXPORT           Timers_Init
  125 00000000                 EXPORT           Enable_Timers
  126 00000000         
  127 00000000         ;----------------------------------
  128 00000000         ; Screen functions
  129 00000000         ;----------------------------------
  130 00000000                 EXTERN           Nokia_Init
  131 00000000                 EXTERN           OutImgNokia
  132 00000000                 EXTERN           SetCoordinate
  133 00000000                 EXTERN           TxByte
  134 00000000                 EXTERN           OutStrNokia
  135 00000000                 EXTERN           ClearNokia
  136 00000000         
  137 00000000                 EXTERN           Set_Coordinates_Mine
  138 00000000         
  139 00000000         ;-------------------------------------------
  140 00000000         ; Clears all screen.
  141 00000000         ; Outputs to timer location of the screen.
  142 00000000         ; "20".
  143 00000000         ;-------------------------------------------     
  144 00000000         WideTimer0A_Handler
                               PROC
  145 00000000 E92D 4FE0       PUSH{R5-R11,LR}              ; R0,R1,R2,R3,R12 a
                                                            re pushed to stack
  146 00000004         ; when interrupt occurs
  147 00000004 4989            LDR              R1, =TIMER0_ICR
  148 00000006 F04F 000F       MOV              R0, #0xF
  149 0000000A 6008            STR              R0, [R1]
  150 0000000C F7FF FFFE       BL               OutStrNokia
  151 00000010 F7FF FFFE       BL               ClearNokia  ; clear the screen
  152 00000014 4D86            LDR              R5,=gameplayBorder
  153 00000016 F7FF FFFE       BL               OutImgNokia ; output the border
                                                            
  154 0000001A F04F 004A       LDR              R0, = Coordinate_Timer_X
  155 0000001E F04F 0100       MOV              R1, #0
  156 00000022 F7FF FFFE       BL               SetCoordinate
  157 00000026 4D83            LDR              R5,=MSG_20s
  158 00000028 F7FF FFFE       BL               OutStrNokia
  159 0000002C F104 0401       ADD              R4, R4, #1
  160 00000030 E8BD 4FE0       POP{R5-R11,LR}



ARM Macro Assembler    Page 9 


  161 00000034 4770            BX               LR
  162 00000036                 ENDP
  163 00000036         
  164 00000036         ;-------------------------------------------
  165 00000036         ; Calculates the remaining timer
  166 00000036         ; Outputs it to timer location of the screen.
  167 00000036         ;-------------------------------------------
  168 00000036         WideTimer0B_Handler
                               PROC
  169 00000036 E92D 5FFF       PUSH{R0-R12,LR}
  170 0000003A         ; clear interrupt flag
  171 0000003A 497C            LDR              R1, =TIMER0_ICR
  172 0000003C F640 1211       MOV              R2, #0x911
  173 00000040 4610            MOV              R0, R2      ; clear the interru
                                                            pts that are
  174 00000042         ; due to MATCH and TIME-OUT
  175 00000042 6008            STR              R0, [R1]
  176 00000044         
  177 00000044 497C            LDR              R1, =TIMER0_TAR_B
  178 00000046 6808            LDR              R0, [R1]
  179 00000048 497C            LDR              R1, = MAX
  180 0000004A 4288            CMP              R0, R1      ; check if the time
                                                            r is reset
  181 0000004C         ; meaning 20s have passed
  182 0000004C         
  183 0000004C 4A7A            LDR              R2, =TIMER0_TAR_B
  184 0000004E 6811            LDR              R1, [R2]
  185 00000050 487B            LDR              R0, =DECREASE
  186 00000052 EBA1 0000       SUB              R0, R1, R0  ; set the next MATC
                                                            H interrupt
  187 00000056 497B            LDR              R1, =TIMER0_TAMATCHR_B
  188 00000058 6008            STR              R0, [R1]    ; store it
  189 0000005A         
  190 0000005A         ; Toggle PortF Data, just for demonstration
  191 0000005A 497B            LDR              R1, = GPIO_PORTF_DATA
  192 0000005C 6808            LDR              R0,[R1]
  193 0000005E F080 0004       EOR              R0,R0,#0x04
  194 00000062 6008            STR              R0, [R1]
  195 00000064         
  196 00000064 F244 2240 
              F2C0 020F        MOV32            R2, #1000000
  197 0000006C 4972            LDR              R1, = TIMER0_TAR_B
  198 0000006E 6808            LDR              R0, [R1]
  199 00000070 FBB0 F0F2       UDIV             R0, R0 ,R2  ; R0 is the remaini
                                                            ng time in seconds
  200 00000074 F100 0001       ADD              R0, R0, #1
  201 00000078         R19s
  202 00000078 2813            CMP              R0, #19
  203 0000007A D101            BNE              R18s
  204 0000007C 4C73            LDR              R4, = MSG_19s ; save the string
                                                             in R4
  205 0000007E E049            B                Output_Remaning_Time
  206 00000080         R18s
  207 00000080 2812            CMP              R0, #18
  208 00000082 D101            BNE              R17s
  209 00000084 4C72            LDR              R4, = MSG_18s ; save the string
                                                             in R4
  210 00000086 E045            B                Output_Remaning_Time
  211 00000088         R17s



ARM Macro Assembler    Page 10 


  212 00000088 2811            CMP              R0, #17
  213 0000008A D101            BNE              R16s
  214 0000008C 4C71            LDR              R4, = MSG_17s ; save the string
                                                             in R4
  215 0000008E E041            B                Output_Remaning_Time
  216 00000090         R16s
  217 00000090 2810            CMP              R0, #16
  218 00000092 D101            BNE              R15s
  219 00000094 4C70            LDR              R4, = MSG_16s ; save the string
                                                             in R4
  220 00000096 E03D            B                Output_Remaning_Time
  221 00000098         R15s
  222 00000098 280F            CMP              R0, #15
  223 0000009A D101            BNE              R14s
  224 0000009C 4C6F            LDR              R4, = MSG_15s ; save the string
                                                             in R4
  225 0000009E E039            B                Output_Remaning_Time
  226 000000A0         R14s
  227 000000A0 280E            CMP              R0, #14
  228 000000A2 D101            BNE              R13s
  229 000000A4 4C6E            LDR              R4, = MSG_14s ; save the string
                                                             in R4
  230 000000A6 E035            B                Output_Remaning_Time
  231 000000A8         R13s
  232 000000A8 280D            CMP              R0, #13
  233 000000AA D101            BNE              R12s
  234 000000AC 4C6D            LDR              R4, = MSG_13s ; save the string
                                                             in R4
  235 000000AE E031            B                Output_Remaning_Time
  236 000000B0         R12s
  237 000000B0 280C            CMP              R0, #12
  238 000000B2 D101            BNE              R11s
  239 000000B4 4C6C            LDR              R4, = MSG_12s ; save the string
                                                             in R4
  240 000000B6 E02D            B                Output_Remaning_Time
  241 000000B8         R11s
  242 000000B8 280B            CMP              R0, #11
  243 000000BA D101            BNE              R10s
  244 000000BC 4C6B            LDR              R4, = MSG_11s ; save the string
                                                             in R4
  245 000000BE E029            B                Output_Remaning_Time
  246 000000C0         R10s
  247 000000C0 280A            CMP              R0, #10
  248 000000C2 D101            BNE              R9s
  249 000000C4 4C6A            LDR              R4, = MSG_10s ; save the string
                                                             in R4
  250 000000C6 E025            B                Output_Remaning_Time
  251 000000C8         R9s
  252 000000C8 2809            CMP              R0, #9
  253 000000CA D101            BNE              R8s
  254 000000CC 4C69            LDR              R4, = MSG_9s ; save the string 
                                                            in R4
  255 000000CE E021            B                Output_Remaning_Time
  256 000000D0         R8s
  257 000000D0 2808            CMP              R0, #8
  258 000000D2 D101            BNE              R7s
  259 000000D4 4C68            LDR              R4, = MSG_8s ; save the string 
                                                            in R4
  260 000000D6 E01D            B                Output_Remaning_Time



ARM Macro Assembler    Page 11 


  261 000000D8         R7s
  262 000000D8 2807            CMP              R0, #7
  263 000000DA D101            BNE              R6s
  264 000000DC 4C67            LDR              R4, = MSG_7s ; save the string 
                                                            in R4
  265 000000DE E019            B                Output_Remaning_Time
  266 000000E0         R6s
  267 000000E0 2806            CMP              R0, #6
  268 000000E2 D101            BNE              R5s
  269 000000E4 4C66            LDR              R4, = MSG_6s ; save the string 
                                                            in R4
  270 000000E6 E015            B                Output_Remaning_Time
  271 000000E8         R5s
  272 000000E8 2805            CMP              R0, #5
  273 000000EA D101            BNE              R4s
  274 000000EC 4C65            LDR              R4, = MSG_5s ; save the string 
                                                            in R4
  275 000000EE E011            B                Output_Remaning_Time
  276 000000F0         R4s
  277 000000F0 2804            CMP              R0, #4
  278 000000F2 D101            BNE              R3s
  279 000000F4 4C64            LDR              R4, = MSG_4s ; save the string 
                                                            in R4
  280 000000F6 E00D            B                Output_Remaning_Time
  281 000000F8         R3s
  282 000000F8 2803            CMP              R0, #3
  283 000000FA D101            BNE              R2s
  284 000000FC 4C63            LDR              R4, = MSG_3s ; save the string 
                                                            in R4
  285 000000FE E009            B                Output_Remaning_Time
  286 00000100         R2s
  287 00000100 2802            CMP              R0, #2
  288 00000102 D101            BNE              R1s
  289 00000104 4C62            LDR              R4, = MSG_2s ; save the string 
                                                            in R4
  290 00000106 E005            B                Output_Remaning_Time
  291 00000108         R1s
  292 00000108 2801            CMP              R0, #1
  293 0000010A D101            BNE              R0s
  294 0000010C 4C61            LDR              R4, = MSG_1s ; save the string 
                                                            in R4
  295 0000010E E001            B                Output_Remaning_Time
  296 00000110         R0s
  297 00000110 4C61            LDR              R4, = MSG_0s ; save the string 
                                                            in R4
  298 00000112 E7FF            B                Output_Remaning_Time
  299 00000114         
  300 00000114         
  301 00000114         
  302 00000114         Output_Remaning_Time
  303 00000114 F04F 004A       LDR              R0, = Coordinate_Timer_X
  304 00000118 F04F 0100       MOV              R1, #0
  305 0000011C F7FF FFFE       BL               SetCoordinate
  306 00000120 4D5E            LDR              R5, = MSG_ClearTimer
  307 00000122 F7FF FFFE       BL               OutStrNokia
  308 00000126 F04F 004A       LDR              R0, = Coordinate_Timer_X
  309 0000012A F04F 0100       MOV              R1, #0
  310 0000012E F7FF FFFE       BL               SetCoordinate
  311 00000132 4625            MOV              R5, R4



ARM Macro Assembler    Page 12 


  312 00000134 F7FF FFFE       BL               OutStrNokia
  313 00000138 E8BD 5FFF       POP{R0-R12,LR}
  314 0000013C 4770            BX               LR
  315 0000013E                 ENDP
  316 0000013E         
  317 0000013E         ;-------------------------------------------
  318 0000013E         ; Enables timers.
  319 0000013E         ; TimerA of 0.5 seconds triggers TimerB of 20 seconds.
  320 0000013E         ;-------------------------------------------
  321 0000013E         Enable_Timers
  322 0000013E B407            PUSH{R0-R2}
  323 00000140 B500            PUSH{LR}
  324 00000142 4957            LDR              R1, =TIMER0_CTL
  325 00000144 6808            LDR              R0, [R1]
  326 00000146 F240 3203       MOV              R2, #0x303  ; Enable timer
  327 0000014A EA40 0002       ORR              R0, R0, R2  ; set bit0 to enabl
                                                            e A and B
  328 0000014E 6008            STR              R0, [R1]    ; and bit 1 to stal
                                                            l on debug
  329 00000150 F85D EB04       POP{LR}
  330 00000154 BC07            POP{R0-R2}
  331 00000156 4770            BX               LR
  332 00000158         
  333 00000158         Timers_Init
                               PROC
  334 00000158 B407            PUSH{R0-R2}
  335 0000015A 4952            LDR              R1, =SYSCTL_RCGCGPIO 
                                                            ; start GPIO clock
  336 0000015C 6808            LDR              R0, [R1]
  337 0000015E F040 0020       ORR              R0, R0, #0x20 ; set bit 5 for p
                                                            ort F
  338 00000162 6008            STR              R0, [R1]
  339 00000164 BF00            NOP                          ; allow clock to se
                                                            ttle
  340 00000166 BF00            NOP
  341 00000168 BF00            NOP
  342 0000016A 494F            LDR              R1, =GPIO_PORTF_DIR ; set direc
                                                            tion of PF2
  343 0000016C 6808            LDR              R0, [R1]
  344 0000016E F040 0004       ORR              R0, R0, #0x04 ; set bit2 for ou
                                                            tput
  345 00000172 6008            STR              R0, [R1]
  346 00000174 494D            LDR              R1, =GPIO_PORTF_AFSEL ; regular
                                                             port function
  347 00000176 6808            LDR              R0, [R1]
  348 00000178 F020 0004       BIC              R0, R0, #0x04
  349 0000017C 6008            STR              R0, [R1]
  350 0000017E 494C            LDR              R1, =GPIO_PORTF_PCTL ; no alter
                                                            nate function
  351 00000180 6808            LDR              R0, [R1]
  352 00000182 F420 6070       BIC              R0, R0, #0x00000F00
  353 00000186 6008            STR              R0, [R1]
  354 00000188 494A            LDR              R1, =GPIO_PORTF_AMSEL 
                                                            ; disable analog
  355 0000018A F04F 0000       MOV              R0, #0
  356 0000018E 6008            STR              R0, [R1]
  357 00000190 4949            LDR              R1, =GPIO_PORTF_DEN ; enable po
                                                            rt digital
  358 00000192 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 13 


  359 00000194 F040 0004       ORR              R0, R0, #0x04
  360 00000198 6008            STR              R0, [R1]
  361 0000019A         
  362 0000019A 4948            LDR              R1, =SYSCTL_RCGCTIMER ; Start 3
                                                            2/64-bit Timer 0
  363 0000019C 6808            LDR              R0, [R1]
  364 0000019E F040 0001       ORR              R0, R0, #0x01
  365 000001A2 6008            STR              R0, [R1]
  366 000001A4 BF00            NOP                          ; allow clock to se
                                                            ttle
  367 000001A6 BF00            NOP
  368 000001A8 BF00            NOP
  369 000001AA 493D            LDR              R1, =TIMER0_CTL ; disable timer
                                                             during setup LDR R
                                                            2, [R1]
  370 000001AC 6808            LDR              R0, [R1]
  371 000001AE F240 1201       MOV              R2, #0x101
  372 000001B2 EA20 0002       BIC              R0, R0, R2  ; clear A and B
  373 000001B6 6008            STR              R0, [R1]
  374 000001B8 4941            LDR              R1, =TIMER0_CFG 
                                                            ; set 32 bit mode
  375 000001BA F04F 0004       MOV              R0, #0x04
  376 000001BE 6008            STR              R0, [R1]
  377 000001C0 4940            LDR              R1, =TIMER0_TAMR_B
  378 000001C2 F04F 0061       MOV              R0, #0x61   ; set to one shot, 
                                                            count down
  379 000001C6 6008            STR              R0, [R1]
  380 000001C8 491C            LDR              R1, =MAX
  381 000001CA 481D            LDR              R0, =DECREASE
  382 000001CC EBA1 0000       SUB              R0, R1, R0
  383 000001D0 491C            LDR              R1, =TIMER0_TAMATCHR_B
  384 000001D2 6008            STR              R0, [R1]
  385 000001D4 493C            LDR              R1, =TIMER0_TAILR_B ; initializ
                                                            e match clocks
  386 000001D6 4819            LDR              R0, =MAX
  387 000001D8 6008            STR              R0, [R1]
  388 000001DA 493C            LDR              R1, =TIMER0_TAPR_B
  389 000001DC F04F 000F       MOV              R0, #15     ; divide clock by 1
                                                            6 to
  390 000001E0 6008            STR              R0, [R1]    ; get 1us clocks
  391 000001E2         ; LDR R1, =TIMER0_TAPMR_B
  392 000001E2         ; MOV R0, #15 ; divide clock by 16 to
  393 000001E2         ; STR R0, [R1] ; get 1us clocks
  394 000001E2 493B            LDR              R1, =TIMER0_IMR ; enable timeou
                                                            t interrupt
  395 000001E4 F640 1001       MOV              R0, #0x901  ; A and B interrupt
                                                             enable
  396 000001E8 6008            STR              R0, [R1]
  397 000001EA         ; - - - - - - - - - -- - - - - - -
  398 000001EA 493A            LDR              R1, =TIMER0_TAMR
  399 000001EC F04F 0001       MOV              R0, #0x01   ; set to one shot, 
                                                            count down, wait tr
                                                            igger enabled
  400 000001F0 6008            STR              R0, [R1]
  401 000001F2 4939            LDR              R1, =TIMER0_TAPR
  402 000001F4 F04F 000F       MOV              R0, #15     ; divide clock by 1
                                                            6 to
  403 000001F8 6008            STR              R0, [R1]    ; get 1us clocks
  404 000001FA 4938            LDR              R1, =TIMER0_TAILR ; initialize 



ARM Macro Assembler    Page 14 


                                                            match clocks
  405 000001FC 4838            LDR              R0, =MAX_TIMER_A
  406 000001FE 6008            STR              R0, [R1]
  407 00000200         ; - - - - - - - - - -- - - - - - -
  408 00000200         ; Configure interrupt priorities
  409 00000200         ; Timer0A is interrupt #94.
  410 00000200         ; Interrupts 92-95 are handled by NVIC register PRI23.
  411 00000200         ; set NVIC interrupt 94-95 to priority 2
  412 00000200 4938            LDR              R1, =NVIC_PRI4
  413 00000202 6808            LDR              R0, [R1]
  414 00000204 F64F 72FF 
              F2C0 0200        MOV32            R2, #0x0000FFFF
  415 0000020C EA00 0002       AND              R0, R0, R2  ; clear interrupt
  416 00000210 F240 0200 
              F2C4 0240        MOV32            R2,  #0x40400000
  417 00000218 EA40 0002       ORR              R0, R0, R2  ; set interrupt
  418 0000021C 6008            STR              R0, [R1]
  419 0000021E         ; NVIC has to be enabled
  420 0000021E         ; Interrupts 64-95 are handled by NVIC register EN2
  421 0000021E         ; Interrupt 94 is controlled by bit 30-31
  422 0000021E 4932            LDR              R1, =NVIC_EN0
  423 00000220 6808            LDR              R0, [R1]
  424 00000222 F040 4040       ORR              R0, R0, #0xC0000000 ; set bit 3
                                                            0-31 to enable inte
                                                            rrupt 94-95
  425 00000226 6008            STR              R0, [R1]
  426 00000228 BC07            POP{R0-R2}
  427 0000022A 4770            BX               LR          ; return
  428 0000022C                 ENDP
  429 0000022C                 END
              40036024 
              00000000 
              00000000 
              4003604C 
              01312D00 
              000F4240 
              40036034 
              40025010 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 15 


              4003600C 
              400FE608 
              40025400 
              40025420 
              4002552C 
              40025528 
              4002551C 
              400FE65C 
              40036000 
              40036008 
              4003602C 
              4003603C 
              40036018 
              40036004 
              40036038 
              40036028 
              0007A120 
              E000E45C 
              E000E108 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\timers_funciton_class.d -o.\objects\timers_funciton_c
lass.o -I.\RTE\_EE447-Project -ID:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\
Include\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pr
edefine="__UVISION_VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.
\listings\timers_funciton_class.lst Timers_Funciton_Class.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 49 in file Timers_Funciton_Class.s
   Uses
      None
Comment: .text unused
MSG_0s 00000234

Symbol: MSG_0s
   Definitions
      At line 116 in file Timers_Funciton_Class.s
   Uses
      At line 297 in file Timers_Funciton_Class.s
Comment: MSG_0s used once
MSG_10s 00000216

Symbol: MSG_10s
   Definitions
      At line 106 in file Timers_Funciton_Class.s
   Uses
      At line 249 in file Timers_Funciton_Class.s
Comment: MSG_10s used once
MSG_11s 00000213

Symbol: MSG_11s
   Definitions
      At line 105 in file Timers_Funciton_Class.s
   Uses
      At line 244 in file Timers_Funciton_Class.s
Comment: MSG_11s used once
MSG_12s 00000210

Symbol: MSG_12s
   Definitions
      At line 104 in file Timers_Funciton_Class.s
   Uses
      At line 239 in file Timers_Funciton_Class.s
Comment: MSG_12s used once
MSG_13s 0000020D

Symbol: MSG_13s
   Definitions
      At line 103 in file Timers_Funciton_Class.s
   Uses
      At line 234 in file Timers_Funciton_Class.s
Comment: MSG_13s used once
MSG_14s 0000020A

Symbol: MSG_14s
   Definitions
      At line 102 in file Timers_Funciton_Class.s
   Uses
      At line 229 in file Timers_Funciton_Class.s
Comment: MSG_14s used once
MSG_15s 00000207

Symbol: MSG_15s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 101 in file Timers_Funciton_Class.s
   Uses
      At line 224 in file Timers_Funciton_Class.s
Comment: MSG_15s used once
MSG_16s 00000204

Symbol: MSG_16s
   Definitions
      At line 100 in file Timers_Funciton_Class.s
   Uses
      At line 219 in file Timers_Funciton_Class.s
Comment: MSG_16s used once
MSG_17s 00000201

Symbol: MSG_17s
   Definitions
      At line 99 in file Timers_Funciton_Class.s
   Uses
      At line 214 in file Timers_Funciton_Class.s
Comment: MSG_17s used once
MSG_18s 000001FE

Symbol: MSG_18s
   Definitions
      At line 98 in file Timers_Funciton_Class.s
   Uses
      At line 209 in file Timers_Funciton_Class.s
Comment: MSG_18s used once
MSG_19s 000001FB

Symbol: MSG_19s
   Definitions
      At line 97 in file Timers_Funciton_Class.s
   Uses
      At line 204 in file Timers_Funciton_Class.s
Comment: MSG_19s used once
MSG_1s 00000231

Symbol: MSG_1s
   Definitions
      At line 115 in file Timers_Funciton_Class.s
   Uses
      At line 294 in file Timers_Funciton_Class.s
Comment: MSG_1s used once
MSG_20s 000001F8

Symbol: MSG_20s
   Definitions
      At line 96 in file Timers_Funciton_Class.s
   Uses
      At line 157 in file Timers_Funciton_Class.s
Comment: MSG_20s used once
MSG_2s 0000022E

Symbol: MSG_2s
   Definitions
      At line 114 in file Timers_Funciton_Class.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 289 in file Timers_Funciton_Class.s
Comment: MSG_2s used once
MSG_3s 0000022B

Symbol: MSG_3s
   Definitions
      At line 113 in file Timers_Funciton_Class.s
   Uses
      At line 284 in file Timers_Funciton_Class.s
Comment: MSG_3s used once
MSG_4s 00000228

Symbol: MSG_4s
   Definitions
      At line 112 in file Timers_Funciton_Class.s
   Uses
      At line 279 in file Timers_Funciton_Class.s
Comment: MSG_4s used once
MSG_5s 00000225

Symbol: MSG_5s
   Definitions
      At line 111 in file Timers_Funciton_Class.s
   Uses
      At line 274 in file Timers_Funciton_Class.s
Comment: MSG_5s used once
MSG_6s 00000222

Symbol: MSG_6s
   Definitions
      At line 110 in file Timers_Funciton_Class.s
   Uses
      At line 269 in file Timers_Funciton_Class.s
Comment: MSG_6s used once
MSG_7s 0000021F

Symbol: MSG_7s
   Definitions
      At line 109 in file Timers_Funciton_Class.s
   Uses
      At line 264 in file Timers_Funciton_Class.s
Comment: MSG_7s used once
MSG_8s 0000021C

Symbol: MSG_8s
   Definitions
      At line 108 in file Timers_Funciton_Class.s
   Uses
      At line 259 in file Timers_Funciton_Class.s
Comment: MSG_8s used once
MSG_9s 00000219

Symbol: MSG_9s
   Definitions
      At line 107 in file Timers_Funciton_Class.s
   Uses
      At line 254 in file Timers_Funciton_Class.s
Comment: MSG_9s used once
MSG_ClearTimer 00000237



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: MSG_ClearTimer
   Definitions
      At line 117 in file Timers_Funciton_Class.s
   Uses
      At line 306 in file Timers_Funciton_Class.s
Comment: MSG_ClearTimer used once
gameplayBorder 00000000

Symbol: gameplayBorder
   Definitions
      At line 52 in file Timers_Funciton_Class.s
   Uses
      At line 152 in file Timers_Funciton_Class.s
Comment: gameplayBorder used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Enable_Timers 0000013E

Symbol: Enable_Timers
   Definitions
      At line 321 in file Timers_Funciton_Class.s
   Uses
      At line 125 in file Timers_Funciton_Class.s
Comment: Enable_Timers used once
Output_Remaning_Time 00000114

Symbol: Output_Remaning_Time
   Definitions
      At line 302 in file Timers_Funciton_Class.s
   Uses
      At line 205 in file Timers_Funciton_Class.s
      At line 210 in file Timers_Funciton_Class.s
      At line 215 in file Timers_Funciton_Class.s
      At line 220 in file Timers_Funciton_Class.s
      At line 225 in file Timers_Funciton_Class.s
      At line 230 in file Timers_Funciton_Class.s
      At line 235 in file Timers_Funciton_Class.s
      At line 240 in file Timers_Funciton_Class.s
      At line 245 in file Timers_Funciton_Class.s
      At line 250 in file Timers_Funciton_Class.s
      At line 255 in file Timers_Funciton_Class.s
      At line 260 in file Timers_Funciton_Class.s
      At line 265 in file Timers_Funciton_Class.s
      At line 270 in file Timers_Funciton_Class.s
      At line 275 in file Timers_Funciton_Class.s
      At line 280 in file Timers_Funciton_Class.s
      At line 285 in file Timers_Funciton_Class.s
      At line 290 in file Timers_Funciton_Class.s
      At line 295 in file Timers_Funciton_Class.s
      At line 298 in file Timers_Funciton_Class.s

R0s 00000110

Symbol: R0s
   Definitions
      At line 296 in file Timers_Funciton_Class.s
   Uses
      At line 293 in file Timers_Funciton_Class.s
Comment: R0s used once
R10s 000000C0

Symbol: R10s
   Definitions
      At line 246 in file Timers_Funciton_Class.s
   Uses
      At line 243 in file Timers_Funciton_Class.s
Comment: R10s used once
R11s 000000B8

Symbol: R11s
   Definitions
      At line 241 in file Timers_Funciton_Class.s
   Uses
      At line 238 in file Timers_Funciton_Class.s
Comment: R11s used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

R12s 000000B0

Symbol: R12s
   Definitions
      At line 236 in file Timers_Funciton_Class.s
   Uses
      At line 233 in file Timers_Funciton_Class.s
Comment: R12s used once
R13s 000000A8

Symbol: R13s
   Definitions
      At line 231 in file Timers_Funciton_Class.s
   Uses
      At line 228 in file Timers_Funciton_Class.s
Comment: R13s used once
R14s 000000A0

Symbol: R14s
   Definitions
      At line 226 in file Timers_Funciton_Class.s
   Uses
      At line 223 in file Timers_Funciton_Class.s
Comment: R14s used once
R15s 00000098

Symbol: R15s
   Definitions
      At line 221 in file Timers_Funciton_Class.s
   Uses
      At line 218 in file Timers_Funciton_Class.s
Comment: R15s used once
R16s 00000090

Symbol: R16s
   Definitions
      At line 216 in file Timers_Funciton_Class.s
   Uses
      At line 213 in file Timers_Funciton_Class.s
Comment: R16s used once
R17s 00000088

Symbol: R17s
   Definitions
      At line 211 in file Timers_Funciton_Class.s
   Uses
      At line 208 in file Timers_Funciton_Class.s
Comment: R17s used once
R18s 00000080

Symbol: R18s
   Definitions
      At line 206 in file Timers_Funciton_Class.s
   Uses
      At line 203 in file Timers_Funciton_Class.s
Comment: R18s used once
R19s 00000078

Symbol: R19s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 201 in file Timers_Funciton_Class.s
   Uses
      None
Comment: R19s unused
R1s 00000108

Symbol: R1s
   Definitions
      At line 291 in file Timers_Funciton_Class.s
   Uses
      At line 288 in file Timers_Funciton_Class.s
Comment: R1s used once
R2s 00000100

Symbol: R2s
   Definitions
      At line 286 in file Timers_Funciton_Class.s
   Uses
      At line 283 in file Timers_Funciton_Class.s
Comment: R2s used once
R3s 000000F8

Symbol: R3s
   Definitions
      At line 281 in file Timers_Funciton_Class.s
   Uses
      At line 278 in file Timers_Funciton_Class.s
Comment: R3s used once
R4s 000000F0

Symbol: R4s
   Definitions
      At line 276 in file Timers_Funciton_Class.s
   Uses
      At line 273 in file Timers_Funciton_Class.s
Comment: R4s used once
R5s 000000E8

Symbol: R5s
   Definitions
      At line 271 in file Timers_Funciton_Class.s
   Uses
      At line 268 in file Timers_Funciton_Class.s
Comment: R5s used once
R6s 000000E0

Symbol: R6s
   Definitions
      At line 266 in file Timers_Funciton_Class.s
   Uses
      At line 263 in file Timers_Funciton_Class.s
Comment: R6s used once
R7s 000000D8

Symbol: R7s
   Definitions
      At line 261 in file Timers_Funciton_Class.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 258 in file Timers_Funciton_Class.s
Comment: R7s used once
R8s 000000D0

Symbol: R8s
   Definitions
      At line 256 in file Timers_Funciton_Class.s
   Uses
      At line 253 in file Timers_Funciton_Class.s
Comment: R8s used once
R9s 000000C8

Symbol: R9s
   Definitions
      At line 251 in file Timers_Funciton_Class.s
   Uses
      At line 248 in file Timers_Funciton_Class.s
Comment: R9s used once
Timers_Init 00000158

Symbol: Timers_Init
   Definitions
      At line 333 in file Timers_Funciton_Class.s
   Uses
      At line 124 in file Timers_Funciton_Class.s
Comment: Timers_Init used once
WideTimer0A_Handler 00000000

Symbol: WideTimer0A_Handler
   Definitions
      At line 144 in file Timers_Funciton_Class.s
   Uses
      At line 122 in file Timers_Funciton_Class.s
Comment: WideTimer0A_Handler used once
WideTimer0B_Handler 00000036

Symbol: WideTimer0B_Handler
   Definitions
      At line 168 in file Timers_Funciton_Class.s
   Uses
      At line 123 in file Timers_Funciton_Class.s
Comment: WideTimer0B_Handler used once
routines 00000000

Symbol: routines
   Definitions
      At line 119 in file Timers_Funciton_Class.s
   Uses
      None
Comment: routines unused
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Coordinate_Timer_X 0000004A

Symbol: Coordinate_Timer_X
   Definitions
      At line 47 in file Timers_Funciton_Class.s
   Uses
      At line 154 in file Timers_Funciton_Class.s
      At line 303 in file Timers_Funciton_Class.s
      At line 308 in file Timers_Funciton_Class.s

DECREASE 000F4240

Symbol: DECREASE
   Definitions
      At line 45 in file Timers_Funciton_Class.s
   Uses
      At line 185 in file Timers_Funciton_Class.s
      At line 381 in file Timers_Funciton_Class.s

GPIO_PORTF_AFSEL 40025420

Symbol: GPIO_PORTF_AFSEL
   Definitions
      At line 33 in file Timers_Funciton_Class.s
   Uses
      At line 346 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_AFSEL used once
GPIO_PORTF_AMSEL 40025528

Symbol: GPIO_PORTF_AMSEL
   Definitions
      At line 35 in file Timers_Funciton_Class.s
   Uses
      At line 354 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_AMSEL used once
GPIO_PORTF_DATA 40025010

Symbol: GPIO_PORTF_DATA
   Definitions
      At line 31 in file Timers_Funciton_Class.s
   Uses
      At line 191 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_DATA used once
GPIO_PORTF_DEN 4002551C

Symbol: GPIO_PORTF_DEN
   Definitions
      At line 34 in file Timers_Funciton_Class.s
   Uses
      At line 357 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_DEN used once
GPIO_PORTF_DIR 40025400

Symbol: GPIO_PORTF_DIR
   Definitions
      At line 32 in file Timers_Funciton_Class.s
   Uses
      At line 342 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_DIR used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_PCTL 4002552C

Symbol: GPIO_PORTF_PCTL
   Definitions
      At line 36 in file Timers_Funciton_Class.s
   Uses
      At line 350 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_PCTL used once
MAX 01312D00

Symbol: MAX
   Definitions
      At line 44 in file Timers_Funciton_Class.s
   Uses
      At line 179 in file Timers_Funciton_Class.s
      At line 380 in file Timers_Funciton_Class.s
      At line 386 in file Timers_Funciton_Class.s

MAX_TIMER_A 0007A120

Symbol: MAX_TIMER_A
   Definitions
      At line 46 in file Timers_Funciton_Class.s
   Uses
      At line 405 in file Timers_Funciton_Class.s
Comment: MAX_TIMER_A used once
NVIC_EN0 E000E108

Symbol: NVIC_EN0
   Definitions
      At line 8 in file Timers_Funciton_Class.s
   Uses
      At line 422 in file Timers_Funciton_Class.s
Comment: NVIC_EN0 used once
NVIC_PRI4 E000E45C

Symbol: NVIC_PRI4
   Definitions
      At line 9 in file Timers_Funciton_Class.s
   Uses
      At line 412 in file Timers_Funciton_Class.s
Comment: NVIC_PRI4 used once
SYSCTL_RCGCGPIO 400FE608

Symbol: SYSCTL_RCGCGPIO
   Definitions
      At line 39 in file Timers_Funciton_Class.s
   Uses
      At line 335 in file Timers_Funciton_Class.s
Comment: SYSCTL_RCGCGPIO used once
SYSCTL_RCGCTIMER 400FE65C

Symbol: SYSCTL_RCGCTIMER
   Definitions
      At line 40 in file Timers_Funciton_Class.s
   Uses
      At line 362 in file Timers_Funciton_Class.s
Comment: SYSCTL_RCGCTIMER used once
TIMER0_CFG 40036000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: TIMER0_CFG
   Definitions
      At line 12 in file Timers_Funciton_Class.s
   Uses
      At line 374 in file Timers_Funciton_Class.s
Comment: TIMER0_CFG used once
TIMER0_CTL 4003600C

Symbol: TIMER0_CTL
   Definitions
      At line 15 in file Timers_Funciton_Class.s
   Uses
      At line 324 in file Timers_Funciton_Class.s
      At line 369 in file Timers_Funciton_Class.s

TIMER0_ICR 40036024

Symbol: TIMER0_ICR
   Definitions
      At line 18 in file Timers_Funciton_Class.s
   Uses
      At line 147 in file Timers_Funciton_Class.s
      At line 171 in file Timers_Funciton_Class.s

TIMER0_IMR 40036018

Symbol: TIMER0_IMR
   Definitions
      At line 16 in file Timers_Funciton_Class.s
   Uses
      At line 394 in file Timers_Funciton_Class.s
Comment: TIMER0_IMR used once
TIMER0_RIS 4003601C

Symbol: TIMER0_RIS
   Definitions
      At line 17 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_RIS unused
TIMER0_TAILR 40036028

Symbol: TIMER0_TAILR
   Definitions
      At line 19 in file Timers_Funciton_Class.s
   Uses
      At line 404 in file Timers_Funciton_Class.s
Comment: TIMER0_TAILR used once
TIMER0_TAILR_B 4003602C

Symbol: TIMER0_TAILR_B
   Definitions
      At line 20 in file Timers_Funciton_Class.s
   Uses
      At line 385 in file Timers_Funciton_Class.s
Comment: TIMER0_TAILR_B used once
TIMER0_TAMATCHR 40036030




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Symbol: TIMER0_TAMATCHR
   Definitions
      At line 25 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_TAMATCHR unused
TIMER0_TAMATCHR_B 40036034

Symbol: TIMER0_TAMATCHR_B
   Definitions
      At line 26 in file Timers_Funciton_Class.s
   Uses
      At line 187 in file Timers_Funciton_Class.s
      At line 383 in file Timers_Funciton_Class.s

TIMER0_TAMR 40036004

Symbol: TIMER0_TAMR
   Definitions
      At line 13 in file Timers_Funciton_Class.s
   Uses
      At line 398 in file Timers_Funciton_Class.s
Comment: TIMER0_TAMR used once
TIMER0_TAMR_B 40036008

Symbol: TIMER0_TAMR_B
   Definitions
      At line 14 in file Timers_Funciton_Class.s
   Uses
      At line 377 in file Timers_Funciton_Class.s
Comment: TIMER0_TAMR_B used once
TIMER0_TAPMR 40036040

Symbol: TIMER0_TAPMR
   Definitions
      At line 27 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_TAPMR unused
TIMER0_TAPMR_B 40036044

Symbol: TIMER0_TAPMR_B
   Definitions
      At line 28 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_TAPMR_B unused
TIMER0_TAPR 40036038

Symbol: TIMER0_TAPR
   Definitions
      At line 21 in file Timers_Funciton_Class.s
   Uses
      At line 401 in file Timers_Funciton_Class.s
Comment: TIMER0_TAPR used once
TIMER0_TAPR_B 4003603C

Symbol: TIMER0_TAPR_B
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 22 in file Timers_Funciton_Class.s
   Uses
      At line 388 in file Timers_Funciton_Class.s
Comment: TIMER0_TAPR_B used once
TIMER0_TAR_B 4003604C

Symbol: TIMER0_TAR_B
   Definitions
      At line 23 in file Timers_Funciton_Class.s
   Uses
      At line 177 in file Timers_Funciton_Class.s
      At line 183 in file Timers_Funciton_Class.s
      At line 197 in file Timers_Funciton_Class.s

TIMER0_TAV 40036050

Symbol: TIMER0_TAV
   Definitions
      At line 24 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_TAV unused
31 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ClearNokia 00000000

Symbol: ClearNokia
   Definitions
      At line 135 in file Timers_Funciton_Class.s
   Uses
      At line 151 in file Timers_Funciton_Class.s
Comment: ClearNokia used once
Nokia_Init 00000000

Symbol: Nokia_Init
   Definitions
      At line 130 in file Timers_Funciton_Class.s
   Uses
      None
Comment: Nokia_Init unused
OutImgNokia 00000000

Symbol: OutImgNokia
   Definitions
      At line 131 in file Timers_Funciton_Class.s
   Uses
      At line 153 in file Timers_Funciton_Class.s
Comment: OutImgNokia used once
OutStrNokia 00000000

Symbol: OutStrNokia
   Definitions
      At line 134 in file Timers_Funciton_Class.s
   Uses
      At line 150 in file Timers_Funciton_Class.s
      At line 158 in file Timers_Funciton_Class.s
      At line 307 in file Timers_Funciton_Class.s
      At line 312 in file Timers_Funciton_Class.s

SetCoordinate 00000000

Symbol: SetCoordinate
   Definitions
      At line 132 in file Timers_Funciton_Class.s
   Uses
      At line 156 in file Timers_Funciton_Class.s
      At line 305 in file Timers_Funciton_Class.s
      At line 310 in file Timers_Funciton_Class.s

Set_Coordinates_Mine 00000000

Symbol: Set_Coordinates_Mine
   Definitions
      At line 137 in file Timers_Funciton_Class.s
   Uses
      None
Comment: Set_Coordinates_Mine unused
TxByte 00000000

Symbol: TxByte
   Definitions
      At line 133 in file Timers_Funciton_Class.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      None
Comment: TxByte unused
7 symbols
424 symbols in table
