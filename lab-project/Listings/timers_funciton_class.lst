


ARM Macro Assembler    Page 1 


    1 00000000         ; Pulse.s
    2 00000000         ; Routine for creating a pulse train using interrupts
    3 00000000         ; This uses Channel 0, and a 1MHz Timer Clock (_TAPR = 1
                       5 )
    4 00000000         ; Uses 32/64-bit Timer 0 to create pulse train on PF2
    5 00000000         
    6 00000000         ;Nested Vector Interrupt Controller registers
    7 00000000         ;NVIC_EN0_INT94  EQU 0x00080000 ; Interrupt 94 enable
    8 00000000 E000E108 
                       NVIC_EN0
                               EQU              0xE000E108  ; IRQ 0 to 31 Set E
                                                            nable Register
    9 00000000 E000E45C 
                       NVIC_PRI4
                               EQU              0xE000E45C  ; IRQ 92 to 95 Prio
                                                            rity Register
   10 00000000         
   11 00000000         ; 32/64 Timer Registers
   12 00000000 40036000 
                       TIMER0_CFG
                               EQU              0x40036000
   13 00000000 40036004 
                       TIMER0_TAMR
                               EQU              0x40036004
   14 00000000 40036008 
                       TIMER0_TAMR_B
                               EQU              0x40036008
   15 00000000 4003600C 
                       TIMER0_CTL
                               EQU              0x4003600C
   16 00000000 40036018 
                       TIMER0_IMR
                               EQU              0x40036018
   17 00000000 4003601C 
                       TIMER0_RIS
                               EQU              0x4003601C  ; Timer Interrupt S
                                                            tatus
   18 00000000 40036024 
                       TIMER0_ICR
                               EQU              0x40036024  ; Timer Interrupt C
                                                            lear
   19 00000000 40036028 
                       TIMER0_TAILR
                               EQU              0x40036028  ; Timer interval
   20 00000000 4003602C 
                       TIMER0_TAILR_B
                               EQU              0x4003602C  ; Timer interval
   21 00000000 40036038 
                       TIMER0_TAPR
                               EQU              0x40036038
   22 00000000 4003603C 
                       TIMER0_TAPR_B
                               EQU              0x4003603C
   23 00000000 4003604C 
                       TIMER0_TAR_B
                               EQU              0x4003604C  ; Timer register
   24 00000000 40036050 
                       TIMER0_TAV
                               EQU              0x40036050  ; Timer register



ARM Macro Assembler    Page 2 


   25 00000000 40036030 
                       TIMER0_TAMATCHR
                               EQU              0x40036030  ; Timer register
   26 00000000 40036034 
                       TIMER0_TAMATCHR_B
                               EQU              0x40036034  ; Timer register
   27 00000000 40036040 
                       TIMER0_TAPMR
                               EQU              0x40036040  ; Timer register
   28 00000000 40036044 
                       TIMER0_TAPMR_B
                               EQU              0x40036044  ; Timer register
   29 00000000         
   30 00000000         ;GPIO Registers
   31 00000000 40025010 
                       GPIO_PORTF_DATA
                               EQU              0x40025010  ; Access BIT2
   32 00000000 40025400 
                       GPIO_PORTF_DIR
                               EQU              0x40025400  ; Port Direction
   33 00000000 40025420 
                       GPIO_PORTF_AFSEL
                               EQU              0x40025420  ; Alt Function enab
                                                            le
   34 00000000 4002551C 
                       GPIO_PORTF_DEN
                               EQU              0x4002551C  ; Digital Enable
   35 00000000 40025528 
                       GPIO_PORTF_AMSEL
                               EQU              0x40025528  ; Analog enable
   36 00000000 4002552C 
                       GPIO_PORTF_PCTL
                               EQU              0x4002552C  ; Alternate Functio
                                                            ns
   37 00000000         
   38 00000000         ;System Registers
   39 00000000 400FE608 
                       SYSCTL_RCGCGPIO
                               EQU              0x400FE608  ; GPIO Gate Control
                                                            
   40 00000000 400FE65C 
                       SYSCTL_RCGCTIMER
                               EQU              0x400FE65C  ; GPTM Gate Control
                                                            
   41 00000000         ; 32/64-bit Timer 0
   42 00000000         
   43 00000000         ;---------------------------------------------------
   44 00000000 01312D00 
                       MAX     EQU              0x1312D00   ; 20e6 useconds
   45 00000000 000F4240 
                       DECREASE
                               EQU              0xF4240     ; 1e6 useconds
   46 00000000 0007A120 
                       MAX_TIMER_A
                               EQU              0x7A120     ; 5e5 useconds
   47 00000000 0000004A 
                       Coordinate_Timer_X
                               EQU              74
   48 00000000 20000700 



ARM Macro Assembler    Page 3 


                       Memory_Battleship
                               EQU              0x20000700
   49 00000000 20000734 
                       Memory_Civilianship
                               EQU              0x20000734
   50 00000000 20000768 
                       Memory_Mine
                               EQU              0x20000768
   51 00000000 2000079C 
                       Memory_ShipCount
                               EQU              0x2000079C
   52 00000000 200007D0 
                       Memory_GamePhase
                               EQU              0x200007D0
   53 00000000         ;---------------------------------------------------
   54 00000000                 AREA             |.text|, READONLY, CODE
   55 00000000                 THUMB
   56 00000000         
   57 00000000         gameplayBorder
   58 00000000         ; 2_xxxx.xxxx (data content)
   59 00000000 00 00 00 
              00 00 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[0,13]
   60 0000000E 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[14,27]
   61 0000001C 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[28,41]
   62 0000002A 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[42,55]
   63 00000038 80 80 80 
              80 80 80 
              80 80 80 
              80 80 80 
              80 80            DCB              0x80, 0x80, 0x80, 0x80, 0x80, 0
x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 
                                                            ; 0:[56,69]
   64 00000046 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]
   65 00000054         
   66 00000054 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[0,13]
   67 00000062 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[14,27]
   68 00000070 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[28,41]
   69 0000007E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[42,55]
   70 0000008C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 1:[56,69]
   71 0000009A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 1:[70,83]
   72 000000A8         
   73 000000A8 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[0,13]
   74 000000B6 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0



ARM Macro Assembler    Page 5 


x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[14,27]
   75 000000C4 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[28,41]
   76 000000D2 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[42,55]
   77 000000E0 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 2:[56,69]
   78 000000EE 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 2:[70,83]
   79 000000FC         
   80 000000FC 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   81 0000010A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   82 00000118 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   83 00000126 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]



ARM Macro Assembler    Page 6 


   84 00000134 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   85 00000142 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   86 00000150         
   87 00000150 00 00 00 
              00 00 FF 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[0,13]
   88 0000015E 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[14,27]
   89 0000016C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[28,41]
   90 0000017A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[42,55]
   91 00000188 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 FF            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff 
                                                            ; 3:[56,69]
   92 00000196 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 3:[70,83]
   93 000001A4         
   94 000001A4 00 00 00 



ARM Macro Assembler    Page 7 


              00 00 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[0,13]
   95 000001B2 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[14,27]
   96 000001C0 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[28,41]
   97 000001CE 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[42,55]
   98 000001DC 01 01 01 
              01 01 01 
              01 01 01 
              01 01 01 
              01 01            DCB              0x01, 0x01, 0x01, 0x01, 0x01, 0
x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 
                                                            ; 0:[56,69]
   99 000001EA 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            DCB              0x00, 0x00, 0x00, 0x00, 0x00, 0
x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                                            ; 0:[70,83]
  100 000001F8         
  101 000001F8 32 30 04 
                       MSG_20s DCB              "20",0x04
  102 000001FB 31 39 04 
                       MSG_19s DCB              "19",0x04
  103 000001FE 31 38 04 
                       MSG_18s DCB              "18",0x04
  104 00000201 31 37 04 
                       MSG_17s DCB              "17",0x04
  105 00000204 31 36 04 
                       MSG_16s DCB              "16",0x04
  106 00000207 31 35 04 
                       MSG_15s DCB              "15",0x04
  107 0000020A 31 34 04 
                       MSG_14s DCB              "14",0x04
  108 0000020D 31 33 04 
                       MSG_13s DCB              "13",0x04
  109 00000210 31 32 04 



ARM Macro Assembler    Page 8 


                       MSG_12s DCB              "12",0x04
  110 00000213 31 31 04 
                       MSG_11s DCB              "11",0x04
  111 00000216 31 30 04 
                       MSG_10s DCB              "10",0x04
  112 00000219 30 39 04 
                       MSG_9s  DCB              "09",0x04
  113 0000021C 30 38 04 
                       MSG_8s  DCB              "08",0x04
  114 0000021F 30 37 04 
                       MSG_7s  DCB              "07",0x04
  115 00000222 30 36 04 
                       MSG_6s  DCB              "06",0x04
  116 00000225 30 35 04 
                       MSG_5s  DCB              "05",0x04
  117 00000228 30 34 04 
                       MSG_4s  DCB              "04",0x04
  118 0000022B 30 33 04 
                       MSG_3s  DCB              "03",0x04
  119 0000022E 30 32 04 
                       MSG_2s  DCB              "02",0x04
  120 00000231 30 31 04 
                       MSG_1s  DCB              "01",0x04
  121 00000234 30 30 04 
                       MSG_0s  DCB              "00",0x04
  122 00000237 20 20 04 
                       MSG_ClearTimer
                               DCB              "  ",0x04
  123 0000023A         
  124 0000023A                 AREA             routines, CODE, READONLY
  125 00000000                 THUMB
  126 00000000         
  127 00000000                 EXPORT           WideTimer0A_Handler
  128 00000000                 EXPORT           WideTimer0B_Handler
  129 00000000                 EXPORT           Timers_Init
  130 00000000                 EXPORT           Enable_Timers
  131 00000000         
  132 00000000         ;----------------------------------
  133 00000000         ; Screen functions
  134 00000000         ;----------------------------------
  135 00000000                 EXTERN           Nokia_Init
  136 00000000                 EXTERN           OutImgNokia
  137 00000000                 EXTERN           SetCoordinate
  138 00000000                 EXTERN           TxByte
  139 00000000                 EXTERN           OutStrNokia
  140 00000000                 EXTERN           ClearNokia
  141 00000000         
  142 00000000                 EXTERN           Set_Coordinates_Mine
  143 00000000         
  144 00000000         ;-------------------------------------------
  145 00000000         ; Clears all screen.
  146 00000000         ; Outputs to timer location of the screen.
  147 00000000         ; "20".
  148 00000000         ;-------------------------------------------     
  149 00000000         WideTimer0A_Handler
                               PROC
  150 00000000 E92D 4FE0       PUSH{R5-R11,LR}              ; R0,R1,R2,R3,R12 a
                                                            re pushed to stack
  151 00000004         ; when interrupt occurs



ARM Macro Assembler    Page 9 


  152 00000004 498D            LDR              R1, =TIMER0_ICR
  153 00000006 F04F 000F       MOV              R0, #0xF
  154 0000000A 6008            STR              R0, [R1]
  155 0000000C 4E8C            LDR              R6, = Memory_GamePhase
  156 0000000E F896 9000       LDRB             R9, [R6]
  157 00000012 F109 0901       ADD              R9, R9, #1
  158 00000016 F886 9000       STRB             R9, [R6]
  159 0000001A F7FF FFFE       BL               OutStrNokia
  160 0000001E F7FF FFFE       BL               ClearNokia  ; clear the screen
  161 00000022 4D88            LDR              R5,=gameplayBorder
  162 00000024 F7FF FFFE       BL               OutImgNokia ; output the border
                                                            
  163 00000028 F04F 004A       LDR              R0, = Coordinate_Timer_X
  164 0000002C F04F 0100       MOV              R1, #0
  165 00000030 F7FF FFFE       BL               SetCoordinate
  166 00000034 4D84            LDR              R5,=MSG_20s
  167 00000036 F7FF FFFE       BL               OutStrNokia
  168 0000003A F104 0401       ADD              R4, R4, #1
  169 0000003E E8BD 4FE0       POP{R5-R11,LR}
  170 00000042 4770            BX               LR
  171 00000044                 ENDP
  172 00000044         
  173 00000044         ;-------------------------------------------
  174 00000044         ; Calculates the remaining timer
  175 00000044         ; Outputs it to timer location of the screen.
  176 00000044         ;-------------------------------------------
  177 00000044         WideTimer0B_Handler
                               PROC
  178 00000044 E92D 5FFF       PUSH{R0-R12,LR}
  179 00000048         ; clear interrupt flag
  180 00000048 497C            LDR              R1, =TIMER0_ICR
  181 0000004A F640 1211       MOV              R2, #0x911
  182 0000004E 4610            MOV              R0, R2      ; clear the interru
                                                            pts that are
  183 00000050         ; due to MATCH and TIME-OUT
  184 00000050 6008            STR              R0, [R1]
  185 00000052         
  186 00000052 497E            LDR              R1, =TIMER0_TAR_B
  187 00000054 6808            LDR              R0, [R1]
  188 00000056 497E            LDR              R1, = MAX
  189 00000058 4288            CMP              R0, R1      ; check if the time
                                                            r is reset
  190 0000005A         ; meaning 20s have passed
  191 0000005A         
  192 0000005A 4A7C            LDR              R2, =TIMER0_TAR_B
  193 0000005C 6811            LDR              R1, [R2]
  194 0000005E 487D            LDR              R0, =DECREASE
  195 00000060 EBA1 0000       SUB              R0, R1, R0  ; set the next MATC
                                                            H interrupt
  196 00000064 497C            LDR              R1, =TIMER0_TAMATCHR_B
  197 00000066 6008            STR              R0, [R1]    ; store it
  198 00000068         
  199 00000068         ; Toggle PortF Data, just for demonstration
  200 00000068 497C            LDR              R1, = GPIO_PORTF_DATA
  201 0000006A 6808            LDR              R0,[R1]
  202 0000006C F080 0004       EOR              R0,R0,#0x04
  203 00000070 6008            STR              R0, [R1]
  204 00000072         
  205 00000072 F244 2240 



ARM Macro Assembler    Page 10 


              F2C0 020F        MOV32            R2, #1000000
  206 0000007A 4974            LDR              R1, = TIMER0_TAR_B
  207 0000007C 6808            LDR              R0, [R1]
  208 0000007E FBB0 F0F2       UDIV             R0, R0 ,R2  ; R0 is the remaini
                                                            ng time in seconds
  209 00000082 F100 0001       ADD              R0, R0, #1
  210 00000086         R19s
  211 00000086 2813            CMP              R0, #19
  212 00000088 D101            BNE              R18s
  213 0000008A 4C75            LDR              R4, = MSG_19s ; save the string
                                                             in R4
  214 0000008C E049            B                Output_Remaning_Time
  215 0000008E         R18s
  216 0000008E 2812            CMP              R0, #18
  217 00000090 D101            BNE              R17s
  218 00000092 4C74            LDR              R4, = MSG_18s ; save the string
                                                             in R4
  219 00000094 E045            B                Output_Remaning_Time
  220 00000096         R17s
  221 00000096 2811            CMP              R0, #17
  222 00000098 D101            BNE              R16s
  223 0000009A 4C73            LDR              R4, = MSG_17s ; save the string
                                                             in R4
  224 0000009C E041            B                Output_Remaning_Time
  225 0000009E         R16s
  226 0000009E 2810            CMP              R0, #16
  227 000000A0 D101            BNE              R15s
  228 000000A2 4C72            LDR              R4, = MSG_16s ; save the string
                                                             in R4
  229 000000A4 E03D            B                Output_Remaning_Time
  230 000000A6         R15s
  231 000000A6 280F            CMP              R0, #15
  232 000000A8 D101            BNE              R14s
  233 000000AA 4C71            LDR              R4, = MSG_15s ; save the string
                                                             in R4
  234 000000AC E039            B                Output_Remaning_Time
  235 000000AE         R14s
  236 000000AE 280E            CMP              R0, #14
  237 000000B0 D101            BNE              R13s
  238 000000B2 4C70            LDR              R4, = MSG_14s ; save the string
                                                             in R4
  239 000000B4 E035            B                Output_Remaning_Time
  240 000000B6         R13s
  241 000000B6 280D            CMP              R0, #13
  242 000000B8 D101            BNE              R12s
  243 000000BA 4C6F            LDR              R4, = MSG_13s ; save the string
                                                             in R4
  244 000000BC E031            B                Output_Remaning_Time
  245 000000BE         R12s
  246 000000BE 280C            CMP              R0, #12
  247 000000C0 D101            BNE              R11s
  248 000000C2 4C6E            LDR              R4, = MSG_12s ; save the string
                                                             in R4
  249 000000C4 E02D            B                Output_Remaning_Time
  250 000000C6         R11s
  251 000000C6 280B            CMP              R0, #11
  252 000000C8 D101            BNE              R10s
  253 000000CA 4C6D            LDR              R4, = MSG_11s ; save the string
                                                             in R4



ARM Macro Assembler    Page 11 


  254 000000CC E029            B                Output_Remaning_Time
  255 000000CE         R10s
  256 000000CE 280A            CMP              R0, #10
  257 000000D0 D101            BNE              R9s
  258 000000D2 4C6C            LDR              R4, = MSG_10s ; save the string
                                                             in R4
  259 000000D4 E025            B                Output_Remaning_Time
  260 000000D6         R9s
  261 000000D6 2809            CMP              R0, #9
  262 000000D8 D101            BNE              R8s
  263 000000DA 4C6B            LDR              R4, = MSG_9s ; save the string 
                                                            in R4
  264 000000DC E021            B                Output_Remaning_Time
  265 000000DE         R8s
  266 000000DE 2808            CMP              R0, #8
  267 000000E0 D101            BNE              R7s
  268 000000E2 4C6A            LDR              R4, = MSG_8s ; save the string 
                                                            in R4
  269 000000E4 E01D            B                Output_Remaning_Time
  270 000000E6         R7s
  271 000000E6 2807            CMP              R0, #7
  272 000000E8 D101            BNE              R6s
  273 000000EA 4C69            LDR              R4, = MSG_7s ; save the string 
                                                            in R4
  274 000000EC E019            B                Output_Remaning_Time
  275 000000EE         R6s
  276 000000EE 2806            CMP              R0, #6
  277 000000F0 D101            BNE              R5s
  278 000000F2 4C68            LDR              R4, = MSG_6s ; save the string 
                                                            in R4
  279 000000F4 E015            B                Output_Remaning_Time
  280 000000F6         R5s
  281 000000F6 2805            CMP              R0, #5
  282 000000F8 D101            BNE              R4s
  283 000000FA 4C67            LDR              R4, = MSG_5s ; save the string 
                                                            in R4
  284 000000FC E011            B                Output_Remaning_Time
  285 000000FE         R4s
  286 000000FE 2804            CMP              R0, #4
  287 00000100 D101            BNE              R3s
  288 00000102 4C66            LDR              R4, = MSG_4s ; save the string 
                                                            in R4
  289 00000104 E00D            B                Output_Remaning_Time
  290 00000106         R3s
  291 00000106 2803            CMP              R0, #3
  292 00000108 D101            BNE              R2s
  293 0000010A 4C65            LDR              R4, = MSG_3s ; save the string 
                                                            in R4
  294 0000010C E009            B                Output_Remaning_Time
  295 0000010E         R2s
  296 0000010E 2802            CMP              R0, #2
  297 00000110 D101            BNE              R1s
  298 00000112 4C64            LDR              R4, = MSG_2s ; save the string 
                                                            in R4
  299 00000114 E005            B                Output_Remaning_Time
  300 00000116         R1s
  301 00000116 2801            CMP              R0, #1
  302 00000118 D101            BNE              R0s
  303 0000011A 4C63            LDR              R4, = MSG_1s ; save the string 



ARM Macro Assembler    Page 12 


                                                            in R4
  304 0000011C E001            B                Output_Remaning_Time
  305 0000011E         R0s
  306 0000011E 4C63            LDR              R4, = MSG_0s ; save the string 
                                                            in R4
  307 00000120 E7FF            B                Output_Remaning_Time
  308 00000122         
  309 00000122         
  310 00000122         
  311 00000122         Output_Remaning_Time
  312 00000122 F04F 004A       LDR              R0, = Coordinate_Timer_X
  313 00000126 F04F 0100       MOV              R1, #0
  314 0000012A F7FF FFFE       BL               SetCoordinate
  315 0000012E 4D60            LDR              R5, = MSG_ClearTimer
  316 00000130 F7FF FFFE       BL               OutStrNokia
  317 00000134 F04F 004A       LDR              R0, = Coordinate_Timer_X
  318 00000138 F04F 0100       MOV              R1, #0
  319 0000013C F7FF FFFE       BL               SetCoordinate
  320 00000140 4625            MOV              R5, R4
  321 00000142 F7FF FFFE       BL               OutStrNokia
  322 00000146 E8BD 5FFF       POP{R0-R12,LR}
  323 0000014A 4770            BX               LR
  324 0000014C                 ENDP
  325 0000014C         
  326 0000014C         ;-------------------------------------------
  327 0000014C         ; Enables timers.
  328 0000014C         ; TimerA of 0.5 seconds triggers TimerB of 20 seconds.
  329 0000014C         ;-------------------------------------------
  330 0000014C         Enable_Timers
  331 0000014C B407            PUSH{R0-R2}
  332 0000014E B500            PUSH{LR}
  333 00000150 4958            LDR              R1, =TIMER0_CTL
  334 00000152 6808            LDR              R0, [R1]
  335 00000154 F240 3203       MOV              R2, #0x303  ; Enable timer
  336 00000158 EA40 0002       ORR              R0, R0, R2  ; set bit0 to enabl
                                                            e A and B
  337 0000015C 6008            STR              R0, [R1]    ; and bit 1 to stal
                                                            l on debug
  338 0000015E F85D EB04       POP{LR}
  339 00000162 BC07            POP{R0-R2}
  340 00000164 4770            BX               LR
  341 00000166         
  342 00000166         Timers_Init
                               PROC
  343 00000166 B407            PUSH{R0-R2}
  344 00000168 4953            LDR              R1, =SYSCTL_RCGCGPIO 
                                                            ; start GPIO clock
  345 0000016A 6808            LDR              R0, [R1]
  346 0000016C F040 0020       ORR              R0, R0, #0x20 ; set bit 5 for p
                                                            ort F
  347 00000170 6008            STR              R0, [R1]
  348 00000172 BF00            NOP                          ; allow clock to se
                                                            ttle
  349 00000174 BF00            NOP
  350 00000176 BF00            NOP
  351 00000178 4950            LDR              R1, =GPIO_PORTF_DIR ; set direc
                                                            tion of PF2
  352 0000017A 6808            LDR              R0, [R1]
  353 0000017C F040 0004       ORR              R0, R0, #0x04 ; set bit2 for ou



ARM Macro Assembler    Page 13 


                                                            tput
  354 00000180 6008            STR              R0, [R1]
  355 00000182 494F            LDR              R1, =GPIO_PORTF_AFSEL ; regular
                                                             port function
  356 00000184 6808            LDR              R0, [R1]
  357 00000186 F020 0004       BIC              R0, R0, #0x04
  358 0000018A 6008            STR              R0, [R1]
  359 0000018C 494D            LDR              R1, =GPIO_PORTF_PCTL ; no alter
                                                            nate function
  360 0000018E 6808            LDR              R0, [R1]
  361 00000190 F420 6070       BIC              R0, R0, #0x00000F00
  362 00000194 6008            STR              R0, [R1]
  363 00000196 494C            LDR              R1, =GPIO_PORTF_AMSEL 
                                                            ; disable analog
  364 00000198 F04F 0000       MOV              R0, #0
  365 0000019C 6008            STR              R0, [R1]
  366 0000019E 494B            LDR              R1, =GPIO_PORTF_DEN ; enable po
                                                            rt digital
  367 000001A0 6808            LDR              R0, [R1]
  368 000001A2 F040 0004       ORR              R0, R0, #0x04
  369 000001A6 6008            STR              R0, [R1]
  370 000001A8         
  371 000001A8 4949            LDR              R1, =SYSCTL_RCGCTIMER ; Start 3
                                                            2/64-bit Timer 0
  372 000001AA 6808            LDR              R0, [R1]
  373 000001AC F040 0001       ORR              R0, R0, #0x01
  374 000001B0 6008            STR              R0, [R1]
  375 000001B2 BF00            NOP                          ; allow clock to se
                                                            ttle
  376 000001B4 BF00            NOP
  377 000001B6 BF00            NOP
  378 000001B8 493E            LDR              R1, =TIMER0_CTL ; disable timer
                                                             during setup LDR R
                                                            2, [R1]
  379 000001BA 6808            LDR              R0, [R1]
  380 000001BC F240 1201       MOV              R2, #0x101
  381 000001C0 EA20 0002       BIC              R0, R0, R2  ; clear A and B
  382 000001C4 6008            STR              R0, [R1]
  383 000001C6 4943            LDR              R1, =TIMER0_CFG 
                                                            ; set 32 bit mode
  384 000001C8 F04F 0004       MOV              R0, #0x04
  385 000001CC 6008            STR              R0, [R1]
  386 000001CE 4942            LDR              R1, =TIMER0_TAMR_B
  387 000001D0 F04F 0061       MOV              R0, #0x61   ; set to one shot, 
                                                            count down
  388 000001D4 6008            STR              R0, [R1]
  389 000001D6 491E            LDR              R1, =MAX
  390 000001D8 481E            LDR              R0, =DECREASE
  391 000001DA EBA1 0000       SUB              R0, R1, R0
  392 000001DE 491E            LDR              R1, =TIMER0_TAMATCHR_B
  393 000001E0 6008            STR              R0, [R1]
  394 000001E2 493E            LDR              R1, =TIMER0_TAILR_B ; initializ
                                                            e match clocks
  395 000001E4 481A            LDR              R0, =MAX
  396 000001E6 6008            STR              R0, [R1]
  397 000001E8 493D            LDR              R1, =TIMER0_TAPR_B
  398 000001EA F04F 000F       MOV              R0, #15     ; divide clock by 1
                                                            6 to
  399 000001EE 6008            STR              R0, [R1]    ; get 1us clocks



ARM Macro Assembler    Page 14 


  400 000001F0         ; LDR R1, =TIMER0_TAPMR_B
  401 000001F0         ; MOV R0, #15 ; divide clock by 16 to
  402 000001F0         ; STR R0, [R1] ; get 1us clocks
  403 000001F0 493C            LDR              R1, =TIMER0_IMR ; enable timeou
                                                            t interrupt
  404 000001F2 F640 1001       MOV              R0, #0x901  ; A and B interrupt
                                                             enable
  405 000001F6 6008            STR              R0, [R1]
  406 000001F8         ; - - - - - - - - - -- - - - - - -
  407 000001F8 493B            LDR              R1, =TIMER0_TAMR
  408 000001FA F04F 0001       MOV              R0, #0x01   ; set to one shot, 
                                                            count down, wait tr
                                                            igger enabled
  409 000001FE 6008            STR              R0, [R1]
  410 00000200 493A            LDR              R1, =TIMER0_TAPR
  411 00000202 F04F 000F       MOV              R0, #15     ; divide clock by 1
                                                            6 to
  412 00000206 6008            STR              R0, [R1]    ; get 1us clocks
  413 00000208 4939            LDR              R1, =TIMER0_TAILR ; initialize 
                                                            match clocks
  414 0000020A 483A            LDR              R0, =MAX_TIMER_A
  415 0000020C 6008            STR              R0, [R1]
  416 0000020E         ; - - - - - - - - - -- - - - - - -
  417 0000020E         ; Configure interrupt priorities
  418 0000020E         ; Timer0A is interrupt #94.
  419 0000020E         ; Interrupts 92-95 are handled by NVIC register PRI23.
  420 0000020E         ; set NVIC interrupt 94-95 to priority 2
  421 0000020E 493A            LDR              R1, =NVIC_PRI4
  422 00000210 6808            LDR              R0, [R1]
  423 00000212 F64F 72FF 
              F2C0 0200        MOV32            R2, #0x0000FFFF
  424 0000021A EA00 0002       AND              R0, R0, R2  ; clear interrupt
  425 0000021E F240 0200 
              F2C4 0240        MOV32            R2,  #0x40400000
  426 00000226 EA40 0002       ORR              R0, R0, R2  ; set interrupt
  427 0000022A 6008            STR              R0, [R1]
  428 0000022C         ; NVIC has to be enabled
  429 0000022C         ; Interrupts 64-95 are handled by NVIC register EN2
  430 0000022C         ; Interrupt 94 is controlled by bit 30-31
  431 0000022C 4933            LDR              R1, =NVIC_EN0
  432 0000022E 6808            LDR              R0, [R1]
  433 00000230 F040 4040       ORR              R0, R0, #0xC0000000 ; set bit 3
                                                            0-31 to enable inte
                                                            rrupt 94-95
  434 00000234 6008            STR              R0, [R1]
  435 00000236 BC07            POP{R0-R2}
  436 00000238 4770            BX               LR          ; return
  437 0000023A                 ENDP
  438 0000023A                 END
              00 00 40036024 
              200007D0 
              00000000 
              00000000 
              4003604C 
              01312D00 
              000F4240 
              40036034 
              40025010 
              00000000 



ARM Macro Assembler    Page 15 


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              4003600C 
              400FE608 
              40025400 
              40025420 
              4002552C 
              40025528 
              4002551C 
              400FE65C 
              40036000 
              40036008 
              4003602C 
              4003603C 
              40036018 
              40036004 
              40036038 
              40036028 
              0007A120 
              E000E45C 
              E000E108 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\timers_funciton_class.d -o.\objects\timers_funciton_c
lass.o -I.\RTE\_EE447-Project -ID:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\
Include\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pr
edefine="__UVISION_VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.
\listings\timers_funciton_class.lst Timers_Funciton_Class.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 54 in file Timers_Funciton_Class.s
   Uses
      None
Comment: .text unused
MSG_0s 00000234

Symbol: MSG_0s
   Definitions
      At line 121 in file Timers_Funciton_Class.s
   Uses
      At line 306 in file Timers_Funciton_Class.s
Comment: MSG_0s used once
MSG_10s 00000216

Symbol: MSG_10s
   Definitions
      At line 111 in file Timers_Funciton_Class.s
   Uses
      At line 258 in file Timers_Funciton_Class.s
Comment: MSG_10s used once
MSG_11s 00000213

Symbol: MSG_11s
   Definitions
      At line 110 in file Timers_Funciton_Class.s
   Uses
      At line 253 in file Timers_Funciton_Class.s
Comment: MSG_11s used once
MSG_12s 00000210

Symbol: MSG_12s
   Definitions
      At line 109 in file Timers_Funciton_Class.s
   Uses
      At line 248 in file Timers_Funciton_Class.s
Comment: MSG_12s used once
MSG_13s 0000020D

Symbol: MSG_13s
   Definitions
      At line 108 in file Timers_Funciton_Class.s
   Uses
      At line 243 in file Timers_Funciton_Class.s
Comment: MSG_13s used once
MSG_14s 0000020A

Symbol: MSG_14s
   Definitions
      At line 107 in file Timers_Funciton_Class.s
   Uses
      At line 238 in file Timers_Funciton_Class.s
Comment: MSG_14s used once
MSG_15s 00000207

Symbol: MSG_15s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 106 in file Timers_Funciton_Class.s
   Uses
      At line 233 in file Timers_Funciton_Class.s
Comment: MSG_15s used once
MSG_16s 00000204

Symbol: MSG_16s
   Definitions
      At line 105 in file Timers_Funciton_Class.s
   Uses
      At line 228 in file Timers_Funciton_Class.s
Comment: MSG_16s used once
MSG_17s 00000201

Symbol: MSG_17s
   Definitions
      At line 104 in file Timers_Funciton_Class.s
   Uses
      At line 223 in file Timers_Funciton_Class.s
Comment: MSG_17s used once
MSG_18s 000001FE

Symbol: MSG_18s
   Definitions
      At line 103 in file Timers_Funciton_Class.s
   Uses
      At line 218 in file Timers_Funciton_Class.s
Comment: MSG_18s used once
MSG_19s 000001FB

Symbol: MSG_19s
   Definitions
      At line 102 in file Timers_Funciton_Class.s
   Uses
      At line 213 in file Timers_Funciton_Class.s
Comment: MSG_19s used once
MSG_1s 00000231

Symbol: MSG_1s
   Definitions
      At line 120 in file Timers_Funciton_Class.s
   Uses
      At line 303 in file Timers_Funciton_Class.s
Comment: MSG_1s used once
MSG_20s 000001F8

Symbol: MSG_20s
   Definitions
      At line 101 in file Timers_Funciton_Class.s
   Uses
      At line 166 in file Timers_Funciton_Class.s
Comment: MSG_20s used once
MSG_2s 0000022E

Symbol: MSG_2s
   Definitions
      At line 119 in file Timers_Funciton_Class.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 298 in file Timers_Funciton_Class.s
Comment: MSG_2s used once
MSG_3s 0000022B

Symbol: MSG_3s
   Definitions
      At line 118 in file Timers_Funciton_Class.s
   Uses
      At line 293 in file Timers_Funciton_Class.s
Comment: MSG_3s used once
MSG_4s 00000228

Symbol: MSG_4s
   Definitions
      At line 117 in file Timers_Funciton_Class.s
   Uses
      At line 288 in file Timers_Funciton_Class.s
Comment: MSG_4s used once
MSG_5s 00000225

Symbol: MSG_5s
   Definitions
      At line 116 in file Timers_Funciton_Class.s
   Uses
      At line 283 in file Timers_Funciton_Class.s
Comment: MSG_5s used once
MSG_6s 00000222

Symbol: MSG_6s
   Definitions
      At line 115 in file Timers_Funciton_Class.s
   Uses
      At line 278 in file Timers_Funciton_Class.s
Comment: MSG_6s used once
MSG_7s 0000021F

Symbol: MSG_7s
   Definitions
      At line 114 in file Timers_Funciton_Class.s
   Uses
      At line 273 in file Timers_Funciton_Class.s
Comment: MSG_7s used once
MSG_8s 0000021C

Symbol: MSG_8s
   Definitions
      At line 113 in file Timers_Funciton_Class.s
   Uses
      At line 268 in file Timers_Funciton_Class.s
Comment: MSG_8s used once
MSG_9s 00000219

Symbol: MSG_9s
   Definitions
      At line 112 in file Timers_Funciton_Class.s
   Uses
      At line 263 in file Timers_Funciton_Class.s
Comment: MSG_9s used once
MSG_ClearTimer 00000237



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: MSG_ClearTimer
   Definitions
      At line 122 in file Timers_Funciton_Class.s
   Uses
      At line 315 in file Timers_Funciton_Class.s
Comment: MSG_ClearTimer used once
gameplayBorder 00000000

Symbol: gameplayBorder
   Definitions
      At line 57 in file Timers_Funciton_Class.s
   Uses
      At line 161 in file Timers_Funciton_Class.s
Comment: gameplayBorder used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Enable_Timers 0000014C

Symbol: Enable_Timers
   Definitions
      At line 330 in file Timers_Funciton_Class.s
   Uses
      At line 130 in file Timers_Funciton_Class.s
Comment: Enable_Timers used once
Output_Remaning_Time 00000122

Symbol: Output_Remaning_Time
   Definitions
      At line 311 in file Timers_Funciton_Class.s
   Uses
      At line 214 in file Timers_Funciton_Class.s
      At line 219 in file Timers_Funciton_Class.s
      At line 224 in file Timers_Funciton_Class.s
      At line 229 in file Timers_Funciton_Class.s
      At line 234 in file Timers_Funciton_Class.s
      At line 239 in file Timers_Funciton_Class.s
      At line 244 in file Timers_Funciton_Class.s
      At line 249 in file Timers_Funciton_Class.s
      At line 254 in file Timers_Funciton_Class.s
      At line 259 in file Timers_Funciton_Class.s
      At line 264 in file Timers_Funciton_Class.s
      At line 269 in file Timers_Funciton_Class.s
      At line 274 in file Timers_Funciton_Class.s
      At line 279 in file Timers_Funciton_Class.s
      At line 284 in file Timers_Funciton_Class.s
      At line 289 in file Timers_Funciton_Class.s
      At line 294 in file Timers_Funciton_Class.s
      At line 299 in file Timers_Funciton_Class.s
      At line 304 in file Timers_Funciton_Class.s
      At line 307 in file Timers_Funciton_Class.s

R0s 0000011E

Symbol: R0s
   Definitions
      At line 305 in file Timers_Funciton_Class.s
   Uses
      At line 302 in file Timers_Funciton_Class.s
Comment: R0s used once
R10s 000000CE

Symbol: R10s
   Definitions
      At line 255 in file Timers_Funciton_Class.s
   Uses
      At line 252 in file Timers_Funciton_Class.s
Comment: R10s used once
R11s 000000C6

Symbol: R11s
   Definitions
      At line 250 in file Timers_Funciton_Class.s
   Uses
      At line 247 in file Timers_Funciton_Class.s
Comment: R11s used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

R12s 000000BE

Symbol: R12s
   Definitions
      At line 245 in file Timers_Funciton_Class.s
   Uses
      At line 242 in file Timers_Funciton_Class.s
Comment: R12s used once
R13s 000000B6

Symbol: R13s
   Definitions
      At line 240 in file Timers_Funciton_Class.s
   Uses
      At line 237 in file Timers_Funciton_Class.s
Comment: R13s used once
R14s 000000AE

Symbol: R14s
   Definitions
      At line 235 in file Timers_Funciton_Class.s
   Uses
      At line 232 in file Timers_Funciton_Class.s
Comment: R14s used once
R15s 000000A6

Symbol: R15s
   Definitions
      At line 230 in file Timers_Funciton_Class.s
   Uses
      At line 227 in file Timers_Funciton_Class.s
Comment: R15s used once
R16s 0000009E

Symbol: R16s
   Definitions
      At line 225 in file Timers_Funciton_Class.s
   Uses
      At line 222 in file Timers_Funciton_Class.s
Comment: R16s used once
R17s 00000096

Symbol: R17s
   Definitions
      At line 220 in file Timers_Funciton_Class.s
   Uses
      At line 217 in file Timers_Funciton_Class.s
Comment: R17s used once
R18s 0000008E

Symbol: R18s
   Definitions
      At line 215 in file Timers_Funciton_Class.s
   Uses
      At line 212 in file Timers_Funciton_Class.s
Comment: R18s used once
R19s 00000086

Symbol: R19s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 210 in file Timers_Funciton_Class.s
   Uses
      None
Comment: R19s unused
R1s 00000116

Symbol: R1s
   Definitions
      At line 300 in file Timers_Funciton_Class.s
   Uses
      At line 297 in file Timers_Funciton_Class.s
Comment: R1s used once
R2s 0000010E

Symbol: R2s
   Definitions
      At line 295 in file Timers_Funciton_Class.s
   Uses
      At line 292 in file Timers_Funciton_Class.s
Comment: R2s used once
R3s 00000106

Symbol: R3s
   Definitions
      At line 290 in file Timers_Funciton_Class.s
   Uses
      At line 287 in file Timers_Funciton_Class.s
Comment: R3s used once
R4s 000000FE

Symbol: R4s
   Definitions
      At line 285 in file Timers_Funciton_Class.s
   Uses
      At line 282 in file Timers_Funciton_Class.s
Comment: R4s used once
R5s 000000F6

Symbol: R5s
   Definitions
      At line 280 in file Timers_Funciton_Class.s
   Uses
      At line 277 in file Timers_Funciton_Class.s
Comment: R5s used once
R6s 000000EE

Symbol: R6s
   Definitions
      At line 275 in file Timers_Funciton_Class.s
   Uses
      At line 272 in file Timers_Funciton_Class.s
Comment: R6s used once
R7s 000000E6

Symbol: R7s
   Definitions
      At line 270 in file Timers_Funciton_Class.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 267 in file Timers_Funciton_Class.s
Comment: R7s used once
R8s 000000DE

Symbol: R8s
   Definitions
      At line 265 in file Timers_Funciton_Class.s
   Uses
      At line 262 in file Timers_Funciton_Class.s
Comment: R8s used once
R9s 000000D6

Symbol: R9s
   Definitions
      At line 260 in file Timers_Funciton_Class.s
   Uses
      At line 257 in file Timers_Funciton_Class.s
Comment: R9s used once
Timers_Init 00000166

Symbol: Timers_Init
   Definitions
      At line 342 in file Timers_Funciton_Class.s
   Uses
      At line 129 in file Timers_Funciton_Class.s
Comment: Timers_Init used once
WideTimer0A_Handler 00000000

Symbol: WideTimer0A_Handler
   Definitions
      At line 149 in file Timers_Funciton_Class.s
   Uses
      At line 127 in file Timers_Funciton_Class.s
Comment: WideTimer0A_Handler used once
WideTimer0B_Handler 00000044

Symbol: WideTimer0B_Handler
   Definitions
      At line 177 in file Timers_Funciton_Class.s
   Uses
      At line 128 in file Timers_Funciton_Class.s
Comment: WideTimer0B_Handler used once
routines 00000000

Symbol: routines
   Definitions
      At line 124 in file Timers_Funciton_Class.s
   Uses
      None
Comment: routines unused
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Coordinate_Timer_X 0000004A

Symbol: Coordinate_Timer_X
   Definitions
      At line 47 in file Timers_Funciton_Class.s
   Uses
      At line 163 in file Timers_Funciton_Class.s
      At line 312 in file Timers_Funciton_Class.s
      At line 317 in file Timers_Funciton_Class.s

DECREASE 000F4240

Symbol: DECREASE
   Definitions
      At line 45 in file Timers_Funciton_Class.s
   Uses
      At line 194 in file Timers_Funciton_Class.s
      At line 390 in file Timers_Funciton_Class.s

GPIO_PORTF_AFSEL 40025420

Symbol: GPIO_PORTF_AFSEL
   Definitions
      At line 33 in file Timers_Funciton_Class.s
   Uses
      At line 355 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_AFSEL used once
GPIO_PORTF_AMSEL 40025528

Symbol: GPIO_PORTF_AMSEL
   Definitions
      At line 35 in file Timers_Funciton_Class.s
   Uses
      At line 363 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_AMSEL used once
GPIO_PORTF_DATA 40025010

Symbol: GPIO_PORTF_DATA
   Definitions
      At line 31 in file Timers_Funciton_Class.s
   Uses
      At line 200 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_DATA used once
GPIO_PORTF_DEN 4002551C

Symbol: GPIO_PORTF_DEN
   Definitions
      At line 34 in file Timers_Funciton_Class.s
   Uses
      At line 366 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_DEN used once
GPIO_PORTF_DIR 40025400

Symbol: GPIO_PORTF_DIR
   Definitions
      At line 32 in file Timers_Funciton_Class.s
   Uses
      At line 351 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_DIR used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_PCTL 4002552C

Symbol: GPIO_PORTF_PCTL
   Definitions
      At line 36 in file Timers_Funciton_Class.s
   Uses
      At line 359 in file Timers_Funciton_Class.s
Comment: GPIO_PORTF_PCTL used once
MAX 01312D00

Symbol: MAX
   Definitions
      At line 44 in file Timers_Funciton_Class.s
   Uses
      At line 188 in file Timers_Funciton_Class.s
      At line 389 in file Timers_Funciton_Class.s
      At line 395 in file Timers_Funciton_Class.s

MAX_TIMER_A 0007A120

Symbol: MAX_TIMER_A
   Definitions
      At line 46 in file Timers_Funciton_Class.s
   Uses
      At line 414 in file Timers_Funciton_Class.s
Comment: MAX_TIMER_A used once
Memory_Battleship 20000700

Symbol: Memory_Battleship
   Definitions
      At line 48 in file Timers_Funciton_Class.s
   Uses
      None
Comment: Memory_Battleship unused
Memory_Civilianship 20000734

Symbol: Memory_Civilianship
   Definitions
      At line 49 in file Timers_Funciton_Class.s
   Uses
      None
Comment: Memory_Civilianship unused
Memory_GamePhase 200007D0

Symbol: Memory_GamePhase
   Definitions
      At line 52 in file Timers_Funciton_Class.s
   Uses
      At line 155 in file Timers_Funciton_Class.s
Comment: Memory_GamePhase used once
Memory_Mine 20000768

Symbol: Memory_Mine
   Definitions
      At line 50 in file Timers_Funciton_Class.s
   Uses
      None
Comment: Memory_Mine unused
Memory_ShipCount 2000079C



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: Memory_ShipCount
   Definitions
      At line 51 in file Timers_Funciton_Class.s
   Uses
      None
Comment: Memory_ShipCount unused
NVIC_EN0 E000E108

Symbol: NVIC_EN0
   Definitions
      At line 8 in file Timers_Funciton_Class.s
   Uses
      At line 431 in file Timers_Funciton_Class.s
Comment: NVIC_EN0 used once
NVIC_PRI4 E000E45C

Symbol: NVIC_PRI4
   Definitions
      At line 9 in file Timers_Funciton_Class.s
   Uses
      At line 421 in file Timers_Funciton_Class.s
Comment: NVIC_PRI4 used once
SYSCTL_RCGCGPIO 400FE608

Symbol: SYSCTL_RCGCGPIO
   Definitions
      At line 39 in file Timers_Funciton_Class.s
   Uses
      At line 344 in file Timers_Funciton_Class.s
Comment: SYSCTL_RCGCGPIO used once
SYSCTL_RCGCTIMER 400FE65C

Symbol: SYSCTL_RCGCTIMER
   Definitions
      At line 40 in file Timers_Funciton_Class.s
   Uses
      At line 371 in file Timers_Funciton_Class.s
Comment: SYSCTL_RCGCTIMER used once
TIMER0_CFG 40036000

Symbol: TIMER0_CFG
   Definitions
      At line 12 in file Timers_Funciton_Class.s
   Uses
      At line 383 in file Timers_Funciton_Class.s
Comment: TIMER0_CFG used once
TIMER0_CTL 4003600C

Symbol: TIMER0_CTL
   Definitions
      At line 15 in file Timers_Funciton_Class.s
   Uses
      At line 333 in file Timers_Funciton_Class.s
      At line 378 in file Timers_Funciton_Class.s

TIMER0_ICR 40036024

Symbol: TIMER0_ICR



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 18 in file Timers_Funciton_Class.s
   Uses
      At line 152 in file Timers_Funciton_Class.s
      At line 180 in file Timers_Funciton_Class.s

TIMER0_IMR 40036018

Symbol: TIMER0_IMR
   Definitions
      At line 16 in file Timers_Funciton_Class.s
   Uses
      At line 403 in file Timers_Funciton_Class.s
Comment: TIMER0_IMR used once
TIMER0_RIS 4003601C

Symbol: TIMER0_RIS
   Definitions
      At line 17 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_RIS unused
TIMER0_TAILR 40036028

Symbol: TIMER0_TAILR
   Definitions
      At line 19 in file Timers_Funciton_Class.s
   Uses
      At line 413 in file Timers_Funciton_Class.s
Comment: TIMER0_TAILR used once
TIMER0_TAILR_B 4003602C

Symbol: TIMER0_TAILR_B
   Definitions
      At line 20 in file Timers_Funciton_Class.s
   Uses
      At line 394 in file Timers_Funciton_Class.s
Comment: TIMER0_TAILR_B used once
TIMER0_TAMATCHR 40036030

Symbol: TIMER0_TAMATCHR
   Definitions
      At line 25 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_TAMATCHR unused
TIMER0_TAMATCHR_B 40036034

Symbol: TIMER0_TAMATCHR_B
   Definitions
      At line 26 in file Timers_Funciton_Class.s
   Uses
      At line 196 in file Timers_Funciton_Class.s
      At line 392 in file Timers_Funciton_Class.s

TIMER0_TAMR 40036004

Symbol: TIMER0_TAMR
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 13 in file Timers_Funciton_Class.s
   Uses
      At line 407 in file Timers_Funciton_Class.s
Comment: TIMER0_TAMR used once
TIMER0_TAMR_B 40036008

Symbol: TIMER0_TAMR_B
   Definitions
      At line 14 in file Timers_Funciton_Class.s
   Uses
      At line 386 in file Timers_Funciton_Class.s
Comment: TIMER0_TAMR_B used once
TIMER0_TAPMR 40036040

Symbol: TIMER0_TAPMR
   Definitions
      At line 27 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_TAPMR unused
TIMER0_TAPMR_B 40036044

Symbol: TIMER0_TAPMR_B
   Definitions
      At line 28 in file Timers_Funciton_Class.s
   Uses
      None
Comment: TIMER0_TAPMR_B unused
TIMER0_TAPR 40036038

Symbol: TIMER0_TAPR
   Definitions
      At line 21 in file Timers_Funciton_Class.s
   Uses
      At line 410 in file Timers_Funciton_Class.s
Comment: TIMER0_TAPR used once
TIMER0_TAPR_B 4003603C

Symbol: TIMER0_TAPR_B
   Definitions
      At line 22 in file Timers_Funciton_Class.s
   Uses
      At line 397 in file Timers_Funciton_Class.s
Comment: TIMER0_TAPR_B used once
TIMER0_TAR_B 4003604C

Symbol: TIMER0_TAR_B
   Definitions
      At line 23 in file Timers_Funciton_Class.s
   Uses
      At line 186 in file Timers_Funciton_Class.s
      At line 192 in file Timers_Funciton_Class.s
      At line 206 in file Timers_Funciton_Class.s

TIMER0_TAV 40036050

Symbol: TIMER0_TAV
   Definitions
      At line 24 in file Timers_Funciton_Class.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: TIMER0_TAV unused
36 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ClearNokia 00000000

Symbol: ClearNokia
   Definitions
      At line 140 in file Timers_Funciton_Class.s
   Uses
      At line 160 in file Timers_Funciton_Class.s
Comment: ClearNokia used once
Nokia_Init 00000000

Symbol: Nokia_Init
   Definitions
      At line 135 in file Timers_Funciton_Class.s
   Uses
      None
Comment: Nokia_Init unused
OutImgNokia 00000000

Symbol: OutImgNokia
   Definitions
      At line 136 in file Timers_Funciton_Class.s
   Uses
      At line 162 in file Timers_Funciton_Class.s
Comment: OutImgNokia used once
OutStrNokia 00000000

Symbol: OutStrNokia
   Definitions
      At line 139 in file Timers_Funciton_Class.s
   Uses
      At line 159 in file Timers_Funciton_Class.s
      At line 167 in file Timers_Funciton_Class.s
      At line 316 in file Timers_Funciton_Class.s
      At line 321 in file Timers_Funciton_Class.s

SetCoordinate 00000000

Symbol: SetCoordinate
   Definitions
      At line 137 in file Timers_Funciton_Class.s
   Uses
      At line 165 in file Timers_Funciton_Class.s
      At line 314 in file Timers_Funciton_Class.s
      At line 319 in file Timers_Funciton_Class.s

Set_Coordinates_Mine 00000000

Symbol: Set_Coordinates_Mine
   Definitions
      At line 142 in file Timers_Funciton_Class.s
   Uses
      None
Comment: Set_Coordinates_Mine unused
TxByte 00000000

Symbol: TxByte
   Definitions
      At line 138 in file Timers_Funciton_Class.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      None
Comment: TxByte unused
7 symbols
429 symbols in table
