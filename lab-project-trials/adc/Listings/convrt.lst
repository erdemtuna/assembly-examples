


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********
    2 00000000         ; CONVRT
    3 00000000         ; Converts the HEX number stored in R4 to 
    4 00000000         ; the decimal equivalent, stores the characters
    5 00000000         ; at the location specified by R5.
    6 00000000         ;*******************************************************
                       ********
    7 00000000         ;*******************************************************
                       ********
    8 00000000         ; EQU Directives
    9 00000000         ; These directives do not allocate memory
   10 00000000         ;*******************************************************
                       ********
   11 00000000         ;LABEL  DIRECTIVE VALUE  COMMENT
   12 00000000         ;OFFSET   EQU      0x10
   13 00000000         ;FIRST     EQU      0x20000400
   14 00000000         ;*******************************************************
                       ********
   15 00000000         ; Directives - This Data Section is part of the code
   16 00000000         ; It is in the read only section  so values cannot be ch
                       anged.
   17 00000000         ;*******************************************************
                       ********
   18 00000000         ;LABEL  DIRECTIVE VALUE  COMMENT
   19 00000000         ;            AREA        sdata, DATA, READONLY
   20 00000000         ;            THUMB
   21 00000000         ;CTR1     DCB      0x10
   22 00000000         ;MSG      DCB      "Copying table..."
   23 00000000         ;   DCB   0x0D
   24 00000000         ;   DCB   0x04
   25 00000000         ;*******************************************************
                       ********
   26 00000000         ; Program section
   27 00000000         ;*******************************************************
                       ********
   28 00000000         ;LABEL  DIRECTIVE VALUE  COMMENT
   29 00000000                 AREA             routines, READONLY, CODE
   30 00000000                 THUMB
   31 00000000                 EXPORT           CONVRT      ; Make available
   32 00000000         
   33 00000000         CONVRT  PROC
   34 00000000         
   35 00000000 BF00            NOP
   36 00000002 E7FF            B                SAVE
   37 00000004         
   38 00000004         SAVE
   39 00000004 E92D 1FFF       PUSH{R0-R12}
   40 00000008 E7FF            B                START
   41 0000000A         
   42 0000000A F04F 010A 
                       START   LDR              R1, = 10
   43 0000000E F04F 060A       LDR              R6, = 10
   44 00000012 4618            MOV              R0, R3      ; Number itself
   45 00000014 2800            CMP              R0, #0
   46 00000016 D027            BEQ              zero_Case
   47 00000018 2900            CMP              R1, #0      ;clear carry
   48 0000001A         
   49 0000001A D00C    LOOP    BEQ              NEXT



ARM Macro Assembler    Page 2 


   50 0000001C FBB0 F2F1       UDIV             R2, R0, R1  ; R2 = R0/10
   51 00000020 4614            MOV              R4, R2
   52 00000022 FB02 F201       MUL              R2, R1      ; R2 *= 10
   53 00000026 EBA0 0302       SUB              R3, R0, R2  ; R3 = R0-R2
   54 0000002A 4620            MOV              R0, R4
   55 0000002C F103 0330       ADD              R3, #0x30
   56 00000030         
   57 00000030 B408            PUSH             {R3}
   58 00000032 3E01            SUBS             R6, #1
   59 00000034 E7F1            B                LOOP
   60 00000036         
   61 00000036 F04F 000A 
                       NEXT    LDR              R0, = 10    ; new counter
   62 0000003A F04F 0130       LDR              R1, = 0x30
   63 0000003E 3801            SUBS             R0, #1      ; clear xPSR
   64 00000040 E000            B                RETRIEVE
   65 00000042         
   66 00000042 3801    ctr     SUBS             R0, #1
   67 00000044         RETRIEVE
   68 00000044 BC10            POP              {R4}
   69 00000046 42A1            CMP              R1, R4
   70 00000048 D0FB            BEQ              ctr
   71 0000004A F805 4B01       STRB             R4, [R5], #1
   72 0000004E F04F 0129       LDR              R1, =0x29
   73 00000052 2800            CMP              R0, #0
   74 00000054 D1F5            BNE              ctr
   75 00000056 F04F 060D       LDR              R6, =0x0D
   76 0000005A F805 6B01       STRB             R6 , [R5], #1
   77 0000005E F04F 0604       LDR              R6, =0x04
   78 00000062 F805 6B01       STRB             R6, [R5], #1
   79 00000066 E00C            B                EXIT
   80 00000068         
   81 00000068         zero_Case
   82 00000068 F04F 0630       LDR              R6, = 0x30
   83 0000006C F805 6B01       STRB             R6 , [R5], #1
   84 00000070 F04F 060D       LDR              R6, =0x0D
   85 00000074 F805 6B01       STRB             R6 , [R5], #1
   86 00000078 F04F 0604       LDR              R6, =0x04
   87 0000007C F805 6B01       STRB             R6, [R5], #1
   88 00000080 E7FF            B                EXIT
   89 00000082         
   90 00000082         EXIT
   91 00000082 E8BD 1FFF       POP{R0-R12}
   92 00000086 4770            BX               LR
   93 00000088                 ENDP
   94 00000088         ;*******************************************************
                       ********
   95 00000088         ; End of the program  section
   96 00000088         ;*******************************************************
                       ********
   97 00000088         ;LABEL      DIRECTIVE       VALUE                       
                           COMMENT
   98 00000088                 ALIGN
   99 00000088                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\convrt.d -o.\objects\convrt.o -I.\RTE\_q1 -ID:\Keil_v
5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Keil_v5\ARM\CMSIS\In
clude --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --pr
edefine="TM4C123GH6PM SETA 1" --list=.\listings\convrt.lst convrt.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONVRT 00000000

Symbol: CONVRT
   Definitions
      At line 33 in file convrt.s
   Uses
      At line 31 in file convrt.s
Comment: CONVRT used once
EXIT 00000082

Symbol: EXIT
   Definitions
      At line 90 in file convrt.s
   Uses
      At line 79 in file convrt.s
      At line 88 in file convrt.s

LOOP 0000001A

Symbol: LOOP
   Definitions
      At line 49 in file convrt.s
   Uses
      At line 59 in file convrt.s
Comment: LOOP used once
NEXT 00000036

Symbol: NEXT
   Definitions
      At line 61 in file convrt.s
   Uses
      At line 49 in file convrt.s
Comment: NEXT used once
RETRIEVE 00000044

Symbol: RETRIEVE
   Definitions
      At line 67 in file convrt.s
   Uses
      At line 64 in file convrt.s
Comment: RETRIEVE used once
SAVE 00000004

Symbol: SAVE
   Definitions
      At line 38 in file convrt.s
   Uses
      At line 36 in file convrt.s
Comment: SAVE used once
START 0000000A

Symbol: START
   Definitions
      At line 42 in file convrt.s
   Uses
      At line 40 in file convrt.s
Comment: START used once
ctr 00000042




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: ctr
   Definitions
      At line 66 in file convrt.s
   Uses
      At line 70 in file convrt.s
      At line 74 in file convrt.s

routines 00000000

Symbol: routines
   Definitions
      At line 29 in file convrt.s
   Uses
      None
Comment: routines unused
zero_Case 00000068

Symbol: zero_Case
   Definitions
      At line 81 in file convrt.s
   Uses
      At line 46 in file convrt.s
Comment: zero_Case used once
10 symbols
344 symbols in table
