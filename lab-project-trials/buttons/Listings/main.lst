


ARM Macro Assembler    Page 1 


    1 00000000         ; Sample1.s  Sanja Manic
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Test the GPIO initialization functions by setting the 
                       LED
    4 00000000         ; color according to the status of the switches.
    5 00000000         ; The Reflex Test (no longer supported; each LED turns o
                       thers off):
    6 00000000         ; This program is functionally similar to SwitchTestMain
                       .c
    7 00000000         ; in Switch_4F120asm.  When switch #1 is pressed, the bl
                       ue
    8 00000000         ; LED comes on.  When switch #2 is pressed, the red LED
    9 00000000         ; comes on.  When both switches are pressed, the green L
                       ED
   10 00000000         ; comes on.  A short delay is inserted between
   11 00000000         ; polls of the buttons to compensate for your reflexes a
                       nd
   12 00000000         ; the button bounce.  The following color combinations c
                       an
   13 00000000         ; be made:
   14 00000000         ; Color    LED(s) Illumination Method
   15 00000000         ; dark     ---    release both buttons
   16 00000000         ; red      R--    press right button (#2)
   17 00000000         ; blue     --B    press left button (#1)
   18 00000000         ; green    -G-    press both buttons exactly together
   19 00000000         ; yellow   RG-    press right button, then press left bu
                       tton
   20 00000000         ; sky blue -GB    press left button, then press right bu
                       tton
   21 00000000         ; white    RGB    press either button, then press the ot
                       her
   22 00000000         ;                 button, then release the first button
   23 00000000         ; pink     R-B    press either button, then release the
   24 00000000         ;                 first button and immediately press the
                       
   25 00000000         ;                 other button
   26 00000000         ; Daniel Valvano
   27 00000000         ; September 11, 2013
   28 00000000         
   29 00000000         ;  This example accompanies the book
   30 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   31 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   32 00000000         ;  Section 4.2    Program 4.1
   33 00000000         ;
   34 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   35 00000000         ;   You may use, edit, run or distribute this file
   36 00000000         ;   as long as the above copyright notice remains
   37 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   38 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   39 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   40 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   41 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.



ARM Macro Assembler    Page 2 


   42 00000000         ;For more information about my classes, my research, and
                        my books, see
   43 00000000         ;http://users.ece.utexas.edu/~valvano/
   44 00000000         
   45 00000000         ; negative logic switch #2 connected to PF0 on the Launc
                       hpad
   46 00000000         ; red LED connected to PF1 on the Launchpad
   47 00000000         ; blue LED connected to PF2 on the Launchpad
   48 00000000         ; green LED connected to PF3 on the Launchpad
   49 00000000         ; negative logic switch #1 connected to PF4 on the Launc
                       hpad
   50 00000000         ; NOTE: The NMI (non-maskable interrupt) is on PF0.  Tha
                       t means that
   51 00000000         ; the Alternate Function Select, Pull-Up Resistor, Pull-
                       Down Resistor,
   52 00000000         ; and Digital Enable are all locked for PF0 until a valu
                       e of 0x4C4F434B
   53 00000000         ; is written to the Port F GPIO Lock Register.  After Po
                       rt F is
   54 00000000         ; unlocked, bit 0 of the Port F GPIO Commit Register mus
                       t be set to
   55 00000000         ; allow access to PF0's control registers.  On the LM4F1
                       20, the other
   56 00000000         ; bits of the Port F GPIO Commit Register are hard-wired
                        to 1, meaning
   57 00000000         ; that the rest of Port F can always be freely re-config
                       ured at any
   58 00000000         ; time.  Requiring this procedure makes it unlikely to a
                       ccidentally
   59 00000000         ; re-configure the JTAG and NMI pins as GPIO, which can 
                       lock the
   60 00000000         ; debugger out of the processor and make it permanently 
                       unable to be
   61 00000000         ; debugged or re-programmed.
   62 00000000         
   63 00000000         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   64 00000000         ; Changed by Sanja Manic
   65 00000000         ; August 25, 2015
   66 00000000         ; when both switches are pressed 
   67 00000000         ; it toggles color every 1s
   68 00000000         ; by adding #2 to color definition
   69 00000000         ; register in delay subroutine also changed to be R1
   70 00000000         ;;;;;;;;;;;;;;;;;;;;;;;;;;
   71 00000000         
   72 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   73 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   74 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   75 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   76 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C



ARM Macro Assembler    Page 3 


   77 00000000         
   78 00000000 40025404 
                       GPIO_PORTF_IS_R
                               EQU              0x40025404
   79 00000000 40025408 
                       GPIO_PORTF_BE_R
                               EQU              0x40025408
   80 00000000 4002540C 
                       GPIO_PORTF_IEV_R
                               EQU              0x4002540C
   81 00000000 40025410 
                       GPIO_PORTF_IM_R
                               EQU              0x40025410
   82 00000000 4002541C 
                       GPIO_PORTF_ICR_R
                               EQU              0x4002541C
   83 00000000 40025414 
                       GPIO_PORTF_RIS_R
                               EQU              0x40025414
   84 00000000         
   85 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   86 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   87 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   88 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   89 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   90 00000000 00000002 
                       RED     EQU              0x02
   91 00000000 00000004 
                       BLUE    EQU              0x04
   92 00000000 00000008 
                       GREEN   EQU              0x08
   93 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   94 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   95 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   96 00000000 00001000 
                       FIFTHSEC
                               EQU              0x1000
   97 00000000 E000E100 
                       NVIC_EN0
                               EQU              0xE000E100  ; IRQ 0 to 31 Set E



ARM Macro Assembler    Page 4 


                                                            nable Register
   98 00000000 E000E45C 
                       NVIC_PRI4
                               EQU              0xE000E45C  ; IRQ 92 to 95 Prio
                                                            rity Register
   99 00000000         
  100 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  101 00000000                 THUMB
  102 00000000                 EXPORT           __main
  103 00000000                 EXPORT           GPIOPortF_Handler
  104 00000000         
  105 00000000         __main
  106 00000000 F000 F83C       BL               PortF_Init  ; initialize input 
                                                            and output pins of 
                                                            Port F
  107 00000004 B662            CPSIE            I
  108 00000006         loop
  109 00000006 493D            LDR              R1, = GPIO_PORTF_RIS_R
  110 00000008 6808            LDR              R0, [R1]
  111 0000000A F010 0010       ANDS             R0, #0x10
  112 0000000E         
  113 0000000E         
  114 0000000E D0FA            BEQ              loop
  115 00000010 493B            LDR              R1, =GPIO_PORTF_ICR_R ; enable 
                                                            commit for Port F
  116 00000012 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  117 00000016 6008            STR              R0, [R1]
  118 00000018         
  119 00000018 F44F 5180       LDR              R1, =FIFTHSEC ; R1 = FIFTHSEC (
                                                            delay 0.2 second)
  120 0000001C F000 F823       BL               delay       ; delay at least (3
                                                            *R0) cycles
  121 00000020 F000 F863       BL               PortF_Input ; read all of the s
                                                            witches on Port F
  122 00000024 2801            CMP              R0, #0x01   ; R0 == 0x01?
  123 00000026 D00A            BEQ              sw1pressed  ; if so, switch 1 p
                                                            ressed
  124 00000028 2810            CMP              R0, #0x10   ; R0 == 0x10?
  125 0000002A D00D            BEQ              sw2pressed  ; if so, switch 2 p
                                                            ressed
  126 0000002C 2800            CMP              R0, #0x00   ; R0 == 0x00?
  127 0000002E D010            BEQ              bothpressed ; if so, both switc
                                                            hes pressed
  128 00000030 2811            CMP              R0, #0x11   ; R0 == 0x11?
  129 00000032 D013            BEQ              nopressed   ; if so, neither sw
                                                            itch pressed
  130 00000034         ; if none of the above, unexpected return value
  131 00000034 F04F 000E       MOV              R0, #(RED+GREEN+BLUE) ; R0 = (R
                                                            ED|GREEN|BLUE) (all
                                                             LEDs on) 
  132 00000038 F000 F85C       BL               PortF_Output ; turn all of the 
                                                            LEDs on
  133 0000003C         
  134 0000003C E7E3            B                loop
  135 0000003E         sw1pressed
  136 0000003E F04F 0004       MOV              R0, #BLUE   ; R0 = BLUE (blue L
                                                            ED on)



ARM Macro Assembler    Page 5 


  137 00000042 F000 F857       BL               PortF_Output ; turn the blue LE
                                                            D on
  138 00000046 E7DE            B                loop
  139 00000048         sw2pressed
  140 00000048 F04F 0002       MOV              R0, #RED    ; R0 = RED (red LED
                                                             on)
  141 0000004C F000 F852       BL               PortF_Output ; turn the red LED
                                                             on
  142 00000050 E7D9            B                loop
  143 00000052         bothpressed
  144 00000052 F04F 0008       MOV              R0, #GREEN  ; R0 = GREEN (green
                                                             LED on)
  145 00000056 F000 F84D       BL               PortF_Output ; turn the green L
                                                            ED on 
  146 0000005A E7D4            B                loop
  147 0000005C         nopressed
  148 0000005C F04F 0000       MOV              R0, #0      ; R0 = 0 (no LEDs o
                                                            n)
  149 00000060 F000 F848       BL               PortF_Output ; turn all of the 
                                                            LEDs off
  150 00000064 E7CF            B                loop
  151 00000066         
  152 00000066         ;------------delay------------
  153 00000066         ; Delay function for testing, which delays about 3*count
                        cycles.
  154 00000066         ; Input: R1  count
  155 00000066         ; Output: none
  156 00000066         
  157 00000066         delay
  158 00000066 1E49            SUBS             R1, R1, #1  ; R1 = R1 - 1 (coun
                                                            t = count - 1)
  159 00000068 D1FD            BNE              delay       ; if count (R1) != 
                                                            0, skip to 'delay'
  160 0000006A 4770            BX               LR          ; return
  161 0000006C         
  162 0000006C         
  163 0000006C         ;---------------------------------------------------    
                        
  164 0000006C         GPIOPortF_Handler
                               PROC
  165 0000006C B500            PUSH{LR}
  166 0000006E 4924            LDR              R1, =GPIO_PORTF_ICR_R ; enable 
                                                            commit for Port F
  167 00000070 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  168 00000074 6008            STR              R0, [R1]
  169 00000076 F85D EB04       POP{LR}
  170 0000007A 4770            BX               LR
  171 0000007C                 ENDP
  172 0000007C         ;---------------------------------------------------
  173 0000007C         
  174 0000007C         ;------------PortF_Init------------
  175 0000007C         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  176 0000007C         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  177 0000007C         ; resistors are enabled, and the NMI functionality on PF
                       0 is
  178 0000007C         ; disabled.  Make the RGB LED's pins outputs.
  179 0000007C         ; Modifies: R0, R1, R2



ARM Macro Assembler    Page 6 


  180 0000007C         PortF_Init
  181 0000007C 4921            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
  182 0000007E 6808            LDR              R0, [R1]
  183 00000080 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  184 00000084 6008            STR              R0, [R1]
  185 00000086 BF00            NOP
  186 00000088 BF00            NOP                          ; allow time for cl
                                                            ock to finish
  187 0000008A 491F            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  188 0000008C 481F            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
  189 0000008E 6008            STR              R0, [R1]
  190 00000090 491F            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  191 00000092 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  192 00000096 6008            STR              R0, [R1]
  193 00000098 491E            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  194 0000009A F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  195 0000009E 6008            STR              R0, [R1]
  196 000000A0 491D            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  197 000000A2 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  198 000000A6 6008            STR              R0, [R1]
  199 000000A8 491C            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  200 000000AA F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  201 000000AE 6008            STR              R0, [R1]
  202 000000B0 491B            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  203 000000B2 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  204 000000B6 6008            STR              R0, [R1]
  205 000000B8 491A            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  206 000000BA F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
  207 000000BE 6008            STR              R0, [R1]
  208 000000C0 4919            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  209 000000C2 F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
  210 000000C6 6008            STR              R0, [R1]
  211 000000C8         



ARM Macro Assembler    Page 7 


  212 000000C8 4918            LDR              R1, =GPIO_PORTF_IS_R ; 7) enabl
                                                            e Port F digital po
                                                            rt
  213 000000CA F04F 0000       MOV              R0, #0x00   ; 1 means enable di
                                                            gital I/O
  214 000000CE 6008            STR              R0, [R1]
  215 000000D0         
  216 000000D0 4917            LDR              R1, =GPIO_PORTF_BE_R ; 7) enabl
                                                            e Port F digital po
                                                            rt
  217 000000D2 F04F 0000       MOV              R0, #0x00   ; 1 means enable di
                                                            gital I/O
  218 000000D6 6008            STR              R0, [R1]
  219 000000D8         
  220 000000D8 4916            LDR              R1, =GPIO_PORTF_IEV_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  221 000000DA F04F 0000       MOV              R0, #0x00   ; 1 means enable di
                                                            gital I/O
  222 000000DE 6008            STR              R0, [R1]
  223 000000E0         
  224 000000E0 4915            LDR              R1, =GPIO_PORTF_IM_R ; 7) enabl
                                                            e Port F digital po
                                                            rt
  225 000000E2 F04F 0011       MOV              R0, #0x11   ; 1 means enable di
                                                            gital I/O
  226 000000E6 6008            STR              R0, [R1]
  227 000000E8         
  228 000000E8         
  229 000000E8         
  230 000000E8         ;LDR R1, =NVIC_PRI4
  231 000000E8         ;LDR R0, [R1]
  232 000000E8         ;AND R0, R0, #0xFF00FFFF ; clear interrupt 19 priority
  233 000000E8         ;ORR R0, R0, #0x00400000 ; set interrupt 19 priority to 
                       2
  234 000000E8         ;STR R0, [R1]
  235 000000E8         ; NVIC has to be enabled
  236 000000E8         ; Interrupts 64-95 are handled by NVIC register EN2
  237 000000E8         ; Interrupt 94 is controlled by bit 30
  238 000000E8         ;LDR R1, =NVIC_EN0
  239 000000E8         ; LDR R0, [R1] 
  240 000000E8         ;ORR R0, R0, #0x40000000; set bit 30 to enable interrupt
                        94
  241 000000E8         ;STR R0, [R1]
  242 000000E8         
  243 000000E8 4770            BX               LR
  244 000000EA         
  245 000000EA         
  246 000000EA         ;------------PortF_Input------------
  247 000000EA         ; Read and return the status of the switches.
  248 000000EA         ; Input: none
  249 000000EA         ; Output: R0  0x01 if only Switch 1 is pressed
  250 000000EA         ;         R0  0x10 if only Switch 2 is pressed
  251 000000EA         ;         R0  0x00 if both switches are pressed
  252 000000EA         ;         R0  0x11 if no switches are pressed
  253 000000EA         ; Modifies: R1
  254 000000EA         PortF_Input
  255 000000EA 4914            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data



ARM Macro Assembler    Page 8 


  256 000000EC 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  257 000000EE F000 0011       AND              R0,R0,#0x11 ; just the input pi
                                                            ns PF0 and PF4
  258 000000F2 4770            BX               LR          ; return R0 with in
                                                            puts
  259 000000F4         
  260 000000F4         ;------------PortF_Output------------
  261 000000F4         ; Set the output state of PF3-1.
  262 000000F4         ; Input: R0  new state of PF
  263 000000F4         ; Output: none
  264 000000F4         ; Modifies: R1
  265 000000F4         PortF_Output
  266 000000F4 4911            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  267 000000F6 6008            STR              R0, [R1]    ; write to PF3-1
  268 000000F8 4770            BX               LR
  269 000000FA         
  270 000000FA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  271 000000FC                 END                          ; end of file
              40025414 
              4002541C 
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              40025404 
              40025408 
              4002540C 
              40025410 
              400253FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_q1 -ID:\Keil_v5\AR
M\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Includ
e --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --predef
ine="TM4C123GH6PM SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 100 in file main.s
   Uses
      None
Comment: .text unused
GPIOPortF_Handler 0000006C

Symbol: GPIOPortF_Handler
   Definitions
      At line 164 in file main.s
   Uses
      At line 103 in file main.s
Comment: GPIOPortF_Handler used once
PortF_Init 0000007C

Symbol: PortF_Init
   Definitions
      At line 180 in file main.s
   Uses
      At line 106 in file main.s
Comment: PortF_Init used once
PortF_Input 000000EA

Symbol: PortF_Input
   Definitions
      At line 254 in file main.s
   Uses
      At line 121 in file main.s
Comment: PortF_Input used once
PortF_Output 000000F4

Symbol: PortF_Output
   Definitions
      At line 265 in file main.s
   Uses
      At line 132 in file main.s
      At line 137 in file main.s
      At line 141 in file main.s
      At line 145 in file main.s
      At line 149 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 105 in file main.s
   Uses
      At line 102 in file main.s
Comment: __main used once
bothpressed 00000052

Symbol: bothpressed
   Definitions
      At line 143 in file main.s
   Uses
      At line 127 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: bothpressed used once
delay 00000066

Symbol: delay
   Definitions
      At line 157 in file main.s
   Uses
      At line 120 in file main.s
      At line 159 in file main.s

loop 00000006

Symbol: loop
   Definitions
      At line 108 in file main.s
   Uses
      At line 114 in file main.s
      At line 134 in file main.s
      At line 138 in file main.s
      At line 142 in file main.s
      At line 146 in file main.s
      At line 150 in file main.s

nopressed 0000005C

Symbol: nopressed
   Definitions
      At line 147 in file main.s
   Uses
      At line 129 in file main.s
Comment: nopressed used once
sw1pressed 0000003E

Symbol: sw1pressed
   Definitions
      At line 135 in file main.s
   Uses
      At line 123 in file main.s
Comment: sw1pressed used once
sw2pressed 00000048

Symbol: sw2pressed
   Definitions
      At line 139 in file main.s
   Uses
      At line 125 in file main.s
Comment: sw2pressed used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLUE 00000004

Symbol: BLUE
   Definitions
      At line 91 in file main.s
   Uses
      At line 131 in file main.s
      At line 136 in file main.s

FIFTHSEC 00001000

Symbol: FIFTHSEC
   Definitions
      At line 96 in file main.s
   Uses
      At line 119 in file main.s
Comment: FIFTHSEC used once
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 89 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 74 in file main.s
   Uses
      At line 202 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 87 in file main.s
   Uses
      At line 193 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_BE_R 40025408

Symbol: GPIO_PORTF_BE_R
   Definitions
      At line 79 in file main.s
   Uses
      At line 216 in file main.s
Comment: GPIO_PORTF_BE_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 86 in file main.s
   Uses
      At line 190 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 72 in file main.s
   Uses
      At line 255 in file main.s
      At line 266 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 76 in file main.s
   Uses
      At line 208 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 73 in file main.s
   Uses
      At line 199 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_ICR_R 4002541C

Symbol: GPIO_PORTF_ICR_R
   Definitions
      At line 82 in file main.s
   Uses
      At line 115 in file main.s
      At line 166 in file main.s

GPIO_PORTF_IEV_R 4002540C

Symbol: GPIO_PORTF_IEV_R
   Definitions
      At line 80 in file main.s
   Uses
      At line 220 in file main.s
Comment: GPIO_PORTF_IEV_R used once
GPIO_PORTF_IM_R 40025410

Symbol: GPIO_PORTF_IM_R
   Definitions
      At line 81 in file main.s
   Uses
      At line 224 in file main.s
Comment: GPIO_PORTF_IM_R used once
GPIO_PORTF_IS_R 40025404

Symbol: GPIO_PORTF_IS_R
   Definitions
      At line 78 in file main.s
   Uses
      At line 212 in file main.s
Comment: GPIO_PORTF_IS_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 85 in file main.s
   Uses
      At line 187 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 88 in file main.s
   Uses
      At line 196 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 75 in file main.s
   Uses
      At line 205 in file main.s
Comment: GPIO_PORTF_PUR_R used once
GPIO_PORTF_RIS_R 40025414

Symbol: GPIO_PORTF_RIS_R
   Definitions
      At line 83 in file main.s
   Uses
      At line 109 in file main.s
Comment: GPIO_PORTF_RIS_R used once
GREEN 00000008

Symbol: GREEN
   Definitions
      At line 92 in file main.s
   Uses
      At line 131 in file main.s
      At line 144 in file main.s

NVIC_EN0 E000E100

Symbol: NVIC_EN0
   Definitions
      At line 97 in file main.s
   Uses
      None
Comment: NVIC_EN0 unused
NVIC_PRI4 E000E45C

Symbol: NVIC_PRI4
   Definitions
      At line 98 in file main.s
   Uses
      None
Comment: NVIC_PRI4 unused
RED 00000002

Symbol: RED
   Definitions
      At line 90 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 131 in file main.s
      At line 140 in file main.s

SW1 00000010

Symbol: SW1
   Definitions
      At line 93 in file main.s
   Uses
      None
Comment: SW1 unused
SW2 00000001

Symbol: SW2
   Definitions
      At line 94 in file main.s
   Uses
      None
Comment: SW2 unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 95 in file main.s
   Uses
      At line 181 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
25 symbols
373 symbols in table
