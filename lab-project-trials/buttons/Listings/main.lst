


ARM Macro Assembler    Page 1 


    1 00000000         ; Sample1.s  Sanja Manic
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Test the GPIO initialization functions by setting the 
                       LED
    4 00000000         ; color according to the status of the switches.
    5 00000000         ; The Reflex Test (no longer supported; each LED turns o
                       thers off):
    6 00000000         ; This program is functionally similar to SwitchTestMain
                       .c
    7 00000000         ; in Switch_4F120asm.  When switch #1 is pressed, the bl
                       ue
    8 00000000         ; LED comes on.  When switch #2 is pressed, the red LED
    9 00000000         ; comes on.  When both switches are pressed, the green L
                       ED
   10 00000000         ; comes on.  A short delay is inserted between
   11 00000000         ; polls of the buttons to compensate for your reflexes a
                       nd
   12 00000000         ; the button bounce.  The following color combinations c
                       an
   13 00000000         ; be made:
   14 00000000         ; Color    LED(s) Illumination Method
   15 00000000         ; dark     ---    release both buttons
   16 00000000         ; red      R--    press right button (#2)
   17 00000000         ; blue     --B    press left button (#1)
   18 00000000         ; green    -G-    press both buttons exactly together
   19 00000000         ; yellow   RG-    press right button, then press left bu
                       tton
   20 00000000         ; sky blue -GB    press left button, then press right bu
                       tton
   21 00000000         ; white    RGB    press either button, then press the ot
                       her
   22 00000000         ;                 button, then release the first button
   23 00000000         ; pink     R-B    press either button, then release the
   24 00000000         ;                 first button and immediately press the
                       
   25 00000000         ;                 other button
   26 00000000         ; Daniel Valvano
   27 00000000         ; September 11, 2013
   28 00000000         
   29 00000000         ;  This example accompanies the book
   30 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   31 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   32 00000000         ;  Section 4.2    Program 4.1
   33 00000000         ;
   34 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   35 00000000         ;   You may use, edit, run or distribute this file
   36 00000000         ;   as long as the above copyright notice remains
   37 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   38 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   39 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   40 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   41 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.



ARM Macro Assembler    Page 2 


   42 00000000         ;For more information about my classes, my research, and
                        my books, see
   43 00000000         ;http://users.ece.utexas.edu/~valvano/
   44 00000000         
   45 00000000         ; negative logic switch #2 connected to PF0 on the Launc
                       hpad
   46 00000000         ; red LED connected to PF1 on the Launchpad
   47 00000000         ; blue LED connected to PF2 on the Launchpad
   48 00000000         ; green LED connected to PF3 on the Launchpad
   49 00000000         ; negative logic switch #1 connected to PF4 on the Launc
                       hpad
   50 00000000         ; NOTE: The NMI (non-maskable interrupt) is on PF0.  Tha
                       t means that
   51 00000000         ; the Alternate Function Select, Pull-Up Resistor, Pull-
                       Down Resistor,
   52 00000000         ; and Digital Enable are all locked for PF0 until a valu
                       e of 0x4C4F434B
   53 00000000         ; is written to the Port F GPIO Lock Register.  After Po
                       rt F is
   54 00000000         ; unlocked, bit 0 of the Port F GPIO Commit Register mus
                       t be set to
   55 00000000         ; allow access to PF0's control registers.  On the LM4F1
                       20, the other
   56 00000000         ; bits of the Port F GPIO Commit Register are hard-wired
                        to 1, meaning
   57 00000000         ; that the rest of Port F can always be freely re-config
                       ured at any
   58 00000000         ; time.  Requiring this procedure makes it unlikely to a
                       ccidentally
   59 00000000         ; re-configure the JTAG and NMI pins as GPIO, which can 
                       lock the
   60 00000000         ; debugger out of the processor and make it permanently 
                       unable to be
   61 00000000         ; debugged or re-programmed.
   62 00000000         
   63 00000000         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   64 00000000         ; Changed by Sanja Manic
   65 00000000         ; August 25, 2015
   66 00000000         ; when both switches are pressed 
   67 00000000         ; it toggles color every 1s
   68 00000000         ; by adding #2 to color definition
   69 00000000         ; register in delay subroutine also changed to be R1
   70 00000000         ;;;;;;;;;;;;;;;;;;;;;;;;;;
   71 00000000         
   72 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   73 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   74 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   75 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   76 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C



ARM Macro Assembler    Page 3 


   77 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   78 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   79 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   80 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   81 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   82 00000000 00000002 
                       RED     EQU              0x02
   83 00000000 00000004 
                       BLUE    EQU              0x04
   84 00000000 00000008 
                       GREEN   EQU              0x08
   85 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   86 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   87 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   88 00000000 00001000 
                       FIFTHSEC
                               EQU              0x1000
   89 00000000         
   90 00000000         
   91 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   92 00000000                 THUMB
   93 00000000                 EXPORT           __main
   94 00000000         
   95 00000000         __main
   96 00000000 F000 F82A       BL               PortF_Init  ; initialize input 
                                                            and output pins of 
                                                            Port F
   97 00000004         loop
   98 00000004 F44F 5180       LDR              R1, =FIFTHSEC ; R1 = FIFTHSEC (
                                                            delay 0.2 second)
   99 00000008 F000 F823       BL               delay       ; delay at least (3
                                                            *R0) cycles
  100 0000000C F000 F84B       BL               PortF_Input ; read all of the s
                                                            witches on Port F
  101 00000010 2801            CMP              R0, #0x01   ; R0 == 0x01?
  102 00000012 D00A            BEQ              sw1pressed  ; if so, switch 1 p
                                                            ressed
  103 00000014 2810            CMP              R0, #0x10   ; R0 == 0x10?
  104 00000016 D00D            BEQ              sw2pressed  ; if so, switch 2 p



ARM Macro Assembler    Page 4 


                                                            ressed
  105 00000018 2800            CMP              R0, #0x00   ; R0 == 0x00?
  106 0000001A D010            BEQ              bothpressed ; if so, both switc
                                                            hes pressed
  107 0000001C 2811            CMP              R0, #0x11   ; R0 == 0x11?
  108 0000001E D013            BEQ              nopressed   ; if so, neither sw
                                                            itch pressed
  109 00000020         ; if none of the above, unexpected return value
  110 00000020 F04F 000E       MOV              R0, #(RED+GREEN+BLUE) ; R0 = (R
                                                            ED|GREEN|BLUE) (all
                                                             LEDs on) 
  111 00000024 F000 F844       BL               PortF_Output ; turn all of the 
                                                            LEDs on
  112 00000028 E7EC            B                loop
  113 0000002A         sw1pressed
  114 0000002A F04F 0004       MOV              R0, #BLUE   ; R0 = BLUE (blue L
                                                            ED on)
  115 0000002E F000 F83F       BL               PortF_Output ; turn the blue LE
                                                            D on
  116 00000032 E7E7            B                loop
  117 00000034         sw2pressed
  118 00000034 F04F 0002       MOV              R0, #RED    ; R0 = RED (red LED
                                                             on)
  119 00000038 F000 F83A       BL               PortF_Output ; turn the red LED
                                                             on
  120 0000003C E7E2            B                loop
  121 0000003E         bothpressed
  122 0000003E F04F 0008       MOV              R0, #GREEN  ; R0 = GREEN (green
                                                             LED on)
  123 00000042 F000 F835       BL               PortF_Output ; turn the green L
                                                            ED on 
  124 00000046 E7DD            B                loop
  125 00000048         nopressed
  126 00000048 F04F 0000       MOV              R0, #0      ; R0 = 0 (no LEDs o
                                                            n)
  127 0000004C F000 F830       BL               PortF_Output ; turn all of the 
                                                            LEDs off
  128 00000050 E7D8            B                loop
  129 00000052         
  130 00000052         ;------------delay------------
  131 00000052         ; Delay function for testing, which delays about 3*count
                        cycles.
  132 00000052         ; Input: R1  count
  133 00000052         ; Output: none
  134 00000052         
  135 00000052         delay
  136 00000052 1E49            SUBS             R1, R1, #1  ; R1 = R1 - 1 (coun
                                                            t = count - 1)
  137 00000054 D1FD            BNE              delay       ; if count (R1) != 
                                                            0, skip to 'delay'
  138 00000056 4770            BX               LR          ; return
  139 00000058         
  140 00000058         
  141 00000058         ;------------PortF_Init------------
  142 00000058         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  143 00000058         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  144 00000058         ; resistors are enabled, and the NMI functionality on PF
                       0 is



ARM Macro Assembler    Page 5 


  145 00000058         ; disabled.  Make the RGB LED's pins outputs.
  146 00000058         ; Modifies: R0, R1, R2
  147 00000058         PortF_Init
  148 00000058 4917            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
  149 0000005A 6808            LDR              R0, [R1]
  150 0000005C F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  151 00000060 6008            STR              R0, [R1]
  152 00000062 BF00            NOP
  153 00000064 BF00            NOP                          ; allow time for cl
                                                            ock to finish
  154 00000066 4915            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  155 00000068 4815            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
  156 0000006A 6008            STR              R0, [R1]
  157 0000006C 4915            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  158 0000006E F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  159 00000072 6008            STR              R0, [R1]
  160 00000074 4914            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  161 00000076 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  162 0000007A 6008            STR              R0, [R1]
  163 0000007C 4913            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  164 0000007E F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  165 00000082 6008            STR              R0, [R1]
  166 00000084 4912            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  167 00000086 F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  168 0000008A 6008            STR              R0, [R1]
  169 0000008C 4911            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  170 0000008E F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  171 00000092 6008            STR              R0, [R1]
  172 00000094 4910            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  173 00000096 F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
  174 0000009A 6008            STR              R0, [R1]
  175 0000009C 490F            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  176 0000009E F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O



ARM Macro Assembler    Page 6 


  177 000000A2 6008            STR              R0, [R1]
  178 000000A4 4770            BX               LR
  179 000000A6         
  180 000000A6         
  181 000000A6         ;------------PortF_Input------------
  182 000000A6         ; Read and return the status of the switches.
  183 000000A6         ; Input: none
  184 000000A6         ; Output: R0  0x01 if only Switch 1 is pressed
  185 000000A6         ;         R0  0x10 if only Switch 2 is pressed
  186 000000A6         ;         R0  0x00 if both switches are pressed
  187 000000A6         ;         R0  0x11 if no switches are pressed
  188 000000A6         ; Modifies: R1
  189 000000A6         PortF_Input
  190 000000A6 490E            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  191 000000A8 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  192 000000AA F000 0011       AND              R0,R0,#0x11 ; just the input pi
                                                            ns PF0 and PF4
  193 000000AE 4770            BX               LR          ; return R0 with in
                                                            puts
  194 000000B0         
  195 000000B0         ;------------PortF_Output------------
  196 000000B0         ; Set the output state of PF3-1.
  197 000000B0         ; Input: R0  new state of PF
  198 000000B0         ; Output: none
  199 000000B0         ; Modifies: R1
  200 000000B0         PortF_Output
  201 000000B0 490B            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  202 000000B2 6008            STR              R0, [R1]    ; write to PF3-1
  203 000000B4 4770            BX               LR
  204 000000B6         
  205 000000B6 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  206 000000B8                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              400253FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_q1 -ID:\Keil_v5\AR
M\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Includ
e --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --predef
ine="TM4C123GH6PM SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 91 in file main.s
   Uses
      None
Comment: .text unused
PortF_Init 00000058

Symbol: PortF_Init
   Definitions
      At line 147 in file main.s
   Uses
      At line 96 in file main.s
Comment: PortF_Init used once
PortF_Input 000000A6

Symbol: PortF_Input
   Definitions
      At line 189 in file main.s
   Uses
      At line 100 in file main.s
Comment: PortF_Input used once
PortF_Output 000000B0

Symbol: PortF_Output
   Definitions
      At line 200 in file main.s
   Uses
      At line 111 in file main.s
      At line 115 in file main.s
      At line 119 in file main.s
      At line 123 in file main.s
      At line 127 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 95 in file main.s
   Uses
      At line 93 in file main.s
Comment: __main used once
bothpressed 0000003E

Symbol: bothpressed
   Definitions
      At line 121 in file main.s
   Uses
      At line 106 in file main.s
Comment: bothpressed used once
delay 00000052

Symbol: delay
   Definitions
      At line 135 in file main.s
   Uses
      At line 99 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 137 in file main.s

loop 00000004

Symbol: loop
   Definitions
      At line 97 in file main.s
   Uses
      At line 112 in file main.s
      At line 116 in file main.s
      At line 120 in file main.s
      At line 124 in file main.s
      At line 128 in file main.s

nopressed 00000048

Symbol: nopressed
   Definitions
      At line 125 in file main.s
   Uses
      At line 108 in file main.s
Comment: nopressed used once
sw1pressed 0000002A

Symbol: sw1pressed
   Definitions
      At line 113 in file main.s
   Uses
      At line 102 in file main.s
Comment: sw1pressed used once
sw2pressed 00000034

Symbol: sw2pressed
   Definitions
      At line 117 in file main.s
   Uses
      At line 104 in file main.s
Comment: sw2pressed used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLUE 00000004

Symbol: BLUE
   Definitions
      At line 83 in file main.s
   Uses
      At line 110 in file main.s
      At line 114 in file main.s

FIFTHSEC 00001000

Symbol: FIFTHSEC
   Definitions
      At line 88 in file main.s
   Uses
      At line 98 in file main.s
Comment: FIFTHSEC used once
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 81 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 74 in file main.s
   Uses
      At line 169 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 79 in file main.s
   Uses
      At line 160 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 78 in file main.s
   Uses
      At line 157 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 72 in file main.s
   Uses
      At line 190 in file main.s
      At line 201 in file main.s

GPIO_PORTF_DEN_R 4002551C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 76 in file main.s
   Uses
      At line 175 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 73 in file main.s
   Uses
      At line 166 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 77 in file main.s
   Uses
      At line 154 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 80 in file main.s
   Uses
      At line 163 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 75 in file main.s
   Uses
      At line 172 in file main.s
Comment: GPIO_PORTF_PUR_R used once
GREEN 00000008

Symbol: GREEN
   Definitions
      At line 84 in file main.s
   Uses
      At line 110 in file main.s
      At line 122 in file main.s

RED 00000002

Symbol: RED
   Definitions
      At line 82 in file main.s
   Uses
      At line 110 in file main.s
      At line 118 in file main.s

SW1 00000010




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: SW1
   Definitions
      At line 85 in file main.s
   Uses
      None
Comment: SW1 unused
SW2 00000001

Symbol: SW2
   Definitions
      At line 86 in file main.s
   Uses
      None
Comment: SW2 unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 87 in file main.s
   Uses
      At line 148 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
17 symbols
364 symbols in table
