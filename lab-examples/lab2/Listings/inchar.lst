


ARM Macro Assembler    Page 1 


    1 00000000         ; InChar.s
    2 00000000         ; Runs on TM4C123
    3 00000000         
    4 00000000         ; Capture ASCII character via 
    5 00000000         ; UART0 in PortA, then store
    6 00000000         ; character in R5
    7 00000000         
    8 00000000         ; Baud = 9600, 8-bit, No Parity
    9 00000000         ; 1 Stop bit, No flow control
   10 00000000         
   11 00000000 00000400 
                       Stack   EQU              0x00000400
   12 00000000         
   13 00000000         
   14 00000000         ; GPIO Registers *****************
   15 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   16 00000000         ; GPIO base address   = 0x40004000
   17 00000000 4000451C 
                       PORTA_DEN
                               EQU              0x4000451C  ; Digital Enable
   18 00000000 4000452C 
                       PORTA_PCTL
                               EQU              0x4000452C  ; Alternate functio
                                                            n select
   19 00000000 40004420 
                       PORTA_AFSEL
                               EQU              0x40004420  ; Enable Alt functi
                                                            ons
   20 00000000 40004528 
                       PORTA_AMSEL
                               EQU              0x40004528  ; Enable analog
   21 00000000 40004500 
                       PORTA_DR2R
                               EQU              0x40004500  ; Drive current sel
                                                            ect
   22 00000000         
   23 00000000         ; UART Registers *****************
   24 00000000 400FE618 
                       RCGCUART
                               EQU              0x400FE618  ; UART clock regist
                                                            er
   25 00000000         
   26 00000000 4000C000 
                       UART0_DR
                               EQU              0x4000C000  ; UART0 data / base
                                                             address
   27 00000000 4000C030 
                       UART0_CTL
                               EQU              0x4000C030  ; UART0 control reg
                                                            ister
   28 00000000 4000C024 
                       UART0_IBRD
                               EQU              0x4000C024  ; Baud rate divisor
                                                             Integer part
   29 00000000 4000C028 
                       UART0_FBRD



ARM Macro Assembler    Page 2 


                               EQU              0x4000C028  ; Baud rate divisor
                                                             Fractional part
   30 00000000 4000C02C 
                       UART0_LCRH
                               EQU              0x4000C02C  ; UART serial param
                                                            eters
   31 00000000 4000CFC8 
                       UART0_CC
                               EQU              0x4000CFC8  ; UART clock config
                                                            
   32 00000000 4000C018 
                       UART0_FR
                               EQU              0x4000C018  ; UART status
   33 00000000         
   34 00000000         
   35 00000000         
   36 00000000         
   37 00000000                 AREA             |.text|, READONLY, CODE, ALIGN=
2
   38 00000000                 THUMB
   39 00000000         
   40 00000000                 EXPORT           InChar      ; make section avai
                                                            lable to other prog
                                                            rams
   41 00000000         
   42 00000000         
   43 00000000         InChar
   44 00000000 B41F            PUSH             {R0-R4}
   45 00000002         
   46 00000002         ; Enable UART clock
   47 00000002 4922            LDR              R1, =RCGCUART
   48 00000004 6808            LDR              R0, [R1]
   49 00000006 F040 0001       ORR              R0, R0, #0x01 ; set bit 0 to en
                                                            able UART0 clock
   50 0000000A 6008            STR              R0, [R1]
   51 0000000C BF00            NOP                          ; Let clock stabili
                                                            ze
   52 0000000E BF00            NOP
   53 00000010 BF00            NOP
   54 00000012         
   55 00000012         ; Setup GPIO
   56 00000012         ; Enable GPIO clock to use debug USB as com port (PA0, P
                       A1)
   57 00000012 491F            LDR              R1, =RCGCGPIO
   58 00000014 6808            LDR              R0, [R1]
   59 00000016 F040 0001       ORR              R0, R0, #0x01 ; set bit 0 to en
                                                            able port A clock
   60 0000001A 6008            STR              R0, [R1]
   61 0000001C BF00            NOP                          ; Let clock stabili
                                                            ze
   62 0000001E BF00            NOP
   63 00000020 BF00            NOP
   64 00000022         
   65 00000022         ; Make PA0, PA1 digital
   66 00000022 491C            LDR              R1, =PORTA_DEN
   67 00000024 6808            LDR              R0, [R1]
   68 00000026 F040 0003       ORR              R0, R0, #0x03 ; set bits 1,0 to
                                                             enable alt functio
                                                            ns on PA0, PA1



ARM Macro Assembler    Page 3 


   69 0000002A 6008            STR              R0, [R1]
   70 0000002C         
   71 0000002C         ; Disable analog on PA0, PA1
   72 0000002C 491A            LDR              R1, =PORTA_AMSEL
   73 0000002E 6808            LDR              R0, [R1]
   74 00000030 F020 0003       BIC              R0, R0, #0x03 ; clear bits 1,0 
                                                            to disable analog o
                                                            n PA0, PA1
   75 00000034 6008            STR              R0, [R1]
   76 00000036         
   77 00000036         ; Enable alternate functions selected
   78 00000036 4919            LDR              R1, =PORTA_AFSEL
   79 00000038 6808            LDR              R0, [R1]
   80 0000003A F040 0003       ORR              R0, R0, #0x03 ; set bits 1,0 to
                                                             enable alt functio
                                                            ns on PA0, PA1
   81 0000003E 6008            STR              R0, [R1]
   82 00000040         
   83 00000040         
   84 00000040         ; Select alternate function to be used (UART on PA0, PA1
                       )
   85 00000040 4917            LDR              R1, =PORTA_PCTL
   86 00000042 6808            LDR              R0, [R1]
   87 00000044 F040 0011       ORR              R0, R0, #0x11 ; set bits 4,0 to
                                                             select UART Rx, Tx
                                                            
   88 00000048 6008            STR              R0, [R1]
   89 0000004A         
   90 0000004A         ; Setup UART
   91 0000004A         ; Disable UART while setting up
   92 0000004A 4916            LDR              R1, =UART0_CTL
   93 0000004C 6808            LDR              R0, [R1]
   94 0000004E F020 0001       BIC              R0, R0, #0x01 ; Clear bit 0 to 
                                                            disable UART0
   95 00000052 6008            STR              R0, [R1]
   96 00000054         
   97 00000054         ; Set baud rate to 9600. Divisor = 16MHz/(16*9600)= 104.
                       16666
   98 00000054         ; Set integer part to 104
   99 00000054 4914            LDR              R1, =UART0_IBRD
  100 00000056 F04F 0068       MOV              R0, #104    ;
  101 0000005A 6008            STR              R0, [R1]
  102 0000005C         
  103 0000005C         ; Set fractional part
  104 0000005C         ; 0.16666*64+0.5 = 11.16666 => Integer = 11
  105 0000005C 4913            LDR              R1, =UART0_FBRD
  106 0000005E F04F 000B       MOV              R0, #11
  107 00000062 6008            STR              R0, [R1]
  108 00000064         
  109 00000064         ; Set serial parameters
  110 00000064 4912            LDR              R1, =UART0_LCRH
  111 00000066 F04F 0070       MOV              R0, #0x70   ; No stick parity, 
                                                            8bit, FIFO enabled,
                                                             
  112 0000006A 6008            STR              R0, [R1]    ; One stop bit, Dis
                                                            able parity, Normal
                                                             use
  113 0000006C         
  114 0000006C         



ARM Macro Assembler    Page 4 


  115 0000006C         ; Enable UART, TX, RX
  116 0000006C 490D            LDR              R1, =UART0_CTL
  117 0000006E 6808            LDR              R0, [R1]
  118 00000070 F240 3201       MOV              R2, #0x00000301 
                                                            ; Set bits 9,8,0
  119 00000074 EA40 0002       ORR              R0, R0, R2
  120 00000078 6008            STR              R0, [R1]
  121 0000007A         
  122 0000007A         
  123 0000007A         ; Preload R4 with UART data address
  124 0000007A 4C0E            LDR              R4, =UART0_DR
  125 0000007C         
  126 0000007C         check
  127 0000007C         ; check for incoming character
  128 0000007C 490E            LDR              R1, =UART0_FR ; load UART statu
                                                            s register address
  129 0000007E 6808            LDR              R0, [R1]    ; 
  130 00000080 F010 0010       ANDS             R0,R0,#0x10 ; check if char rec
                                                            eived (RXFE is 0)
  131 00000084 D1FA            BNE              check       ; if no character, 
                                                            check again, else
  132 00000086 6825            LDR              R5, [R4]    ; load received cha
                                                            r into R5
  133 00000088         
  134 00000088 BC1F            POP              {R0-R4}
  135 0000008A         
  136 0000008A 4770            BX               LR          ; return
  137 0000008C         
  138 0000008C         
  139 0000008C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  140 0000008C                 END                          ; end of file
              400FE618 
              400FE608 
              4000451C 
              40004528 
              40004420 
              4000452C 
              4000C030 
              4000C024 
              4000C028 
              4000C02C 
              4000C000 
              4000C018 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\inchar.d -o.\objects\inchar.o -I.\RTE\_q2 -ID:\Keil_v
5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Keil_v5\ARM\CMSIS\In
clude --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --pr
edefine="TM4C123GH6PM SETA 1" --list=.\listings\inchar.lst InChar.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 37 in file InChar.s
   Uses
      None
Comment: .text unused
InChar 00000000

Symbol: InChar
   Definitions
      At line 43 in file InChar.s
   Uses
      At line 40 in file InChar.s
Comment: InChar used once
check 0000007C

Symbol: check
   Definitions
      At line 126 in file InChar.s
   Uses
      At line 131 in file InChar.s
Comment: check used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PORTA_AFSEL 40004420

Symbol: PORTA_AFSEL
   Definitions
      At line 19 in file InChar.s
   Uses
      At line 78 in file InChar.s
Comment: PORTA_AFSEL used once
PORTA_AMSEL 40004528

Symbol: PORTA_AMSEL
   Definitions
      At line 20 in file InChar.s
   Uses
      At line 72 in file InChar.s
Comment: PORTA_AMSEL used once
PORTA_DEN 4000451C

Symbol: PORTA_DEN
   Definitions
      At line 17 in file InChar.s
   Uses
      At line 66 in file InChar.s
Comment: PORTA_DEN used once
PORTA_DR2R 40004500

Symbol: PORTA_DR2R
   Definitions
      At line 21 in file InChar.s
   Uses
      None
Comment: PORTA_DR2R unused
PORTA_PCTL 4000452C

Symbol: PORTA_PCTL
   Definitions
      At line 18 in file InChar.s
   Uses
      At line 85 in file InChar.s
Comment: PORTA_PCTL used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 15 in file InChar.s
   Uses
      At line 57 in file InChar.s
Comment: RCGCGPIO used once
RCGCUART 400FE618

Symbol: RCGCUART
   Definitions
      At line 24 in file InChar.s
   Uses
      At line 47 in file InChar.s
Comment: RCGCUART used once
Stack 00000400

Symbol: Stack



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 11 in file InChar.s
   Uses
      None
Comment: Stack unused
UART0_CC 4000CFC8

Symbol: UART0_CC
   Definitions
      At line 31 in file InChar.s
   Uses
      None
Comment: UART0_CC unused
UART0_CTL 4000C030

Symbol: UART0_CTL
   Definitions
      At line 27 in file InChar.s
   Uses
      At line 92 in file InChar.s
      At line 116 in file InChar.s

UART0_DR 4000C000

Symbol: UART0_DR
   Definitions
      At line 26 in file InChar.s
   Uses
      At line 124 in file InChar.s
Comment: UART0_DR used once
UART0_FBRD 4000C028

Symbol: UART0_FBRD
   Definitions
      At line 29 in file InChar.s
   Uses
      At line 105 in file InChar.s
Comment: UART0_FBRD used once
UART0_FR 4000C018

Symbol: UART0_FR
   Definitions
      At line 32 in file InChar.s
   Uses
      At line 128 in file InChar.s
Comment: UART0_FR used once
UART0_IBRD 4000C024

Symbol: UART0_IBRD
   Definitions
      At line 28 in file InChar.s
   Uses
      At line 99 in file InChar.s
Comment: UART0_IBRD used once
UART0_LCRH 4000C02C

Symbol: UART0_LCRH
   Definitions
      At line 30 in file InChar.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 110 in file InChar.s
Comment: UART0_LCRH used once
15 symbols
354 symbols in table
